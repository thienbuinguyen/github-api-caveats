{"id": 2839, "text": "If the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason then a CLASS_1 is thrown.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2840, "text": "In practice, PARAMETER_0 and PARAMETER_1 should be a CLASS_0 node, a CLASS_1 node, or a CLASS_2 node.", "annotations": [{"label": 2, "user": 1}, {"label": 5, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2841, "text": "Constructs an CLASS_0 object with the given format names and format class names, as well as a boolean indicating whether the standard format is supported.", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2842, "text": "Creates a new AtomicReference with null initial value.", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2843, "text": "Construct a new exception with no message.", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2844, "text": "For example, if the algorithm is DES, this constructor does not check if PARAMETER_1 is 8 bytes long, and also does not check for weak or semi-weak keys.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2845, "text": "The cookie's value can be changed after creation with the METHOD_0 method.", "annotations": [{"label": 4, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2846, "text": "If the second argument is true, then bytes will be written to the end of the file rather than the beginning.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2847, "text": "Also note that the number of visible rows in the list cannot be changed after it has been created.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2848, "text": "Constructs a new CLASS_0 with the given message and the error index.", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2849, "text": "Assistive technologies should not create instances of EventQueueMonitor by themselves.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2850, "text": "If the authority component is absent in the spec then the authority of the new URL will be inherited from the context.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2851, "text": "The detail message is set to (cause == null ?", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2852, "text": "The array must have at least two elements or calling the filter method for Rasters will throw an IllegalArgumentException.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2853, "text": "The PARAMETER_0 of the notification depends on whether it is being sent by a connector server or a connector client: For a connector server, if it is registered in an MBean server, the source is the CLASS_0 under which it is registered.", "annotations": [{"label": 2, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2854, "text": "Note: This constructor will use null as the value of the algorithm parameters.", "annotations": [{"label": 3, "user": 1}], "meta": {}, "annotation_approver": null}
{"id": 2855, "text": "Implementation note: Java platform implementers are encouraged to document their implementation's behavior with respect to the PARAMETER_3 parameter.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2856, "text": "Note: JTree collapses all nodes under the specified node, so that only its immediate children are visible.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2857, "text": "This method throws an CLASS_1 if PARAMETER_2 is null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2858, "text": "The contents of the message are not set here; use METHOD_0 to set them subsequently.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2859, "text": "The URLs will be searched in the order specified for classes and resources after first searching in the specified parent class loader.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2860, "text": "Constructs a new runtime exception with null as its detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2861, "text": "If not null, the PARAMETER_0 array specifies the number of significant bits per color and alpha component and its length should be at least the number of components in the CLASS_1 if there is no alpha information in the pixel values, or one more than this number if there is alpha information.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2862, "text": "If the image has a \"comment\" property that is a string, then the string is used as the description of this icon.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2863, "text": "The contents of the character array are copied; subsequent modification of the character array does not affect the newly created string.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2864, "text": "This constructor is identical to METHOD_0 with the exception of the fact that it allows the thread stack size to be specified.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2865, "text": "Allocates a new CLASS_0 object so that it has PARAMETER_0 as its run object, has the specified PARAMETER_1 as its name, belongs to the thread group referred to by PARAMETER_2, has the specified PARAMETER_3, and inherits initial values for inheritable thread-local variables if PARAMETER_4 is true.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2866, "text": "A lightweight component must be hosted by a native container somewhere higher up in the component tree (for example, by a CLASS_1 object).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2867, "text": "Note: if the specified output stream is null, a NullPointerException may be thrown later when it is used.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2868, "text": "For an FIELD_1 event type, PARAMETER_1 must not be null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2869, "text": "A detail message is a CLASS_1 that describes this particular exception.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2870, "text": "If no face for the requested style can be found, the font system may apply algorithmic styling to achieve the desired style.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2871, "text": "Characters in the other category are permitted wherever RFC 2396 permits escaped octets, that is, in the user-information, path, query, and fragment components, as well as in the authority component if the authority is registry-based.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2872, "text": "The contents of the PARAMETER_0 argument are copied; subsequent modification of the byte array does not affect the newly created object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2873, "text": "Either socket factory may be null, in which case the corresponding client or server socket creation method of CLASS_0 is used instead.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2874, "text": "Construct an exception with the assocated message and exception", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2875, "text": "Constructs a new throwable with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2876, "text": "A concrete subclass of this class must call this constructor when it is activated via the two parameter constructor described above.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2877, "text": "The CLASS_3 contained in the event defaults to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2878, "text": "Constructs an exception reporting that the SSL peer's identity has not been verified.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2879, "text": "The number of bands will be inferred from the lengths of the bandOffsets bankIndices arrays, which must be equal.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2880, "text": "The connection backlog defaults to fifty connections queued up before the system starts to reject new connection requests.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2881, "text": "The contents of the string builder are copied; subsequent modification of the string builder does not affect the newly created string.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2882, "text": "This stream will not flush automatically.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2883, "text": "The key CLASS_1 should be a locale independent key for the role.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2884, "text": "An CLASS_0 is thrown if the length of the array PARAMETER_2 is non-zero and either PARAMETER_0 is negative, PARAMETER_1 is negative, or METHOD_0 is greater than the length of PARAMETER_2.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2885, "text": "Construct a print exception with the given detail message and chained exception.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2886, "text": "If a scheme-specific part is given then it is appended.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2887, "text": "It must be connected to a piped reader, either by the receiver or the sender, before being used.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2888, "text": "All of the arrays specifying the color components must have at least the specified number of entries.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2889, "text": "For an FIELD_0 event without text, PARAMETER_0 and PARAMETER_1 must be null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2890, "text": "The local part and prefix are not validated as a NCName as specified in Namespaces in XML.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2891, "text": "Provide a way for subclasses that are completely reimplementing ObjectOutputStream to not have to allocate private data just used by this implementation of ObjectOutputStream.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2892, "text": "Tooltip may be not visible on some platforms.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2893, "text": "Construct an exception with a nested inner exception and a message", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2894, "text": "If IPv6 literal address is used, it should be enclosed in square brackets ('[' and ']'), as specified by RFC 2732; However, the literal IPv6 address format defined in RFC 2373: IP Version 6 Addressing Architecture is also accepted.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2895, "text": "The offsets of PARAMETER_0 and PARAMETER_1 are relative to the current composed text; that is, the composed text within the METHOD_1 of the preceding FIELD_0 event if the event being constructed as a FIELD_1 event.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2896, "text": "If the object implements Attributes2, values of the specified and declared flags for each attribute are copied.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2897, "text": "The CLASS_1 is not copied.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2898, "text": "By default, there are four visible lines and multiple selections are not allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2899, "text": "When (approximately) the given limit has been written to one file, another file will be opened.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2900, "text": "If there is a security manager, its METHOD_0 method is first called with the PARAMETER_0 argument as its argument to ensure the operation is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2901, "text": "An IPv6 address must be enclosed in square brackets ('[' and ']') as specified by RFC 2732.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2902, "text": "An \"activatable\" remote object must have a constructor that takes two arguments: the object's activation identifier (FIELD_0), and the object's initialization data (a CLASS_0).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2903, "text": "If the value of PARAMETER_0 is true, then the user can select multiple items from the list.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2904, "text": "If the file does not already exist then an attempt will be made to create it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2905, "text": "Creates a new CLASS_0 that will trip when the given number of parties (threads) are waiting upon it, and which will execute the given barrier action when the barrier is tripped, performed by the last thread entering the barrier.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2906, "text": "The METHOD_0 and METHOD_1 of the stack trace element will be null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2907, "text": "Subclasses that use this constructor must override METHOD_0, and METHOD_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2908, "text": "The PARAMETER_0 parameter must be a value for which METHOD_0 returns true.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2909, "text": "Constructs an instance of a NameClassPair given its name, class name, and whether it is relative to the listing context.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2910, "text": "Normally, a stream should be used rather than a reader, so that the XML parser may resolve character encoding specified by the XML declaration.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2911, "text": "Note that the name constraints byte array supplied here is cloned to protect against subsequent modifications.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2912, "text": "If the host argument is empty, but not null String then the localhost is used.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2913, "text": "Instead, an application should register an activation descriptor and export a remote object separately, so that exceptions can be handled properly.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2914, "text": "Note: Some platforms may not support showing the user-specified title in a file dialog.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2915, "text": "Note: There is no validation of PARAMETER_1 for overflow and because of this it is recommended that you use the constructor METHOD_2.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2916, "text": "Note: There is no validation of PARAMETER_0 for overflow and because of this it is recommended that you use the constructor METHOD_2.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2917, "text": "Protected constructor as METHOD_0 or METHOD_1 or METHOD_2 should be used to create a new instance of an CLASS_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2918, "text": "If the PARAMETER_2 value is null, an empty array is used as the value of the PARAMETER_2 property.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2919, "text": "The PARAMETER_1 parameter must be an array of a Java type appropriate for the type of the TIFF field.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2920, "text": "Constructs an SPI layer exception indicating that a CLASS_0 with unresolved references has been encountered.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2921, "text": "This should only be used if you are creating your own CLASS_0 subclass with a custom FIELD_0 class.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2922, "text": "NOTE: This constructor does not allow you to create an unowned CLASS_5.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2923, "text": "Otherwise, this priority queue will be ordered according to the natural ordering of its elements.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2924, "text": "The options objects should contain either instances of CLASS_1s, (which are added directly) or CLASS_2 (which are wrapped in a CLASS_3).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2925, "text": "Input parameters PARAMETER_0 and PARAMETER_1 should not be null, though implementations may vary in choosing whether or not to throw CLASS_0 in that case.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2926, "text": "If the extension object is unsuitable, an CLASS_1 should be thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2927, "text": "When a font face name is specified, the face's style and the style argument are merged to locate the best matching font from the same family.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2928, "text": "If the PRIMITIVE_0 is true, color samples are assumed to have been multiplied by the alpha sample.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2929, "text": "If PARAMETER_0 is null and PARAMETER_1 is not null, then an CLASS_3 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2930, "text": "To modify the Principals Set, the caller must have METHOD_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2931, "text": "You must call the METHOD_0 method to set the object to be translated after calling this constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2932, "text": "The METHOD_0 is initialized to null if METHOD_1 or to METHOD_2 if METHOD_3 and the vendor code is initialized to 0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2933, "text": "When the postition-index equals zero, the node is inserted at the beginning of the list.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2934, "text": "If PARAMETER_0 is 0, the APDU is encoded as ISO 7816 case 1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2935, "text": "In addition the FONT attribute is not recognized by this constructor (see METHOD_0).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2936, "text": "Constructs an UnrecoverableKeyException with the specified detail message, which provides more information about why this exception has been thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2937, "text": "Note: (1) The CLASS_1 object from which a CLASS_0 object is created must have materialized the SQL FIELD_1 value's data on the client before it is passed to the constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2938, "text": "A ServiceConfigurationError, CLASS_3 or CLASS_4 thrown when loading or calling an LdapDnsProvider, if encountered, will be propagated to the calling thread.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2939, "text": "If the PARAMETER_0 array is not empty, then it is cloned by the constructor as if by METHOD_4, and each call to METHOD_5 returns a new clone.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2940, "text": "CLASS_0 cannot serialize null array values.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2941, "text": "Constructs the source explicitly with the specified value PARAMETER_0 as the encoding input P. Note:", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2942, "text": "Constructs a CLASS_0 with an empty, read-only, model.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2943, "text": "This constructor is typically called by one of the METHOD_0 methods when creating, within an MBean server, a connector server that makes it available remotely.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2944, "text": "If PARAMETER_0 is true, the CLASS_0 will use a double buffer.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2945, "text": "If the specified locale contains the FIELD_0 for the numbering system, the instance is initialized with the specified numbering system if the JRE implementation supports it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2946, "text": "The resulting object will have an error index of -1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2947, "text": "Note that objects specified by a descriptor created with this constructor will only be activated on demand (by default, the restart mode is false).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2948, "text": "If PARAMETER_2 or PARAMETER_3 is null, or if both PARAMETER_0 and PARAMETER_1 are specified and METHOD_5 then an CLASS_2 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2949, "text": "Constructs a new error with the specified detail message and cause.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2950, "text": "This constructor is especially useful when an application is creating its own exception from within a CLASS_0 callback, and needs to wrap an existing exception that is not a subclass of CLASS_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2951, "text": "For example, if the algorithm is DES, this constructor does not check if PARAMETER_0 is 8 bytes long, and also does not check for weak or semi-weak keys.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2952, "text": "Wrap an existing exception in a TransformerException.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2953, "text": "If there is a security manager, its METHOD_0 method is called with the PARAMETER_0 argument as its argument to ensure the operation is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2954, "text": "Care must be taken when passing a value of false for PARAMETER_4, as it may lead to unexpected behavior if the new thread executes code that expects a specific thread-local value to be inherited.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2955, "text": "Constructs an instance of a Binding given its name, object, and whether the name is relative.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2956, "text": "NOTE: Any popup components (CLASS_2, CLASS_3, CLASS_4) created within a modal dialog will be forced to be lightweight.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2957, "text": "The existing exception will be embedded in the new one, but the new exception will have its own message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2958, "text": "The METHOD_0 flag is set to false if PARAMETER_1 is non-null, otherwise it is set to true and the column model is populated with suitable CLASS_1 for the columns in PARAMETER_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2959, "text": "The key CLASS_1 should be a locale independent key for the relation.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2960, "text": "This constructor does not check if the given bytes indeed specify a secret key of the specified algorithm.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2961, "text": "For an FIELD_3 event type, one of PARAMETER_0 or PARAMETER_1 may be null if the new or old binding is outside of the scope for which the listener has registered.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2962, "text": "The mode argument must be either FIELD_0 or FIELD_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2963, "text": "If PARAMETER_0 is null, a new CLASS_0 is initialized with default values.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2964, "text": "If the file does not reside on a local device then no such guarantee is made.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2965, "text": "If there is a security manager, this method calls its METHOD_1 method with the PARAMETER_0 argument as its argument to ensure the operation is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2966, "text": "If PARAMETER_1 is an invalid value, an exception will be thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2967, "text": "Note that per RFC 6066, the encoded server name value of a hostname is FIELD_0-compliant.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2968, "text": "Protected constructor may be called only by subclasses.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2969, "text": "The distinguished name must be specified using the grammar defined in RFC 1779 or RFC 2253 (either format is acceptable).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2970, "text": "Otherwise an attempt to execute this CLASS_0 will result in a CLASS_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2971, "text": "Constructs an CLASS_0 with null for its error detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2972, "text": "An exception will be thrown if an attempt is made to construct another object of a given class with the same integer key as a pre-existing instance of that subclass of Key.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2973, "text": "Empty relative paths are permitted; this seems to be the intent of RFC 2396 although the grammar does not permit it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2974, "text": "Construct a new CLASS_0 given the CLASS_1 to be used in this Drag and Drop operation, the CLASS_2 this CLASS_0 should \"observe\" for drag initiating gestures, the action(s) supported for this Drag and Drop operation, and the CLASS_3 to notify once a drag initiating gesture has been detected.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2975, "text": "If CLASS_6 is null CLASS_8 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2976, "text": "The scale of the CLASS_0, before any rounding, is zero.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2977, "text": "If the PRIMITIVE_1 is true, color samples are assumed to have been multiplied by the alpha sample.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2978, "text": "Creates a piped writer that is not yet connected to a piped reader.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2979, "text": "If the host is a literal IPv6 address but is not enclosed in square brackets ('[' and ']') then the square brackets are added.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2980, "text": "That is, only those values of JobKOctets in the one range are supported.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2981, "text": "The METHOD_2 and METHOD_3 springs are special springs, created by the METHOD_4 and METHOD_5 methods, which track the size characteristics of the component when they change.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2982, "text": "Each array must be at least as large as PARAMETER_0 + the corresponding METHOD_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2983, "text": "null : cause.toString()) (which typically contains the class and detail message of cause).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2984, "text": "The algorithm name (case insensitive) should be provided as the encryption type string defined on the IANA Kerberos Encryption Type Numbers page.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2985, "text": "To obtain the instance of CLASS_0 with the standard compact patterns for a CLASS_1 and CLASS_2, it is recommended to use the factory methods given by CLASS_3 for compact number formatting.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2986, "text": "Subclasses of this class should enforce similar policy.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2987, "text": "Creates a new AtomicReferenceArray of the given length, with all elements initially null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2988, "text": "Creates a CLASS_0 so that it is not yet connected.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2989, "text": "The following types are supported: METHOD_0 METHOD_1 METHOD_2 METHOD_3 METHOD_4 METHOD_5 METHOD_6 METHOD_7 CLASS_0 CLASS_1 CLASS_2 The name must be a valid Java identifier (for example, \"maxThroughput\").", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2990, "text": "Constructs a ConvolveOp given a Kernel, an edge condition, and a RenderingHints object (which may be null).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2991, "text": "If the PARAMETER_0 argument is false, alpha is defaulted to 255.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2992, "text": "Note that the PARAMETER_0 byte array is cloned to protect against subsequent modification.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2993, "text": "Only attributes that have values of valid types will affect the new CLASS_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2994, "text": "Provide a way for subclasses that are completely reimplementing ObjectInputStream to not have to allocate private data just used by this implementation of ObjectInputStream.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2995, "text": "Enums, arrays, and classes are not supported.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2996, "text": "PARAMETER_0 is an array of rows, so the value of the cell at row 1, column 5 can be obtained with the following code: rowData[1][5]; All rows must be of the same length as PARAMETER_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2997, "text": "The transfer type will be the smallest of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, or DataBuffer.TYPE_INT that can hold a single pixel (or DataBuffer.TYPE_UNDEFINED if bits is greater than 32).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2998, "text": "Normally, this will be called only by the AWT Toolkit during initialization time.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 2999, "text": "For example, METHOD_0 should not have length 0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3000, "text": "Constructs a new error with the specified detail message, cause, suppression enabled or disabled, and writable stack trace enabled or disabled.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3001, "text": "That is, only those pages in the one range are to be printed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3002, "text": "Subclasses must set the Comparator using METHOD_0 before installing this FocusTraversalPolicy on a focus cycle root or KeyboardFocusManager.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3003, "text": "If there is alpha, the METHOD_0 specifies how to interpret color and alpha samples in pixel values.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3004, "text": "Note that passing in an invalid PARAMETER_1 results in unspecified behavior.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3005, "text": "If a manifest is present, also attempts to verify the signatures if the JarInputStream is signed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3006, "text": "null : cause.toString()).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3007, "text": "The first byte of the data array must be a valid system exclusive status byte (0xF0 or 0xF7).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3008, "text": "If the authority component is empty then the user-information, host, and port components are undefined.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3009, "text": "There will be an alpha component if PARAMETER_0 is true.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3010, "text": "Also note: An empty host String (\"\") is equivalent to \"localhost\".", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3011, "text": "Used to create an event when the node structure has changed in some way, identifying the path to the root of the modified subtree as a TreePath object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3012, "text": "This seems to be the intent of RFC 2396 section 3.2.2 although the grammar does not permit it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3013, "text": "If you provide CLASS_1s, you must ensure that when the CLASS_1 is clicked it messages METHOD_0 in the created CLASS_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3014, "text": "It may be more convenient to use one of the CLASS_1 factory methods instead of this general purpose constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3015, "text": "For example, a SaslException might result from a problem with the callback handler, which might throw a NoSuchCallbackException if it does not support the requested callback, or throw an IOException if it had problems obtaining data for the callback.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3016, "text": "Constructs an CLASS_0 with null as its detail message string and with no saved throwable object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3017, "text": "The width of the matrix must be equal to the number of bands in the source CLASS_1, optionally plus one.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3018, "text": "If PARAMETER_0 has annotations (directly present, indirectly present, or associated), then those annotations are recursively included.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3019, "text": "The argument PARAMETER_0 should be one of CLASS_2 that represents a single action.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3020, "text": "If the forceRGB parameter is true, then the pixels will be accumulated in the default RGB ColorModel anyway.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3021, "text": "If the field values are not Strings, the programmer will have to reset or convert these fields correctly.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3022, "text": "Creates an empty (no viewport view) CLASS_0 where both horizontal and vertical scrollbars appear when needed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3023, "text": "If the METHOD_1 property of the supplied environment consists of a URL (or a list of URLs) using the ldap protocol the resulting CLASS_0 will use an LDAP server resolved by the configured CLASS_1: If this is the first CLASS_2 created with a METHOD_1 using the ldap protocol then the ServiceLoader mechanism is used to locate LdapDnsProvider implementations using the system class loader.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3024, "text": "If PARAMETER_1 is not a sibling of PARAMETER_0, then an CLASS_3 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3025, "text": "Entries will be sorted according to the specified attribute in the specified sort order and using the specified matching rule, if supplied.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3026, "text": "Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and the specified System ID.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3027, "text": "Note: ISO 639 is not a stable standard; some of the language codes it defines (specifically \"iw\", \"ji\", and \"in\") have changed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3028, "text": "The categories must all be members of the set of service types listed in the class specification.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3029, "text": "null : cause.toString()) (which typically contains the class and detail message of PARAMETER_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3030, "text": "Application should call the CardTerminal.connect() method to obtain a Card object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3031, "text": "There must be an entry in the PARAMETER_1 array for each data array.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3032, "text": "Note that the contents of the three array parameters itemNames, itemDescriptions and itemTypes are internally copied so that any subsequent modification of these arrays by the caller of this constructor has no impact on the constructed CLASS_0 instance.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3033, "text": "When a subsequent request is made to load the instrument, the sound bank will search its contents for this instrument's CLASS_0, and the instrument will be loaded into the synthesizer at the bank and program location indicated by the CLASS_0 object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3034, "text": "A pixel is valid if the CLASS_2 value at that index is set, and is invalid if the CLASS_2 bit at that index is not set.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3035, "text": "The type should be one of: INSERT, UPDATE and DELETE.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3036, "text": "If the Guard object is null, then no restrictions will be placed on who can access the object.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3037, "text": "The METHOD_0 is not initialized, and may subsequently be initialized by a call to the METHOD_1 method.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3038, "text": "This constructor will not modify its parameters or save references to them, but may save a clone or copy.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3039, "text": "The contents of the byte array are copied; subsequent modification of the byte array does not affect the newly created key.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3040, "text": "Constructs a new CLASS_0 object from the given keysize, public-exponent value, and null key parameters.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3041, "text": "Only elements PARAMETER_1 through PARAMETER_1 + PARAMETER_2 - 1 should be used by accessors of this CLASS_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3042, "text": "A METHOD_0 string is legal, but not recommended.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3043, "text": "To modify the public credential Set, the caller must have METHOD_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3044, "text": "This relationship typically does not hold, however, when a METHOD_0 URI that is created in a virtual machine on one operating system is converted into an abstract pathname in a virtual machine on a different operating system.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3045, "text": "If the encryption algorithm has parameters whose value is not null, a different constructor, e.g.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3046, "text": "If PARAMETER_0 is null, the shared owner will be used and this window will not be focusable.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3047, "text": "If any of the attributes is a UDT whose name is in an entry in the type map, the attribute will be mapped according to the corresponding CLASS_1 implementation.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3048, "text": "Creates an empty property list with no default values, and with an initial size accommodating the specified number of elements without the need to dynamically resize.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3049, "text": "If the PARAMETER_1 is 0, there is no alpha.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3050, "text": "This constructor has the same effect as Thread (null, null, gname), where METHOD_0 is a newly generated name.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3051, "text": "This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 5280 and X.509.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3052, "text": "When the PARAMETER_1 is FIELD_3, FIELD_4, or FIELD_5 the PARAMETER_0 array argument is ignored.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3053, "text": "This protected constructor is intended for use by providers of file-reading services when returning information about an audio file or about supported audio file formats.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3054, "text": "The value provided should be greater than 0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3055, "text": "Constructs a new instance of ContextNotEmptyException with all name resolution fields and explanation initialized to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3056, "text": "An empty char[] is used if null is specified for PARAMETER_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3057, "text": "Constructs an instance of InvalidNameException with all fields set to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3058, "text": "Constructs an exception with the specified detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3059, "text": "Constructs an UnrecoverableEntryException with the specified detail message, which provides more information about why this exception has been thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3060, "text": "The arrays must describe a possible Huffman table.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3061, "text": "This constructor is useful when subsequent callers of the CLASS_0 object might not know the algorithm of the key.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3062, "text": "If there is a security manager, its METHOD_0 method is called with the host name as its argument to check the permission to resolve it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3063, "text": "All the non-link-related and link-related fields are initialized to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3064, "text": "Constructs a new runtime exception with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3065, "text": "Constructs a CLASS_0 with null as its error detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3066, "text": "Caller should not modify mutable keys and values in PARAMETER_0 after it has been passed to the constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3067, "text": "Constructs a new runtime exception with the specified detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3068, "text": "As long as the RequiredModelMBean is not registered with the MBeanServer yet, the RequiredModelMBean's MBeanInfo and Descriptors can be customized using the METHOD_0 method.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3069, "text": "The state of this check box is set to \"off,\" and it is not part of any check box group.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3070, "text": "If the PARAMETER_0 array is not empty, then it is cloned by the constructor as if by METHOD_1, and each call to METHOD_2 returns a new clone.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3071, "text": "If PARAMETER_0 is null or has zero length, an CLASS_1 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3072, "text": "The \"rws\" and \"rwd\" modes work much like the METHOD_1 method of the CLASS_3 class, passing arguments of true and false, respectively, except that they always apply to every I/O operation and are therefore often more efficient.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3073, "text": "Note that use of this constructor is unnecessary since Strings are immutable.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3074, "text": "If PARAMETER_0 is true, the character case of attribute identifiers is ignored; otherwise the case is significant.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3075, "text": "If the system identifier is a URL, it must be fully resolved (it may not be a relative URL).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3076, "text": "Note: Using the CLASS_0 constructors that both register and export an activatable remote object is strongly discouraged because the actions of registering and exporting the remote object are not guaranteed to be atomic.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3077, "text": "Changing or removing the property has no effect after the initialization.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3078, "text": "The CLASS_2 contained in PARAMETER_0 should contain the values for that row.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3079, "text": "It is provided only to enable serialization of subclasses.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3080, "text": "Constructor useful for markup when the markup will not be stored in the document.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3081, "text": "Note that the detail message associated with PARAMETER_0 is not automatically incorporated in this exception's detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3082, "text": "The masks specify which bits in an PRIMITIVE_0 pixel representation contain the red, green and blue color samples and the alpha sample, if present.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3083, "text": "The METHOD_1 is not initialized, and may subsequently be initialized by a call to the METHOD_2 method.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3084, "text": "Default constructor, no message put in exception.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3085, "text": "Constructs a new CLASS_0 with null as its error message string.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3086, "text": "Note: There is no validation of PARAMETER_2 for overflow and because of this it is recommended that you use the constructor METHOD_2.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3087, "text": "Constructs a new menu with the specified label, indicating whether the menu can be torn off.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3088, "text": "Such a name returns true when METHOD_0 is invoked on it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3089, "text": "Constructs an a CLASS_0 with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3090, "text": "\"resolve\" is automatically added when any of the other three are specified.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3091, "text": "Constructs a certificate exception with the given detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3092, "text": "Constructor used by subclasses only.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3093, "text": "The offsets of caret and visiblePosition are relative to the current composed text; that is, the composed text within PARAMETER_0 if this is an FIELD_0 event, the composed text within the PARAMETER_0 of the preceding FIELD_0 event otherwise.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3094, "text": "Constructs a InvocationTargetException with a target exception and a detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3095, "text": "When METHOD_0 is called, a listener is selected if it was added with a null CLASS_1, or if METHOD_1 returns true for the notification being sent.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3096, "text": "This constructor is especially useful when an application is creating its own exception from within a DocumentHandler callback.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3097, "text": "If the application has specified a server socket factory, that factory's METHOD_0 method is called to create the actual socket implementation.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3098, "text": "Concrete subclasses should define a constructor that takes an CLASS_0 as parameter.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3099, "text": "Even if inconsistent values for relative and absolute coordinates are passed to the constructor, the mouse event instance is still created and no exception is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3100, "text": "If there is a security manager installed, this method first calls the security manager's METHOD_0 method with a METHOD_1 permission to ensure it's ok to enable subclassing.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3101, "text": "An CLASS_0 is thrown if the length of the array PARAMETER_1 is non-zero and either PARAMETER_0 is negative, PARAMETER_2 is negative, or METHOD_0 is greater than the length of PARAMETER_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3102, "text": "Constructs a new JavaScript exception with null as it's detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3103, "text": "The argument PARAMETER_2 should be either a bitwise mask of old METHOD_1 constants or a bitwise mask of extended METHOD_2 constants.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3104, "text": "Constructs a new BindException with the specified detail message as to why the bind error occurred.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3105, "text": "Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3106, "text": "The PARAMETER_0 argument must either be null or contain only CLASS_2 objects.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3107, "text": "The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3108, "text": "When using this constructor, the prefix is set to FIELD_1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3109, "text": "This constructor does not throw any exception for invalid PARAMETER_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3110, "text": "There must be an entry in the offsets array for each data array.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3111, "text": "It is non-public as it is intended that there only be one LogManager object, whose value is retrieved by calling LogManager.getLogManager.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3112, "text": "Thus if the argument name is \"fred\", it will assume that there is an indexed reader method \"getFred\", a non-indexed (array) reader method also called \"getFred\", an indexed writer method \"setFred\", and finally a non-indexed writer method \"setFred\".", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3113, "text": "The new output stream instance is created as if by invoking the 4-argument constructor DeflaterOutputStream(out, def, size, false).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3114, "text": "The details of such restrictions, and when those restrictions apply (during initialization of the runtime for example), are implementation specific and therefore not specified No validation of the inputs is performed by this constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3115, "text": "The result returned by the hook must be a method handle of exactly the same type as the call site.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3116, "text": "If the specified value is unreasonably low for the platform, the virtual machine may instead use some platform-specific minimum value; if the specified value is unreasonably high, the virtual machine may instead use some platform-specific maximum.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3117, "text": "A FIELD_0 created via this constructor will not clash with any FIELD_0s generated via the no-arg constructor.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3118, "text": "Constructs a new object with keys and values initialized from the specified Map object which may be null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3119, "text": "Note that the size of the IV (block size), starting at PARAMETER_1 inclusive, must be twice the word size.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3120, "text": "They contain only the ones passed to this constructor and the current Policy will not be consulted.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3121, "text": "The name of the state should coincide with the name used in UIDefaults.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3122, "text": "Wrap an existing exception in a SAXParseException.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3123, "text": "If the PARAMETER_1 pathname string is absolute then it is converted into a relative pathname in a system-dependent way.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3124, "text": "An CLASS_1 is thrown if the precision section of the string is out of range (< 0) or the string is not in the format created by the METHOD_0 method.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3125, "text": "When the position index equals the size of the list, the node is \"inserted\" at (appended to) the end of the list.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3126, "text": "If no hints are specified (PARAMETER_0 is null), the interpolation type is FIELD_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3127, "text": "If, if the address is null, creates an unbound socket.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3128, "text": "Constructs an CLASS_0 with a message string and a reference to the CLASS_1 that caused the parsing error.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3129, "text": "If there is a security manager, its METHOD_0 method is called with the host address and PARAMETER_0 as its arguments.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3130, "text": "Creates a CLASS_0 object with the SQLState initialized to 01004 when PARAMETER_0 is set to true and 22001 when PARAMETER_0 is set to false, the reason set to \"Data truncation\", the vendor code set to 0, and the other fields set to the given values.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3131, "text": "Constructs a new error with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3132, "text": "This constructor should be used when an operation involving one file fails and there isn't any additional information to explain the reason.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3133, "text": "If the value of PARAMETER_0 is FIELD_0, then the file dialog is finding a file to read, and the files shown are those in the current directory.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3134, "text": "The new output stream instance is created as if by invoking the 2-argument constructor GZIPOutputStream(out, false).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3135, "text": "When translated into the base Raster's coordinate system, aRegion must be contained by the base Raster.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3136, "text": "Finally, if a fragment is given then a hash character ('#') is appended, followed by the fragment.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3137, "text": "The string must contain at least one digit in either the integer or the fraction.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3138, "text": "If this is the first URL object being created with the specified protocol, a stream protocol handler object, an instance of class CLASS_0, is created for that protocol: If the application has previously set up an instance of CLASS_1 as the stream handler factory, then the METHOD_0 method of that instance is called with the protocol string as an argument to create the stream protocol handler.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3139, "text": "Construct a new integer attribute with the given integer value, which must lie within the given range.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3140, "text": "Also note that the number of visible lines in the list cannot be changed after it has been created.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3141, "text": "Constructs a new CardException with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3142, "text": "This method throws an CLASS_2 if PARAMETER_0 or PARAMETER_1 is null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3143, "text": "Even if inconsistent values for relative and absolute coordinates are passed to the constructor, the MenuDragMouseEvent instance is still created.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3144, "text": "Creates a new guarded invocation, with a guard method handle, any number of switch points that can be used to invalidate it, and an exception that if thrown when invoked also invalidates it.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3145, "text": "If the document model is null, a default one will be created.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3146, "text": "The new CLASS_0 object contains the same elements as the CLASS_1 object from which it is built, except when the base type is the SQL type FIELD_0, FIELD_1, FIELD_2 or FIELD_3.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3147, "text": "The array of Tabs passed in must be sorted in ascending order.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3148, "text": "Note that CLASS_0 objects created by this constructor may be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3149, "text": "It will be invoked when an application calls one of the TerminalFactory.getInstance() methods and receives the METHOD_0 object specified by the application.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3150, "text": "Creates a CLASS_0 with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3151, "text": "Constructs a new CLASS_0 with the specified cause and a detail message of (cause == null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3152, "text": "If the whole sequence does not represent a well-defined color conversion, an exception is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3153, "text": "If PARAMETER_0 is non-null and is a directory, the file will be created there.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3154, "text": "If bindAddr is null, it will default accepting connections on any/all local addresses.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3155, "text": "The scrollbar policies specify when the scrollbars are displayed, For example, if PARAMETER_0 is FIELD_0 then the vertical scrollbar only appears if the view doesn't fit vertically.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3156, "text": "Constructs a certificate exception with no detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3157, "text": "Note that this constructor should generally be called by other constructors or create methods, it should not be used directly.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3158, "text": "If PARAMETER_0 has annotations (directly present, indirectly present or associated), then those annotation are recursively included.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3159, "text": "If the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading then a CLASS_3 is thrown.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3160, "text": "If a query is given then a question-mark character ('?')", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3161, "text": "All the other fields are initialized to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3162, "text": "This constructor writes the serialization stream header to the underlying stream; callers may wish to flush the stream immediately to ensure that constructors for receiving ObjectInputStreams will not block when reading the header.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3163, "text": "If the value of PARAMETER_0 is FIELD_1, the file dialog is finding a place to write a file.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3164, "text": "If there is a security manager, its METHOD_2 method is called with the pathname of the PARAMETER_1 argument as its argument to see if read access to the file is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3165, "text": "First, if there is a security manager, its METHOD_0 method is called with the METHOD_1 argument as its argument to ensure the read is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3166, "text": "When a font family name is specified, the style argument is used to select the most appropriate face from the family.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3167, "text": "Note that setting the color to null is undefined and may have unpredictable results.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3168, "text": "The BIDI_EMBEDDING attribute in the text, if present, represents embedding level information.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3169, "text": "Its value is probably of interest only to the server.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3170, "text": "Its length should be the number of components in the CLASS_1 if there is no alpha information in the pixel values, or one more than this number if there is alpha information.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3171, "text": "The value of the exponent must lie between -FIELD_0 (FIELD_1+1) and FIELD_0, inclusive.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3172, "text": "If index0 is > index1, index0 and index1 will be swapped such that index0 will always be <= index1.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3173, "text": "Note that passing in an invalid PARAMETER_0 parameter results in unspecified behavior.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3174, "text": "Constructs a new exception with the specified detail message and cause.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3175, "text": "Additionally, if a security manager is installed, a CLASS_1 must be granted and the service principal of the permission must minimally be inside the CLASS_0's realm.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3176, "text": "If that check fails with a CLASS_3 then a warning banner is created.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3177, "text": "This is used for throwing processor exceptions before the processing has started.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3178, "text": "All other fields set to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3179, "text": "If there is a security manager, its METHOD_0 method is first called with the SocketAddress port as its argument to ensure the operation is allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3180, "text": "Constructs an CLASS_0 with the specified cause and a detail message of (cause==null ?", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3181, "text": "Note that this constructor only stores references to the public and private key components in the generated key pair.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3182, "text": "If PARAMETER_0 has annotations (directly present, indirectly present, or associated), then those annotation are recursively included.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3183, "text": "Only keystore entries that contain trusted CLASS_2 are considered; all other certificate types are ignored.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3184, "text": "The array must be large enough to hold PARAMETER_0 elements.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3185, "text": "Constructor for parsing inside the document when the data has already been added, but len information is needed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3186, "text": "If there is a security manager, its METHOD_1 method is invoked.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3187, "text": "Create an XAException with a given error code.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3188, "text": "Hostnames in host components that comprise only a single domain label are permitted to start with an alphanum character.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3189, "text": "When the socket is created the METHOD_1 method is called to enable the SO_REUSEADDR socket option.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3190, "text": "When invoked on an CLASS_0 instance, the METHOD_0 method returns the class name of the array instances it describes (following the rules defined by the METHOD_1 method of METHOD_2), not the class name of the array elements (which is returned by a call to METHOD_3).", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3191, "text": "If the scheme component is defined in the given spec and does not match the scheme of the context, then the new URL is created as an absolute URL based on the spec alone.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3192, "text": "If the PARAMETER_3 value is null, an empty array is used as the value of the PARAMETER_3 property.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3193, "text": "All of the arrays specifying the components must have at least the specified number of entries.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3194, "text": "Creates a new PaintContext which does not attempt to cache or scale any cached images.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3195, "text": "Normally, a stream should be used rather than a reader, so that the XML parser can resolve character encoding specified by the XML declaration.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3196, "text": "It must be connected to a CLASS_1 before being used.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3197, "text": "For such CLASS_0 the default headless error message may be auto-generated for some platforms.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3198, "text": "By default, multiple selections are not allowed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3199, "text": "All other properties will be initialized to \"null\".", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3200, "text": "Creates a CLASS_0 with message, filename and linenumber to be used in error messages.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3201, "text": "Otherwise the PARAMETER_0 abstract pathname is taken to denote a directory, and the PARAMETER_1 pathname string is taken to denote either a directory or a file.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3202, "text": "All name resolution-related fields are initialized to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3203, "text": "This protected method is intended to be used by subclasses of CompoundName when they override methods such as clone(), getPrefix(), getSuffix().", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3204, "text": "Constructs a new CLASS_0 from the specified response code and exception detail message", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3205, "text": "Constructs a new throwable with null as its detail message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3206, "text": "The name is the symbolic name of the RuntimePermission, and the actions String is currently unused and should be null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3207, "text": "Otherwise, the path is treated as a relative path and is appended to the context path, as described in RFC2396.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3208, "text": "Constructs an exception reporting an SSL protocol error detected by an SSL subsystem.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3209, "text": "METHOD_0 and METHOD_1 will be set to null.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3210, "text": "All elements inserted into the set must be mutually comparable by the specified comparator: METHOD_0 must not throw a CLASS_0 for any elements METHOD_1 and METHOD_2 in the set.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3211, "text": "Constructs a new date-time exception with the specified message.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3212, "text": "If listener is non-null, METHOD_1 will be called immediately after METHOD_0 has returned, thrown an exception or the event was disposed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3213, "text": "This constructor creates a read-only model for the given CLASS_1, and then delegates to the constructor that takes a CLASS_2.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3214, "text": "Constructor: only used by the Java Virtual Machine.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3215, "text": "Creates an unconnected socket, specifying the type of proxy, if any, that should be used regardless of any other settings.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3216, "text": "If user information, a host, or a port are given then the string \"//\" is appended.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3217, "text": "Construct a CLASS_0 with a prompt and a boolean specifying whether the password should be displayed as it is being typed.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3218, "text": "Constructs an instance of this class with the specified illegal code point as defined by METHOD_0.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3219, "text": "The character case of attribute identifiers is significant when subsequently retrieving or adding attributes.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3220, "text": "Creates a CLASS_0 so that it is not yet METHOD_0 and uses the specified pipe size for the pipe's buffer.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3221, "text": "If there is a security manager, its METHOD_0 method is called with the proxy host address and port number as its arguments.", "annotations": [], "meta": {}, "annotation_approver": null}
{"id": 3222, "text": "Constructs a new exception with the specified message and cause.", "annotations": [], "meta": {}, "annotation_approver": null}
