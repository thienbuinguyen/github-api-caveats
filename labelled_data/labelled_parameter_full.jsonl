{"id": 16340, "text": "The non-null object to compare against.", "labels": ["NullnessNotAllowed"]}
{"id": 16341, "text": "The non-null object to be escaped.", "labels": ["NullnessNotAllowed"]}
{"id": 16342, "text": "The non-null string to be unescaped.", "labels": ["NullnessNotAllowed"]}
{"id": 16343, "text": "whether or not components should be vertically aligned on their baseline", "labels": ["Ambiguous"]}
{"id": 16344, "text": "Specifies whether or not the event can bubble.", "labels": ["Ambiguous"]}
{"id": 16345, "text": "Specifies whether or not the event's default action can be prevented.", "labels": ["Ambiguous"]}
{"id": 16346, "text": "Specifies whether or not control key was depressed during the Event.", "labels": ["Ambiguous"]}
{"id": 16347, "text": "Specifies whether or not alt key was depressed during the Event.", "labels": ["Ambiguous"]}
{"id": 16348, "text": "Specifies whether or not shift key was depressed during the Event.", "labels": ["Ambiguous"]}
{"id": 16349, "text": "Specifies whether or not meta key was depressed during the Event.", "labels": ["Ambiguous"]}
{"id": 16350, "text": "the Locale for which the font is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16351, "text": "the Locale for which the color is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16352, "text": "the Locale for which the icon is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16353, "text": "the Locale for which the border is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16354, "text": "the Locale for which the string is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16355, "text": "the Locale for which the int is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16356, "text": "the Locale for which the boolean is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16357, "text": "the Locale for which the object is desired; refer to UIDefaults for details on how a null Locale is handled", "labels": ["Ambiguous"]}
{"id": 16358, "text": "the Object to store; refer to UIDefaults for details on how null is handled", "labels": ["Ambiguous"]}
{"id": 16359, "text": "the asynchronous exception to throw.", "labels": ["Ambiguous"]}
{"id": 16360, "text": "the temporal object to convert, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16361, "text": "the length of the text required, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16362, "text": "the locale to use, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16363, "text": "the field to check, null returns false", "labels": ["Ambiguous"]}
{"id": 16364, "text": "the field to query the range for, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16365, "text": "the field to get, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16366, "text": "true if the length is required for a leap year", "labels": ["Ambiguous"]}
{"id": 16367, "text": "the target object to be adjusted, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16368, "text": "The new error handler.", "labels": ["Ambiguous"]}
{"id": 16369, "text": "if true then use GZIP compatible compression", "labels": ["Ambiguous"]}
{"id": 16370, "text": "The number of arguments that the returned function must accept.", "labels": ["Ambiguous"]}
{"id": 16371, "text": "the Class object that corresponds to the annotation type, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16372, "text": "If true, certificates are presented from target to most-trusted CA (forward); if false, from most-trusted CA to target (reverse).", "labels": ["Ambiguous"]}
{"id": 16373, "text": "true if start should be omitted", "labels": ["Ambiguous"]}
{"id": 16374, "text": "true if end should be omitted", "labels": ["Ambiguous"]}
{"id": 16375, "text": "the set of elements that must not occur inside the element", "labels": ["Ambiguous"]}
{"id": 16376, "text": "Use null to specify the default principal.", "labels": ["Ambiguous"]}
{"id": 16377, "text": "the number of seconds that the credential element should remain valid for initiating of security contexts.", "labels": ["Ambiguous"]}
{"id": 16378, "text": "the number of seconds that the credential element should remain valid for accepting security contexts.", "labels": ["Ambiguous"]}
{"id": 16379, "text": "the usage mode that this credential element should add to the credential.", "labels": ["Ambiguous"]}
{"id": 16380, "text": "The value of this parameter must be one of: INITIATE_AND_ACCEPT, ACCEPT_ONLY, and INITIATE_ONLY.", "labels": ["Ambiguous"]}
{"id": 16381, "text": "Must not be null.", "labels": ["NullnessNotAllowed"]}
{"id": 16382, "text": "how long to wait before giving up, in units of unit", "labels": ["Ambiguous"]}
{"id": 16383, "text": "element to be removed from this queue, if present", "labels": ["Ambiguous"]}
{"id": 16384, "text": "the array into which the elements of the queue are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose", "labels": ["Ambiguous"]}
{"id": 16385, "text": "the new error handler", "labels": ["Ambiguous"]}
{"id": 16386, "text": "The error as an exception.", "labels": ["Ambiguous"]}
{"id": 16387, "text": "the unknown directive, may be null", "labels": ["Ambiguous"]}
{"id": 16388, "text": "an additional parameter, may be null", "labels": ["Ambiguous"]}
{"id": 16389, "text": "Properties in this map override properties in the map specified when the JMXConnector was created, if any.", "labels": ["Ambiguous"]}
{"id": 16390, "text": "This parameter can be null, which is equivalent to an empty map.", "labels": ["Ambiguous"]}
{"id": 16391, "text": "Can be null, in which case requests will be performed on behalf of the authenticated Subject, if any.", "labels": ["Ambiguous"]}
{"id": 16392, "text": "a filter to select which notifications are to be delivered to the listener, or null if all notifications are to be delivered.", "labels": ["Ambiguous"]}
{"id": 16393, "text": "Can be null.", "labels": ["Ambiguous"]}
{"id": 16394, "text": "the wrapped error.", "labels": ["Ambiguous"]}
{"id": 16395, "text": "This is always an absolute URI, unless it is null because the XMLReader was given an InputSource without one.", "labels": ["Ambiguous"]}
{"id": 16396, "text": "This is never null when invoked by a SAX2 parser.", "labels": ["Ambiguous"]}
{"id": 16397, "text": "The public identifier of the external entity being referenced (normalized as required by the XML specification), or null if none was supplied.", "labels": ["Ambiguous"]}
{"id": 16398, "text": "This is always an absolute URI, unless it is null (likely because the XMLReader was given an InputSource without one).", "labels": ["Ambiguous"]}
{"id": 16399, "text": "This is never null when invoked by a SAX2 parser; only declared entities, and any external subset, are resolved by such parsers.", "labels": ["Ambiguous"]}
{"id": 16400, "text": "the non-null String to display in the title bar", "labels": ["NullnessNotAllowed"]}
{"id": 16401, "text": "true if add and setLayout are forwarded, false if they should operate directly on the JInternalFrame.", "labels": ["Ambiguous"]}
{"id": 16402, "text": "must be true", "labels": ["ExpectedValue"]}
{"id": 16403, "text": "true to specify that this internal frame should be maximizable; false to specify that it should not be", "labels": ["Ambiguous"]}
{"id": 16404, "text": "a boolean, where true means this internal frame should become selected (currently active) and false means it should become deselected", "labels": ["Ambiguous"]}
{"id": 16405, "text": "One of the constants defined by the Cursor class; if this parameter is null then this component will inherit the cursor of its parent", "labels": ["Ambiguous"]}
{"id": 16406, "text": "the bounds that this internal frame should be restored to", "labels": ["Ambiguous"]}
{"id": 16407, "text": "the category of a PrintServiceAttribute supported by this service - may not be null", "labels": ["NullnessNotAllowed"]}
{"id": 16408, "text": "It must be a Class that implements interface Attribute.", "labels": ["Ambiguous"]}
{"id": 16409, "text": "doc flavor for a supposed job, or null", "labels": ["Ambiguous"]}
{"id": 16410, "text": "set of printing attributes for a supposed job (both job-level attributes and document-level attributes), or null", "labels": ["Ambiguous"]}
{"id": 16411, "text": "doc flavor to test, or null", "labels": ["Ambiguous"]}
{"id": 16412, "text": "should be null.", "labels": ["ExpectedValue"]}
{"id": 16413, "text": "This parameter can be null, which indicates that implementations need not check the ssl parameters", "labels": ["Ambiguous"]}
{"id": 16414, "text": "the value to pass to the constructor, or null if this type of service does not use a constructorParameter.", "labels": ["Ambiguous"]}
{"id": 16415, "text": "(A null value is permitted, and indicates that the cause is nonexistent or unknown.)", "labels": ["Ambiguous"]}
{"id": 16416, "text": "The before module finder to find modules", "labels": ["Ambiguous"]}
{"id": 16417, "text": "The after module finder to locate modules when not located by the before module finder or in parent configurations", "labels": ["Ambiguous"]}
{"id": 16418, "text": "the nested error", "labels": ["Ambiguous"]}
{"id": 16419, "text": "if true, recursively clone the subtree under the specified node; if false, clone only the node itself.", "labels": ["Ambiguous"]}
{"id": 16420, "text": "Whether the attribute is a of type ID.", "labels": ["Ambiguous"]}
{"id": 16421, "text": "The object to associate to the given key, or null to remove any existing association to that key.", "labels": ["Ambiguous"]}
{"id": 16422, "text": "The handler to associate to that key, or null.", "labels": ["Ambiguous"]}
{"id": 16423, "text": "Note that any plus sign \"+\" prepended to the name of the feature will be ignored since it is not significant in the context of this method.", "labels": ["Ambiguous"]}
{"id": 16424, "text": "If this parameter is null, the method will return the default namespace URI if any.", "labels": ["Ambiguous"]}
{"id": 16425, "text": "the unit to check, null returns false", "labels": ["Ambiguous"]}
{"id": 16426, "text": "the field to set in the result, not null", "labels": ["Ambiguous"]}
{"id": 16427, "text": "the amount to add, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16428, "text": "the unit of the amount to add, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16429, "text": "the amount to subtract, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16430, "text": "the unit of the amount to subtract, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16431, "text": "the formatter to use, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16432, "text": "the time-zone to use, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16433, "text": "the offset to use for the conversion, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16434, "text": "the other date-time to compare to, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16435, "text": "the object to check, null returns false", "labels": ["Ambiguous"]}
{"id": 16436, "text": "the preferred ColorModel which represents the most convenient format for the caller to receive the pixel data, or null if there is no preference.", "labels": ["Ambiguous"]}
{"id": 16437, "text": "if true, the values will be clamped to the range 1..255", "labels": ["Ambiguous"]}
{"id": 16438, "text": "The non-null name of the object.", "labels": ["NullnessNotAllowed"]}
{"id": 16439, "text": "The possibly null object bound to name.", "labels": ["Ambiguous"]}
{"id": 16440, "text": "The non-null string name of the object.", "labels": ["NullnessNotAllowed"]}
{"id": 16441, "text": "true if name is a name relative to the target context (which is named by the first parameter of the listBindings() method); false if name is a URL string.", "labels": ["Ambiguous"]}
{"id": 16442, "text": "The possibly null class name of the object bound to name.", "labels": ["Ambiguous"]}
{"id": 16443, "text": "If null, the class name of obj is returned by getClassName().", "labels": ["Ambiguous"]}
{"id": 16444, "text": "If obj is also null, getClassName() will return null.", "labels": ["Ambiguous"]}
{"id": 16445, "text": "JFormattedTextField to format for, may be null indicating uninstall from current JFormattedTextField.", "labels": ["Ambiguous"]}
{"id": 16446, "text": "a boolean, false if any node can have children, true if each node is asked to see if it can have children", "labels": ["Ambiguous"]}
{"id": 16447, "text": "if true, getAllowsChildren() is messaged, otherwise isLeaf() is messaged", "labels": ["Ambiguous"]}
{"id": 16448, "text": "the illegal index.", "labels": ["Ambiguous"]}
{"id": 16449, "text": "the cause, may be null", "labels": ["Ambiguous"]}
{"id": 16450, "text": "the object to check, can be null", "labels": ["Ambiguous"]}
{"id": 16451, "text": "the Vector to use, with a new one created on null", "labels": ["Ambiguous"]}
{"id": 16452, "text": "True if we're in an application builder tool.", "labels": ["Ambiguous"]}
{"id": 16453, "text": "True if GUI interaction is available.", "labels": ["Ambiguous"]}
{"id": 16454, "text": "Possibly null additional detail about this exception.", "labels": ["Ambiguous"]}
{"id": 16455, "text": "This may not be null.", "labels": ["NullnessNotAllowed"]}
{"id": 16456, "text": "the text to parse such as \"2007-12\", not null", "labels": ["NullnessNotAllowed"]}
{"id": 16457, "text": "the end date, exclusive, which is converted to a YearMonth, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16458, "text": "the unit to measure the amount in, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16459, "text": "the other year-month to compare to, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16460, "text": "the action to be performed, if a value is present", "labels": ["Ambiguous"]}
{"id": 16461, "text": "the empty-based action to be performed, if no value is present", "labels": ["Ambiguous"]}
{"id": 16462, "text": "the value to be returned, if no value is present", "labels": ["Ambiguous"]}
{"id": 16463, "text": "the supplying function that produces an exception to be thrown", "labels": ["Ambiguous"]}
{"id": 16464, "text": "the event identifying when the SSL Handshake completed on a given SSL connection", "labels": ["Ambiguous"]}
{"id": 16465, "text": "true if an object value must be present.", "labels": ["Ambiguous"]}
{"id": 16466, "text": "the default value for the Object reference, or null.", "labels": ["Ambiguous"]}
{"id": 16467, "text": "true if minValue is inclusive.", "labels": ["Ambiguous"]}
{"id": 16468, "text": "true if maxValue is inclusive.", "labels": ["Ambiguous"]}
{"id": 16469, "text": "the Locale for which localization will be attempted, or null.", "labels": ["Ambiguous"]}
{"id": 16470, "text": "the nested exception", "labels": ["Ambiguous"]}
{"id": 16471, "text": "an Object; if a null is passed in a null is returned", "labels": ["Ambiguous"]}
{"id": 16472, "text": "Additional detail about this exception.", "labels": ["Ambiguous"]}
{"id": 16473, "text": "the string to display as an error detail message", "labels": ["Ambiguous"]}
{"id": 16474, "text": "Whether the text range is selected", "labels": ["Ambiguous"]}
{"id": 16475, "text": "whether the text range is selected", "labels": ["Ambiguous"]}
{"id": 16476, "text": "the rendering style attributes for the text range, or null", "labels": ["Ambiguous"]}
{"id": 16477, "text": "set to true if client authentication is required, or false if no client authentication is desired.", "labels": ["Ambiguous"]}
{"id": 16478, "text": "set to true if client authentication is requested, or false if no client authentication is desired.", "labels": ["Ambiguous"]}
{"id": 16479, "text": "true if newly accepted connections should use SSL client mode.", "labels": ["Ambiguous"]}
{"id": 16480, "text": "false indicates that an existing session must be resumed.", "labels": ["Ambiguous"]}
{"id": 16481, "text": "If null then any previously set authenticator is removed, and client authentication will no longer be required.", "labels": ["Ambiguous"]}
{"id": 16482, "text": "the Component the error occurred in, may be null indicating the error condition is not directly associated with a Component", "labels": ["Ambiguous"]}
{"id": 16483, "text": "JComponent that will display the Icon, may be null", "labels": ["Ambiguous"]}
{"id": 16484, "text": "A String, part of which should be parsed.", "labels": ["Ambiguous"]}
{"id": 16485, "text": "A ParsePosition object with index and error index information as described above.", "labels": ["Ambiguous"]}
{"id": 16486, "text": "The name can be the fully qualified method name including the classname, or just the method name if the classname is defined in the 'class' field of the operation descriptor.", "labels": ["Ambiguous"]}
{"id": 16487, "text": "An array containing the parameters to be set when the operation is invoked", "labels": ["Ambiguous"]}
{"id": 16488, "text": "It must match the name of a ModelMBeanAttributeInfo.", "labels": ["ExpectedValue"]}
{"id": 16489, "text": "If null, no filtering will be performed before handling notifications.", "labels": ["Ambiguous"]}
{"id": 16490, "text": "The context to be sent to the listener with the notification when a notification is emitted.", "labels": ["Ambiguous"]}
{"id": 16491, "text": "This name is null if the name parameter to one of the createMBean or registerMBean methods in the MBeanServer interface is null.", "labels": ["Ambiguous"]}
{"id": 16492, "text": "In that case, this method must return a non-null ObjectName for the new MBean.", "labels": ["Ambiguous"]}
{"id": 16493, "text": "Indicates whether or not the MBean has been successfully registered in the MBean server.", "labels": ["Ambiguous"]}
{"id": 16494, "text": "the expression whose value was inappropriate.", "labels": ["Ambiguous"]}
{"id": 16495, "text": "the length, in bytes, to which the BLOB value that this Blob object represents should be truncated", "labels": ["Ambiguous"]}
{"id": 16496, "text": "\"String, List\" instead of \"java.lang.String, java.util.List\" as long as they don't cause ambiguity in the specific parameter position.", "labels": ["Ambiguous"]}
{"id": 16497, "text": "the specification class in which the key material should be returned.", "labels": ["Ambiguous"]}
{"id": 16498, "text": "element to be removed from this deque, if present", "labels": ["Ambiguous"]}
{"id": 16499, "text": "the array into which the elements of the deque are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose", "labels": ["Ambiguous"]}
{"id": 16500, "text": "true if the decimal separator is always shown; false otherwise", "labels": ["Ambiguous"]}
{"id": 16501, "text": "true if the parse method returns BigDecimal; false otherwise", "labels": ["Ambiguous"]}
{"id": 16502, "text": "An integer that indicates whether the item was selected or deselected.", "labels": ["Ambiguous"]}
{"id": 16503, "text": "true if this menu item is on the part of the menu path that changed, false if this menu is part of the a menu path that changed, but this particular part of that path is still the same", "labels": ["Ambiguous"]}
{"id": 16504, "text": "The error message for the exception.", "labels": ["Ambiguous"]}
{"id": 16505, "text": "The exception or error to be encapsulated in a SchemaFactoryConfigurationError.", "labels": ["Ambiguous"]}
{"id": 16506, "text": "the DOM Node that caused the exception, or null.", "labels": ["Ambiguous"]}
{"id": 16507, "text": "the Throwable (Error or Exception) that caused this exception to occur, or null.", "labels": ["Ambiguous"]}
{"id": 16508, "text": "If null, an empty attribute set is constructed.", "labels": ["Ambiguous"]}
{"id": 16509, "text": "the string to be used as tooltip text; if the value is null no tooltip is shown", "labels": ["Ambiguous"]}
{"id": 16510, "text": "the menu to be used for the tray icon's popup menu; if the value is null no popup menu is shown", "labels": ["Ambiguous"]}
{"id": 16511, "text": "the non-null Image to be used", "labels": ["NullnessNotAllowed"]}
{"id": 16512, "text": "a PopupMenu or null to remove any popup menu", "labels": ["Ambiguous"]}
{"id": 16513, "text": "the string for the tooltip; if the value is null no tooltip is shown", "labels": ["Ambiguous"]}
{"id": 16514, "text": "true to auto-size the image, false otherwise", "labels": ["Ambiguous"]}
{"id": 16515, "text": "the caption displayed above the text, usually in bold; may be null", "labels": ["Ambiguous"]}
{"id": 16516, "text": "the text displayed for the particular message; may be null", "labels": ["Ambiguous"]}
{"id": 16517, "text": "For XML, this is case-sensitive, otherwise it depends on the case-sensitivity of the markup language in use.", "labels": ["Ambiguous"]}
{"id": 16518, "text": "Applications should invoke Document.normalizeDocument() with the parameter \" namespaces\" set to true in order to ensure that the entity name is namespace well-formed.", "labels": ["Ambiguous"]}
{"id": 16519, "text": "list of annotation elements that describes the annotations on the event, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16520, "text": "list of descriptors that describes the fields of the event, not null", "labels": ["NullnessNotAllowed"]}
{"id": 16521, "text": "the wrapped exception.", "labels": ["Ambiguous"]}
{"id": 16522, "text": "This can be null.", "labels": ["Ambiguous"]}
{"id": 16523, "text": "true if row is expanded, false otherwise", "labels": ["Ambiguous"]}
{"id": 16524, "text": "A ContentHandler or a null value.", "labels": ["Ambiguous"]}
{"id": 16525, "text": "A new error handler to be set.", "labels": ["Ambiguous"]}
{"id": 16526, "text": "This parameter can be null.", "labels": ["Ambiguous"]}
{"id": 16527, "text": "The feature name, which is a non-null fully-qualified URI.", "labels": ["NullnessNotAllowed"]}
{"id": 16528, "text": "The property name, which is a non-null fully-qualified URI.", "labels": ["NullnessNotAllowed"]}
{"id": 16529, "text": "true if numbers should be parsed as integers only; false otherwise", "labels": ["Ambiguous"]}
{"id": 16530, "text": "true if grouping is used; false otherwise", "labels": ["Ambiguous"]}
{"id": 16531, "text": "the maximum number of integer digits to be shown; if less than zero, then zero is used.", "labels": ["Ambiguous"]}
{"id": 16532, "text": "the minimum number of integer digits to be shown; if less than zero, then zero is used.", "labels": ["Ambiguous"]}
{"id": 16533, "text": "the maximum number of fraction digits to be shown; if less than zero, then zero is used.", "labels": ["Ambiguous"]}
{"id": 16534, "text": "the minimum number of fraction digits to be shown; if less than zero, then zero is used.", "labels": ["Ambiguous"]}
{"id": 16535, "text": "the array into which the elements of this list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": ["Ambiguous"]}
{"id": 16536, "text": "element to be removed from this list, if present", "labels": ["Ambiguous"]}
{"id": 16537, "text": "A null value indicates that the elements' natural ordering should be used", "labels": ["Ambiguous"]}
{"id": 16538, "text": "a Collection from which elements are drawn, must be non-null", "labels": ["NullnessNotAllowed"]}
{"id": 16539, "text": "If null current Thread's context classLoader is used to load the factory class.", "labels": ["Ambiguous"]}
{"id": 16540, "text": "May be null, in which case the prefered templates will be used (i.e.", "labels": ["Ambiguous"]}
{"id": 16541, "text": "May be null.", "labels": ["Ambiguous"]}
{"id": 16542, "text": "The new error listener.", "labels": ["Ambiguous"]}
{"id": 16543, "text": "The thread pool or null to associate the channel with the default thread pool", "labels": ["Ambiguous"]}
{"id": 16544, "text": "An optional list of file attributes to set atomically when creating the file", "labels": ["Ambiguous"]}
{"id": 16545, "text": "If true then this method is required to force changes to both the file's content and metadata to be written to storage; otherwise, it need only force content changes to be written", "labels": ["Ambiguous"]}
{"id": 16546, "text": "The position at which the locked region is to start; must be non-negative", "labels": ["RangeLimitation"]}
{"id": 16547, "text": "The size of the locked region; must be non-negative, and the sum position + size must be non-negative", "labels": ["RangeLimitation"]}
{"id": 16548, "text": "true to request a shared lock, in which case this channel must be open for reading (and possibly writing); false to request an exclusive lock, in which case this channel must be open for writing (and possibly reading)", "labels": ["Ambiguous"]}
{"id": 16549, "text": "The object to attach to the I/O operation; can be null", "labels": ["Ambiguous"]}
{"id": 16550, "text": "The file position at which the transfer is to begin; must be non-negative", "labels": ["RangeLimitation"]}
{"id": 16551, "text": "The exception that was caught.", "labels": ["Ambiguous"]}
{"id": 16552, "text": "an event object describing the source of the event and containing the SQLException that the driver is about to throw", "labels": ["Ambiguous"]}
{"id": 16553, "text": "the (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown.", "labels": ["Ambiguous"]}
{"id": 16554, "text": "a description of the exception", "labels": ["Ambiguous"]}
{"id": 16555, "text": "the underlying reason for this SQLException (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown.", "labels": ["Ambiguous"]}
{"id": 16556, "text": "an XOPEN or SQL:2003 code identifying the exception", "labels": ["Ambiguous"]}
{"id": 16557, "text": "a database vendor-specific exception code", "labels": ["Ambiguous"]}
{"id": 16558, "text": "The address to bind the socket, or null to bind to an automatically assigned socket address", "labels": ["Ambiguous"]}
{"id": 16559, "text": "the new parent, or null if the view is being removed from a parent it was previously added to", "labels": ["Ambiguous"]}
{"id": 16560, "text": "triplets of the rest of primes, null can be specified if there are only two prime factors (p and q)", "labels": ["Ambiguous"]}
{"id": 16561, "text": "the modifier keys down during event (shift, ctrl, alt, meta) Either extended _DOWN_MASK or old _MASK modifiers should be used, but both models should not be mixed in one event.", "labels": ["Ambiguous"]}
{"id": 16562, "text": "The possibly null object containing location or reference information that can be used in creating an object.", "labels": ["Ambiguous"]}
{"id": 16563, "text": "The name of this object relative to nameCtx, or null if no name is specified.", "labels": ["Ambiguous"]}
{"id": 16564, "text": "The context relative to which the name parameter is specified, or null if name is relative to the default initial context.", "labels": ["Ambiguous"]}
{"id": 16565, "text": "The possibly null environment that is used in creating the object.", "labels": ["Ambiguous"]}
{"id": 16566, "text": "String describing the reason for the exception.", "labels": ["Ambiguous"]}
{"id": 16567, "text": "The possibly null environment to use when retrieving the referral context.", "labels": ["Ambiguous"]}
{"id": 16568, "text": "If null, no environment properties will be used.", "labels": ["Ambiguous"]}
{"id": 16569, "text": "The possibly null request controls to use for the new context.", "labels": ["Ambiguous"]}
{"id": 16570, "text": "If null or the empty array means use no request controls.", "labels": ["Ambiguous"]}
{"id": 16571, "text": "The possibly null environment properties to use when for the new context.", "labels": ["Ambiguous"]}
{"id": 16572, "text": "If null, the context is initialized with no environment properties.", "labels": ["Ambiguous"]}
{"id": 16573, "text": "stream to which the file data should be written", "labels": ["Ambiguous"]}
{"id": 16574, "text": "An array of doubles to be used as the first and only bank of this DataBuffer.", "labels": ["Ambiguous"]}
{"id": 16575, "text": "This parameter is ignored as the method never blocks", "labels": ["Ambiguous"]}
{"id": 16576, "text": "value to set, can be null", "labels": ["Ambiguous"]}
{"id": 16577, "text": "the JTree that is asking the editor to edit; this parameter can be null", "labels": ["Ambiguous"]}
{"id": 16578, "text": "true if the cell is to be rendered with selection highlighting", "labels": ["Ambiguous"]}
{"id": 16579, "text": "true if the node is expanded", "labels": ["Ambiguous"]}
{"id": 16580, "text": "true if the node is a leaf node", "labels": ["Ambiguous"]}
{"id": 16581, "text": "a component, usually the connection pool manager, that has implemented the ConnectionEventListener interface and wants to be notified when the connection is closed or has an error", "labels": ["Ambiguous"]}
{"id": 16582, "text": "true if the image is a multi-frame animation", "labels": ["Ambiguous"]}
{"id": 16583, "text": "true if the complete pixel buffer should always be sent", "labels": ["Ambiguous"]}
{"id": 16584, "text": "true if the consumers should be sent a SINGLEFRAMEDONE notification", "labels": ["Ambiguous"]}
{"id": 16585, "text": "If null, this method has no effect.", "labels": ["Ambiguous"]}
{"id": 16586, "text": "the non-null attribute name", "labels": ["NullnessNotAllowed"]}
{"id": 16587, "text": "the Icon to display when the component is disabled", "labels": ["Ambiguous"]}
{"id": 16588, "text": "the Component this label is for, or null if the label is not the label for a component", "labels": ["Ambiguous"]}
{"id": 16589, "text": "detail message, or null if no detail message", "labels": ["Ambiguous"]}
{"id": 16590, "text": "chained exception", "labels": ["Ambiguous"]}
{"id": 16591, "text": "the desired type of the value to be returned, which must be compatible with the return type of the method handle", "labels": ["Ambiguous"]}
{"id": 16592, "text": "the arguments to pass to the method handle, as if with MethodHandle.invokeWithArguments(java.lang.Object...).", "labels": ["Ambiguous"]}
{"id": 16593, "text": "Each argument may be null.", "labels": ["Ambiguous"]}
{"id": 16594, "text": "true means do not initialize the initial DirContext; false is equivalent to calling new InitialDirContext()", "labels": ["Ambiguous"]}
{"id": 16595, "text": "Null indicates an empty environment.", "labels": ["Ambiguous"]}
{"id": 16596, "text": "an optional AffineTransform to be applied to the coordinates as they are returned in the iteration, or null if untransformed coordinates are desired", "labels": ["Ambiguous"]}
{"id": 16597, "text": "the maximum amount that the control points for a given curve can vary from collinear before a subdivided curve is replaced by a straight line connecting the endpoints.", "labels": ["Ambiguous"]}
{"id": 16598, "text": "if true then support GZIP compatible compression", "labels": ["Ambiguous"]}
{"id": 16599, "text": "if false, any node without children is a leaf node; if true, only nodes that do not allow children are leaf nodes", "labels": ["Ambiguous"]}
{"id": 16600, "text": "a boolean value, true if the tree is editable", "labels": ["Ambiguous"]}
{"id": 16601, "text": "true if the root node of the tree is to be displayed", "labels": ["Ambiguous"]}
{"id": 16602, "text": "true if root handles should be displayed; otherwise, false", "labels": ["Ambiguous"]}
{"id": 16603, "text": "true means that stopCellEditing is invoked when editing is interrupted, and data is saved; false means that cancelCellEditing is invoked, and changes are lost", "labels": ["Ambiguous"]}
{"id": 16604, "text": "whether or not to enable automatic drag handling", "labels": []}
{"id": 16605, "text": "the TreeSelectionModel to use, or null to disable selections", "labels": []}
{"id": 16606, "text": "if true, all parents of @{code path} and path are marked as expanded.", "labels": []}
{"id": 16607, "text": "Otherwise, all parents of path are marked EXPANDED, but path itself is marked collapsed.", "labels": []}
{"id": 16608, "text": "the raw non-localized logging message (may be null)", "labels": []}
{"id": 16609, "text": "the raw message string (may be null)", "labels": []}
{"id": 16610, "text": "The URLStreamHandlerFactory to use when creating URLs.", "labels": []}
{"id": 16611, "text": "True if, when a class is not found in either the parent ClassLoader or the URLs, the MLet should delegate to its containing MBeanServer's ClassLoaderRepository.", "labels": []}
{"id": 16612, "text": "Indicates whether or not the m-let has been successfully registered in the MBean server.", "labels": []}
{"id": 16613, "text": "The ClassLoaderRepository that will be used to search for the given class, if it is not found in this ClassLoader.", "labels": []}
{"id": 16614, "text": "The initial Cursor for this drag operation or null for the default cursor handling; see DragSourceContext class for more details on the cursor handling mechanism during drag and drop", "labels": []}
{"id": 16615, "text": "The Image to drag or null", "labels": []}
{"id": 16616, "text": "a database vendor specific exception code", "labels": []}
{"id": 16617, "text": "a description of the exception.", "labels": []}
{"id": 16618, "text": "an array of Objects, a Vector, or a Hashtable used to create the child nodes; if any other object is specified, or if the value is null, then the node is not allowed to have children", "labels": []}
{"id": 16619, "text": "If null, an identity transform is used.", "labels": []}
{"id": 16620, "text": "determines if the newly constructed object has anti-aliasing.", "labels": []}
{"id": 16621, "text": "determines if the newly constructed object has fractional metrics.", "labels": []}
{"id": 16622, "text": "Any other value will throw IllegalArgumentException.", "labels": []}
{"id": 16623, "text": "Any other value will throw IllegalArgumentException", "labels": []}
{"id": 16624, "text": "the position where the error is found while parsing.", "labels": []}
{"id": 16625, "text": "the type, not null", "labels": []}
{"id": 16626, "text": "the name, not null", "labels": []}
{"id": 16627, "text": "the annotations on the value descriptors, not null", "labels": []}
{"id": 16628, "text": "the error message.", "labels": []}
{"id": 16629, "text": "the Throwable (Error or Exception) that caused this exception to occur.", "labels": []}
{"id": 16630, "text": "The reference node, i.e., the node before which the new node must be inserted.", "labels": []}
{"id": 16631, "text": "The node to add.If it is a DocumentFragment object, the entire contents of the document fragment are moved into the child list of this node", "labels": []}
{"id": 16632, "text": "If true, recursively clone the subtree under the specified node; if false, clone only the node itself (and its attributes, if it is an Element).", "labels": []}
{"id": 16633, "text": "true if the thread executing this task should be interrupted; otherwise, in-progress tasks are allowed to complete", "labels": []}
{"id": 16634, "text": "Passing negative or zero value is not recommended", "labels": []}
{"id": 16635, "text": "Passing negative value is not recommended.", "labels": []}
{"id": 16636, "text": "Use either an extended _DOWN_MASK or old _MASK modifiers, however do not mix models in the one event.", "labels": []}
{"id": 16637, "text": "The Unicode character generated by this event, or CHAR_UNDEFINED (for key-pressed and key-released events which do not map to a valid Unicode character)", "labels": []}
{"id": 16638, "text": "The only legal values are KEY_LOCATION_UNKNOWN, KEY_LOCATION_STANDARD, KEY_LOCATION_LEFT, KEY_LOCATION_RIGHT, and KEY_LOCATION_NUMPAD.", "labels": []}
{"id": 16639, "text": "the month-of-year to represent, not null", "labels": []}
{"id": 16640, "text": "the text to parse such as \"--12-03\", not null", "labels": []}
{"id": 16641, "text": "the month-of-year to set in the returned month-day, not null", "labels": []}
{"id": 16642, "text": "the other month-day to compare to, not null", "labels": []}
{"id": 16643, "text": "When a converter is requested as part of linking an invokedynamic instruction the supplier will return the lookup passed to the bootstrap method, otherwise if the method is invoked from within a LinkerServices.getWithLookup(Supplier, jdk.dynalink.SecureLookupSupplier) it will delegate to the secure lookup supplier.", "labels": []}
{"id": 16644, "text": "A typical case where the lookup might be needed is when the converter creates a Java adapter class on the fly (e.g.", "labels": []}
{"id": 16645, "text": "An implementation should avoid retrieving the lookup if it is not needed so as to avoid the expense of AccessController.doPrivileged call.", "labels": []}
{"id": 16646, "text": "final value after the shift", "labels": []}
{"id": 16647, "text": "Both this default implementation and the SUN provider do not return partial digests.", "labels": []}
{"id": 16648, "text": "If the value of this parameter is less than the actual signature length, this method will throw a SignatureException.", "labels": []}
{"id": 16649, "text": "This parameter is ignored if its value is greater than or equal to the actual signature length.", "labels": []}
{"id": 16650, "text": "the class name of the Permission class that will be created when this unresolved permission is resolved.", "labels": []}
{"id": 16651, "text": "the locale to be used when creating or comparing subformats", "labels": []}
{"id": 16652, "text": "It must respect the constraints spelt out in the description of the MBeanServerPermission class.", "labels": []}
{"id": 16653, "text": "an optional AffineTransform to be applied to the coordinates as they are returned in the iteration, or null if the untransformed coordinates are desired.", "labels": []}
{"id": 16654, "text": "maximum time in milliseconds before update", "labels": []}
{"id": 16655, "text": "The offset within the buffer array of the first buffer into which bytes are to be transferred; must be non-negative and no larger than dsts.length", "labels": []}
{"id": 16656, "text": "The maximum number of buffers to be accessed; must be non-negative and no larger than dsts.length - offset", "labels": []}
{"id": 16657, "text": "The offset within the buffer array of the first buffer from which bytes are to be retrieved; must be non-negative and no larger than srcs.length", "labels": []}
{"id": 16658, "text": "The maximum number of buffers to be accessed; must be non-negative and no larger than srcs.length - offset", "labels": []}
{"id": 16659, "text": "All changes made before s was set will be undone.", "labels": []}
{"id": 16660, "text": "All changes made after s was set will be made permanent.", "labels": []}
{"id": 16661, "text": "The non-null ID of the attribute to be used as a sort key.", "labels": []}
{"id": 16662, "text": "If true then entries are arranged in ascending order.", "labels": []}
{"id": 16663, "text": "Otherwise there are arranged in descending order.", "labels": []}
{"id": 16664, "text": "The possibly null ID of the matching rule to use to order the attribute values.", "labels": []}
{"id": 16665, "text": "If not specified then the ordering matching rule defined for the sort key attribute is used.", "labels": []}
{"id": 16666, "text": "a File indicating where the cache file should be created, or null to use the system directory.", "labels": []}
{"id": 16667, "text": "A possibly null message explaining the problem.", "labels": []}
{"id": 16668, "text": "The child node where the result nodes should be inserted before.", "labels": []}
{"id": 16669, "text": "The child node before which the result nodes will be inserted.", "labels": []}
{"id": 16670, "text": "a byte array that will contain the requested input data when this method returns", "labels": []}
{"id": 16671, "text": "A possibly null string containing details of the exception.", "labels": []}
{"id": 16672, "text": "A possibly null root exception that caused this exception.", "labels": []}
{"id": 16673, "text": "This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing.", "labels": []}
{"id": 16674, "text": "It may be null for anonymous Loggers.", "labels": []}
{"id": 16675, "text": "May be null if none of the messages require localization.", "labels": []}
{"id": 16676, "text": "This should be a dot-separated name and should normally be based on the package name or class name of the subsystem, such as java.net or javax.swing", "labels": []}
{"id": 16677, "text": "a filter object (may be null)", "labels": []}
{"id": 16678, "text": "A function, which when called, produces the desired log message", "labels": []}
{"id": 16679, "text": "Resource bundle to localize msg, can be null.", "labels": []}
{"id": 16680, "text": "Parameters to the message (optional, may be none).", "labels": []}
{"id": 16681, "text": "Resource bundle to localize msg; can be null.", "labels": []}
{"id": 16682, "text": "Resource bundle to localize msg, can be null", "labels": []}
{"id": 16683, "text": "the new value for the log level (may be null)", "labels": []}
{"id": 16684, "text": "true if output is to be sent to the logger's parent.", "labels": []}
{"id": 16685, "text": "the class loader to be used to load provider-configuration files and instantiate provider classes, or null if the system class loader (or, failing that the bootstrap class loader) is to be used.", "labels": []}
{"id": 16686, "text": "true if pairwise orderings should be taken account in ordering the returned objects.", "labels": []}
{"id": 16687, "text": "the instant to create the time from, not null", "labels": []}
{"id": 16688, "text": "the time-zone, which may be an offset, not null", "labels": []}
{"id": 16689, "text": "the text to parse such as \"10:15:30\", not null", "labels": []}
{"id": 16690, "text": "the unit to truncate to, not null", "labels": []}
{"id": 16691, "text": "the end time, exclusive, which is converted to a LocalTime, not null", "labels": []}
{"id": 16692, "text": "the local date, not null", "labels": []}
{"id": 16693, "text": "the zone offset, not null", "labels": []}
{"id": 16694, "text": "the other time to compare to, not null", "labels": []}
{"id": 16695, "text": "The String object containing the exception message.", "labels": []}
{"id": 16696, "text": "The error code identifying the exception.", "labels": []}
{"id": 16697, "text": "the field being checked, may be null", "labels": []}
{"id": 16698, "text": "A null record is silently ignored and is not published", "labels": []}
{"id": 16699, "text": "Setting a null value will clear the predicate, allowing all rows to become visible.", "labels": []}
{"id": 16700, "text": "close the underlying socket when this socket is closed", "labels": []}
{"id": 16701, "text": "This parameter may be null if no data has been removed.", "labels": []}
{"id": 16702, "text": "close the underlying socket when this socket is closed.", "labels": []}
{"id": 16703, "text": "Rectangle within graphics object into which we should paint.", "labels": []}
{"id": 16704, "text": "If there are more arguments than format specifiers, the extra arguments are ignored.", "labels": []}
{"id": 16705, "text": "The behaviour on a null argument depends on the conversion.", "labels": []}
{"id": 16706, "text": "If l is null then no localization is applied.", "labels": []}
{"id": 16707, "text": "If csq is null, then characters will be appended as if csq contained the four characters \"null\".", "labels": []}
{"id": 16708, "text": "the writer, non-null", "labels": []}
{"id": 16709, "text": "the factory to use to rebuild if the view has children", "labels": []}
{"id": 16710, "text": "if positive, block for up to timeout milliseconds; if zero, block indefinitely; must not be negative", "labels": []}
{"id": 16711, "text": "The offset within the array of the first float to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 16712, "text": "The maximum number of floats to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 16713, "text": "The source buffer from which floats are to be read; must not be this buffer", "labels": []}
{"id": 16714, "text": "The offset within the array of the first float to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 16715, "text": "The number of floats to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 16716, "text": "the type of listeners requested; this parameter should specify an interface that descends from java.util.EventListener", "labels": []}
{"id": 16717, "text": "if true, interval inserts before the index, otherwise, interval inserts after the index", "labels": []}
{"id": 16718, "text": "the object which must be the current instance in order to pass this filter.", "labels": []}
{"id": 16719, "text": "If null, the ColorModel of the source is used.", "labels": []}
{"id": 16720, "text": "vector containing the names of the new columns; if this is null then the model has no columns", "labels": []}
{"id": 16721, "text": "array containing the names of the new columns; if this is null then the model has no columns", "labels": []}
{"id": 16722, "text": "If null it assumes all the rows were newly added", "labels": []}
{"id": 16723, "text": "If null, set the model to zero columns", "labels": []}
{"id": 16724, "text": "if non-null, a primitive array in which to return the pixel data", "labels": []}
{"id": 16725, "text": "If non-null, returns the samples in this array", "labels": []}
{"id": 16726, "text": "if non-null, returns the samples in this array", "labels": []}
{"id": 16727, "text": "if true, html form submission is processed automatically.", "labels": []}
{"id": 16728, "text": "Used to indicate when edits are committed back to the JTextComponent", "labels": []}
{"id": 16729, "text": "Indicates if overwrite or overstrike mode is used", "labels": []}
{"id": 16730, "text": "Used to indicate if the edited value must always be valid", "labels": []}
{"id": 16731, "text": "the SyncResolver object to be set; cannot be null", "labels": []}
{"id": 16732, "text": "an ImageWriteParam that will be used to encode the image, or null.", "labels": []}
{"id": 16733, "text": "A CertSelector used to select which Certificates should be returned.", "labels": []}
{"id": 16734, "text": "Specify null to return all Certificates (if supported).", "labels": []}
{"id": 16735, "text": "A CRLSelector used to select which CRLs should be returned.", "labels": []}
{"id": 16736, "text": "Specify null to return all CRLs (if supported).", "labels": []}
{"id": 16737, "text": "the initialization parameters (may be null).", "labels": []}
{"id": 16738, "text": "The SQLException the driver is about to throw to the application", "labels": []}
{"id": 16739, "text": "the guarded invocation that the call site should incorporate into its target method handle.", "labels": []}
{"id": 16740, "text": "It should be used by this call site as the ultimate fallback when it can't invoke its target with the passed arguments.", "labels": []}
{"id": 16741, "text": "The fallback method is such that when it's invoked, it'll try to obtain an adequate target GuardedInvocation for the invocation, and subsequently invoke relink(GuardedInvocation, MethodHandle) or resetAndRelink(GuardedInvocation, MethodHandle), and finally invoke the target.", "labels": []}
{"id": 16742, "text": "the guarded invocation that the call site should use to build its target method handle.", "labels": []}
{"id": 16743, "text": "the object reference with which to compare for equality, which may be null", "labels": []}
{"id": 16744, "text": "the name of the method in the listener interface that should trigger the action", "labels": []}
{"id": 16745, "text": "The possibly null object to check.", "labels": []}
{"id": 16746, "text": "the new default TimeZone, or null", "labels": []}
{"id": 16747, "text": "The error or warning message.", "labels": []}
{"id": 16748, "text": "The exception to be wrapped.", "labels": []}
{"id": 16749, "text": "The error or warning message, or null to use the message from the embedded exception.", "labels": []}
{"id": 16750, "text": "Any exception", "labels": []}
{"id": 16751, "text": "The locator object for the error or warning.", "labels": []}
{"id": 16752, "text": "A SourceLocator object, or null to clear the location.", "labels": []}
{"id": 16753, "text": "indicates how diagnostic information should be displayed", "labels": []}
{"id": 16754, "text": "a Writer for additional output from the compiler; use System.err if null", "labels": []}
{"id": 16755, "text": "a file manager; if null use the compiler's standard filemanager", "labels": []}
{"id": 16756, "text": "a diagnostic listener; if null use the compiler's default method for reporting diagnostics", "labels": []}
{"id": 16757, "text": "compiler options, null means no options", "labels": []}
{"id": 16758, "text": "names of classes to be processed by annotation processing, null means no class names", "labels": []}
{"id": 16759, "text": "the compilation units to compile, null means no compilation units", "labels": []}
{"id": 16760, "text": "a diagnostic listener for non-fatal diagnostics; if null use the compiler's default method for reporting diagnostics", "labels": []}
{"id": 16761, "text": "the locale to apply when formatting diagnostics; null means the default locale.", "labels": []}
{"id": 16762, "text": "the character set used for decoding bytes; if null use the platform default", "labels": []}
{"id": 16763, "text": "Will not be null.", "labels": []}
{"id": 16764, "text": "For example, if the region being rendered is Button, then c will be a JButton.", "labels": []}
{"id": 16765, "text": "If the region being drawn is ScrollBarSlider, then the component will be JScrollBar.", "labels": []}
{"id": 16766, "text": "This value may be null.", "labels": []}
{"id": 16767, "text": "Note that in the case of painting the foreground, this value may differ from c.getWidth().", "labels": []}
{"id": 16768, "text": "Note that in the case of painting the foreground, this value may differ from c.getHeight().", "labels": []}
{"id": 16769, "text": "The color to return if no color was obtained from the component.", "labels": []}
{"id": 16770, "text": "additively modifies the HSB saturation component of the color returned (ignored if default color is returned).", "labels": []}
{"id": 16771, "text": "additively modifies the HSB brightness component of the color returned (ignored if default color is returned).", "labels": []}
{"id": 16772, "text": "additively modifies the ARGB alpha component of the color returned (ignored if default color is returned).", "labels": []}
{"id": 16773, "text": "If the exit (equivalently, System.exit) method has already been invoked then this status code will override the status code passed to that method.", "labels": []}
{"id": 16774, "text": "array of strings, each element of which has environment variable settings in the format name=value, or null if the subprocess should inherit the environment of the current process.", "labels": []}
{"id": 16775, "text": "the working directory of the subprocess, or null if the subprocess should inherit the working directory of the current process.", "labels": []}
{"id": 16776, "text": "the message to generate when a ImagingOpException is thrown", "labels": []}
{"id": 16777, "text": "the object to be sealed; can be null.", "labels": []}
{"id": 16778, "text": "the array into which the elements of this collection are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": []}
{"id": 16779, "text": "element to be removed from this collection, if present", "labels": []}
{"id": 16780, "text": "if true, continue after shutdown, else don't", "labels": []}
{"id": 16781, "text": "if true, execute after shutdown, else don't", "labels": []}
{"id": 16782, "text": "if true, remove on cancellation, else don't", "labels": []}
{"id": 16783, "text": "the random bit source to use to generate key bits; can be null.", "labels": []}
{"id": 16784, "text": "whether or not to generate new parameters for the modulus length requested.", "labels": []}
{"id": 16785, "text": "the initial orientation -- it must be either HORIZONTAL or VERTICAL", "labels": []}
{"id": 16786, "text": "if true, the border is painted", "labels": []}
{"id": 16787, "text": "if true, the tool bar can be moved; false otherwise", "labels": []}
{"id": 16788, "text": "true for rollover toolbar buttons; otherwise false", "labels": []}
{"id": 16789, "text": "the combined committed and composed text, committed text first; must be null when the event type is CARET_POSITION_CHANGED; may be null for INPUT_METHOD_TEXT_CHANGED if there's no committed or composed text", "labels": []}
{"id": 16790, "text": "insertion point); null if there's no caret within current composed text", "labels": []}
{"id": 16791, "text": "the position that's most important to be visible; null if there's no recommendation for a visible position within current composed text", "labels": []}
{"id": 16792, "text": "the error message", "labels": []}
{"id": 16793, "text": "The non-null list of mechanism names to try.", "labels": []}
{"id": 16794, "text": "The possibly null protocol-dependent identification to be used for authorization.", "labels": []}
{"id": 16795, "text": "If null or empty, the server derives an authorization ID from the client's authentication credentials.", "labels": []}
{"id": 16796, "text": "When the SASL authentication completes successfully, the specified entity is granted access.", "labels": []}
{"id": 16797, "text": "The non-null string name of the protocol for which the authentication is being performed (e.g., \"ldap\").", "labels": []}
{"id": 16798, "text": "The non-null fully-qualified host name of the server to authenticate to.", "labels": []}
{"id": 16799, "text": "The possibly null set of properties used to select the SASL mechanism and to configure the authentication exchange of the selected mechanism.", "labels": []}
{"id": 16800, "text": "For example, if props contains the Sasl.POLICY_NOPLAINTEXT property with the value \"true\", then the selected SASL mechanism must not be susceptible to simple plain passive attacks.", "labels": []}
{"id": 16801, "text": "The possibly null callback handler to used by the SASL mechanisms to get further information from the application/library to complete the authentication.", "labels": []}
{"id": 16802, "text": "The realm is requested by using a RealmChoiceCallback if there is a list of realms to choose from, and by using a RealmCallback if the realm must be entered.", "labels": []}
{"id": 16803, "text": "The non-null mechanism name.", "labels": []}
{"id": 16804, "text": "It must be an IANA-registered name of a SASL mechanism.", "labels": []}
{"id": 16805, "text": "The fully qualified host name of the server, or null if the server is not bound to any specific host name.", "labels": []}
{"id": 16806, "text": "If the mechanism does not allow an unbound server, a SaslException will be thrown.", "labels": []}
{"id": 16807, "text": "the acceptor function that must be successfully invoked to accept the push promise", "labels": []}
{"id": 16808, "text": "If true the check box is selected", "labels": []}
{"id": 16809, "text": "If name is null, the logical font name of the new Font as returned by getName() is set to the name \"Default\".", "labels": []}
{"id": 16810, "text": "If the style argument does not conform to one of the expected integer bitmasks then the style is set to PLAIN.", "labels": []}
{"id": 16811, "text": "the attributes to assign to the new Font, or null", "labels": []}
{"id": 16812, "text": "the type of the Font, which is TRUETYPE_FONT if a TrueType resource is specified.", "labels": []}
{"id": 16813, "text": "or TYPE1_FONT if a Type 1 resource is specified.", "labels": []}
{"id": 16814, "text": "the name of the font, or null", "labels": []}
{"id": 16815, "text": "a default Font to return if property nm is not defined", "labels": []}
{"id": 16816, "text": "the composite type of this composite data instance; must not be null.", "labels": []}
{"id": 16817, "text": "itemNames must list, in any order, all the item names defined in compositeType; the order in which the names are listed, is used to match values in itemValues[]; must not be null or empty.", "labels": []}
{"id": 16818, "text": "the values of the items, listed in the same order as their respective names in itemNames; each item value can be null, but if it is non-null it must be a valid value for the open type defined in compositeType for the corresponding item; must be of the same size as itemNames; must not be null or empty.", "labels": []}
{"id": 16819, "text": "The wrapped Exception.", "labels": []}
{"id": 16820, "text": "The file or resource name describing the location of a script error causing the ScriptException to be thrown.", "labels": []}
{"id": 16821, "text": "A line number describing the location of a script error causing the ScriptException to be thrown.", "labels": []}
{"id": 16822, "text": "The non-null list of names of all the cipher suites to enable.", "labels": []}
{"id": 16823, "text": "The non-null hostname verifier callback.", "labels": []}
{"id": 16824, "text": "The possibly null SSL socket factory to use.", "labels": []}
{"id": 16825, "text": "If null, the default SSL socket factory is used.", "labels": []}
{"id": 16826, "text": "the unit that the duration is measured in, must have an exact duration, not null", "labels": []}
{"id": 16827, "text": "the temporal amount to convert, not null", "labels": []}
{"id": 16828, "text": "the text to parse, not null", "labels": []}
{"id": 16829, "text": "the start instant, inclusive, not null", "labels": []}
{"id": 16830, "text": "the end instant, exclusive, not null", "labels": []}
{"id": 16831, "text": "the unit that the amount is measured in, must have an exact duration, not null", "labels": []}
{"id": 16832, "text": "the temporal object to adjust, not null", "labels": []}
{"id": 16833, "text": "the other duration, null returns false", "labels": []}
{"id": 16834, "text": "the temporal object to query, not null", "labels": []}
{"id": 16835, "text": "the component being painted; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 16836, "text": "mxbeanName must be in the format of ObjectName.", "labels": []}
{"id": 16837, "text": "a management interface for a platform MXBean with one single instance in the Java virtual machine if implemented.", "labels": []}
{"id": 16838, "text": "a management interface for a platform MXBean with one single instance in the Java virtual machine being monitored, if implemented.", "labels": []}
{"id": 16839, "text": "The new position value; must be non-negative and no larger than the current limit", "labels": []}
{"id": 16840, "text": "The new limit value; must be non-negative and no larger than this buffer's capacity", "labels": []}
{"id": 16841, "text": "the current (non null) value of the model", "labels": []}
{"id": 16842, "text": "the first date in the sequence or null", "labels": []}
{"id": 16843, "text": "the last date in the sequence or null", "labels": []}
{"id": 16844, "text": "one of Calendar.ERA Calendar.YEAR Calendar.MONTH Calendar.WEEK_OF_YEAR Calendar.WEEK_OF_MONTH Calendar.DAY_OF_MONTH Calendar.DAY_OF_YEAR Calendar.DAY_OF_WEEK Calendar.DAY_OF_WEEK_IN_MONTH Calendar.AM_PM Calendar.HOUR Calendar.HOUR_OF_DAY Calendar.MINUTE Calendar.SECOND Calendar.MILLISECOND This method fires a ChangeEvent if the calendarField has changed.", "labels": []}
{"id": 16845, "text": "the current (non null) Date for this sequence", "labels": []}
{"id": 16846, "text": "the instant to create the date-time from, not null", "labels": []}
{"id": 16847, "text": "the text to parse such as \"2007-12-03T10:15:30+01:00\", not null", "labels": []}
{"id": 16848, "text": "the zone offset to change to, not null", "labels": []}
{"id": 16849, "text": "the end date, exclusive, which is converted to an OffsetDateTime, not null", "labels": []}
{"id": 16850, "text": "if true then only icon is painted", "labels": []}
{"id": 16851, "text": "if true, then bytes will be written to the end of the file rather than the beginning", "labels": []}
{"id": 16852, "text": "whether or not suppression is enabled or disabled", "labels": []}
{"id": 16853, "text": "whether or not the stack trace should be writable", "labels": []}
{"id": 16854, "text": "if true, the object is restarted (reactivated) when either the activator is restarted or the object's activation group is restarted after an unexpected crash; if false, the object is only activated on demand.", "labels": []}
{"id": 16855, "text": "The group indicates the VM in which the object should be activated.", "labels": []}
{"id": 16856, "text": "the array into which the elements of the list are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": []}
{"id": 16857, "text": "element to be added to this list, if absent", "labels": []}
{"id": 16858, "text": "The minimum capacity of the internal byte buffer, or -1 if an implementation-dependent default capacity is to be used", "labels": []}
{"id": 16859, "text": "When the length of the duration is zero, this parameter will be ignored.", "labels": []}
{"id": 16860, "text": "value of null indicates that this optional field is not set.", "labels": []}
{"id": 16861, "text": "the DataFlavor whose corresponding natives should be returned.", "labels": []}
{"id": 16862, "text": "If null is specified, all natives currently known to the data transfer subsystem are returned in a non-deterministic order.", "labels": []}
{"id": 16863, "text": "the native whose corresponding DataFlavors should be returned.", "labels": []}
{"id": 16864, "text": "If null is specified, all DataFlavors currently known to the data transfer subsystem are returned in a non-deterministic order.", "labels": []}
{"id": 16865, "text": "If null is specified, a mapping of all DataFlavors known to the data transfer subsystem to their most preferred String natives will be returned.", "labels": []}
{"id": 16866, "text": "If null is specified, a mapping of all supported String natives to their most preferred DataFlavors will be returned.", "labels": []}
{"id": 16867, "text": "the index following the code point that should be returned", "labels": []}
{"id": 16868, "text": "the message of the exception.", "labels": []}
{"id": 16869, "text": "If less than or equal to zero, do not wait at all.", "labels": []}
{"id": 16870, "text": "The detail message; can be null", "labels": []}
{"id": 16871, "text": "the serialization filter to set as the process-wide filter; not null", "labels": []}
{"id": 16872, "text": "the pattern string to parse; not null", "labels": []}
{"id": 16873, "text": "true if the alpha bits are valid; false otherwise", "labels": []}
{"id": 16874, "text": "the array used to return the three HSB values, or null", "labels": []}
{"id": 16875, "text": "The offset within the array of the first double to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 16876, "text": "The maximum number of doubles to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 16877, "text": "The source buffer from which doubles are to be read; must not be this buffer", "labels": []}
{"id": 16878, "text": "The offset within the array of the first double to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 16879, "text": "The number of doubles to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 16880, "text": "the Date to check against to see if this certificate is valid at that date/time.", "labels": []}
{"id": 16881, "text": "a window to use as the full-screen window; null if returning to windowed mode.", "labels": []}
{"id": 16882, "text": "Some platforms expect the fullscreen window to be a top-level component (i.e., a Frame); therefore it is preferable to use a Frame here rather than a Window.", "labels": []}
{"id": 16883, "text": "true if the parser produced will validate documents as they are parsed; false otherwise.", "labels": []}
{"id": 16884, "text": "true if the parser created must eliminate whitespace in the element content when parsing XML documents; false otherwise.", "labels": []}
{"id": 16885, "text": "true if the parser produced will convert CDATA nodes to Text nodes and append it to the adjacent (if any) text node; false otherwise.", "labels": []}
{"id": 16886, "text": "The format is not defined, but any implementation must ensure that the string returned by method toXMLString on an existing descriptor can be used to instantiate an equivalent descriptor when instantiated using this constructor.", "labels": []}
{"id": 16887, "text": "No elements of this array can be null.", "labels": []}
{"id": 16888, "text": "Elements of the array can be null.", "labels": []}
{"id": 16889, "text": "The fieldValue must be valid for the fieldName (as defined in method isValid) Note: array sizes of parameters should match.", "labels": []}
{"id": 16890, "text": "If both arrays are empty, then an empty descriptor is created.", "labels": []}
{"id": 16891, "text": "The ErrorHandler to be used by the parser.", "labels": []}
{"id": 16892, "text": "This index starts from 0 and is relative only to the rows contained inside this section, not all the rows in the table.", "labels": []}
{"id": 16893, "text": "whether the data are written in top-down order.", "labels": []}
{"id": 16894, "text": "The listener parameter takes an interface implemented by the user which contains the methods to be called when the event occurs.", "labels": []}
{"id": 16895, "text": "If true, useCapture indicates that the user wishes to initiate capture.", "labels": []}
{"id": 16896, "text": "After initiating capture, all events of the specified type will be dispatched to the registered EventListener before being dispatched to any EventTargets beneath them in the tree.", "labels": []}
{"id": 16897, "text": "Specifies whether the EventListener being removed was registered as a capturing listener or not.", "labels": []}
{"id": 16898, "text": "If a listener was registered twice, one with capture and one without, each must be removed separately.", "labels": []}
{"id": 16899, "text": "The other window involved in the focus or activation change, or null", "labels": []}
{"id": 16900, "text": "WindowEvent types, because the opposite Window of other event types will always be null.", "labels": []}
{"id": 16901, "text": "The other Window involved in the focus or activation change, or null", "labels": []}
{"id": 16902, "text": "the name of the file containing the execution point represented by the stack trace element, or null if this information is unavailable", "labels": []}
{"id": 16903, "text": "the line number of the source line containing the execution point represented by this stack trace element, or a negative number if this information is unavailable.", "labels": []}
{"id": 16904, "text": "It must be \"register\" or \"*\" for this permission.", "labels": []}
{"id": 16905, "text": "the exception", "labels": []}
{"id": 16906, "text": "the locale, not null", "labels": []}
{"id": 16907, "text": "the RenderingHints object used to control the color conversion, or null", "labels": []}
{"id": 16908, "text": "the destination BufferedImage, or null", "labels": []}
{"id": 16909, "text": "the destination WritableRaster, or null", "labels": []}
{"id": 16910, "text": "the temporal to convert, not null", "labels": []}
{"id": 16911, "text": "the locale to use to obtain the calendar system, not null", "labels": []}
{"id": 16912, "text": "the chronology ID or calendar system type, not null", "labels": []}
{"id": 16913, "text": "the era of the correct type for the chronology, not null", "labels": []}
{"id": 16914, "text": "the field to get the range for, not null", "labels": []}
{"id": 16915, "text": "the map of fields to values, which can be updated, not null", "labels": []}
{"id": 16916, "text": "the requested type of resolve, not null", "labels": []}
{"id": 16917, "text": "For a parallel execution, this function may be called multiple times and must return a fresh value each time.", "labels": []}
{"id": 16918, "text": "an associative, non-interfering, stateless function that must fold an element into a result container.", "labels": []}
{"id": 16919, "text": "an associative, non-interfering, stateless function that accepts two partial result containers and merges them, which must be compatible with the accumulator function.", "labels": []}
{"id": 16920, "text": "The combiner function must fold the elements from the second result container into the first result container.", "labels": []}
{"id": 16921, "text": "a predicate to apply to elements to determine when the stream must terminate.", "labels": []}
{"id": 16922, "text": "the date-based adjuster, not null", "labels": []}
{"id": 16923, "text": "the day-of-week, not null", "labels": []}
{"id": 16924, "text": "the day-of-week to move the date to, not null", "labels": []}
{"id": 16925, "text": "the day-of-week to check for or move the date to, not null", "labels": []}
{"id": 16926, "text": "a boolean indicating whether to use opaque or transparent regions", "labels": []}
{"id": 16927, "text": "a boolean indicating whether or not to use anchoring bounds.", "labels": []}
{"id": 16928, "text": "Any of the descriptors can be null, in which case it is skipped.", "labels": []}
{"id": 16929, "text": "The array and array elements cannot be null.", "labels": []}
{"id": 16930, "text": "The array cannot be null.", "labels": []}
{"id": 16931, "text": "Cannot be null or empty.", "labels": []}
{"id": 16932, "text": "Can be null if that is a valid value for the field.", "labels": []}
{"id": 16933, "text": "Possibly null string containing additional detail about this exception.", "labels": []}
{"id": 16934, "text": "the length, in characters, to which the CLOB value should be truncated", "labels": []}
{"id": 16935, "text": "the non-null mime type for the content editing support", "labels": []}
{"id": 16936, "text": "the non-null content type", "labels": []}
{"id": 16937, "text": "This value can be null", "labels": []}
{"id": 16938, "text": "the new text to be set; if null the old text will be deleted", "labels": []}
{"id": 16939, "text": "List of ObjectNames of MBeans expected to be unregistered due to relation removal (can be null)", "labels": []}
{"id": 16940, "text": "the Frame to act as owner or null if this window has no owner", "labels": []}
{"id": 16941, "text": "the Window to act as owner or null if this window has no owner", "labels": []}
{"id": 16942, "text": "the window to act as owner or null if this window has no owner", "labels": []}
{"id": 16943, "text": "the GraphicsConfiguration of the target screen device; if gc is null, the system default GraphicsConfiguration is assumed", "labels": []}
{"id": 16944, "text": "if true, makes the Window visible, otherwise hides the Window.", "labels": []}
{"id": 16945, "text": "If the Window and/or its owner are not yet displayable, both are made displayable.", "labels": []}
{"id": 16946, "text": "If the Window is already visible, this will bring the Window to the front.", "labels": []}
{"id": 16947, "text": "If false, hides this Window, its subcomponents, and all of its owned children.", "labels": []}
{"id": 16948, "text": "If this parameter is null then the cursor for this window will be set to the type Cursor.DEFAULT_CURSOR.", "labels": []}
{"id": 16949, "text": "the modal exclusion type for this window; a null value is equivalent to NO_EXCLUDE", "labels": []}
{"id": 16950, "text": "true if the window should always be above other windows", "labels": []}
{"id": 16951, "text": "whether this Window can be the focused Window", "labels": []}
{"id": 16952, "text": "whether this window should be focused on subsequently being shown or being moved to the front", "labels": []}
{"id": 16953, "text": "the required capabilities for creating the buffer strategy; cannot be null", "labels": []}
{"id": 16954, "text": "true if this Window should appear at the default location, false if at the current location", "labels": []}
{"id": 16955, "text": "May be null, to indicate the default platform encoding.", "labels": []}
{"id": 16956, "text": "a Filter object (may be null)", "labels": []}
{"id": 16957, "text": "the new ErrorManager", "labels": []}
{"id": 16958, "text": "a descriptive string (may be null)", "labels": []}
{"id": 16959, "text": "an exception (may be null)", "labels": []}
{"id": 16960, "text": "an error code defined in ErrorManager", "labels": []}
{"id": 16961, "text": "indicates if lines should be wrapped", "labels": []}
{"id": 16962, "text": "indicates if word boundaries should be used for line wrapping", "labels": []}
{"id": 16963, "text": "a boolean value that determines whether the rectangle appears to be raised above the surface or etched into the surface.", "labels": []}
{"id": 16964, "text": "This method does nothing if img is null.", "labels": []}
{"id": 16965, "text": "the ImageObserver to be notified as more of the Image is converted", "labels": []}
{"id": 16966, "text": "the filter to be applied to the image before rendering", "labels": []}
{"id": 16967, "text": "If the flag is true, the Stroke outline is tested.", "labels": []}
{"id": 16968, "text": "If the flag is false, the filled Shape is tested.", "labels": []}
{"id": 16969, "text": "the Paint object to be used to generate color during the rendering process, or null", "labels": []}
{"id": 16970, "text": "If s is null, this method clears the current Clip.", "labels": []}
{"id": 16971, "text": "should be null", "labels": []}
{"id": 16972, "text": "of the input document type - null means match all types", "labels": []}
{"id": 16973, "text": "A value of null means match all formats.", "labels": []}
{"id": 16974, "text": "The initial Cursor for this drag operation or null for the default cursor handling; see DragSourceContext for more details on the cursor handling mechanism during drag and drop", "labels": []}
{"id": 16975, "text": "the non-null URL for the new splash screen image", "labels": []}
{"id": 16976, "text": "the object to be returned as the value if the system value is null", "labels": []}
{"id": 16977, "text": "the nested error.", "labels": []}
{"id": 16978, "text": "An instance of this class can be constructed where this parameter is null, but the standard connectors will never do so.", "labels": []}
{"id": 16979, "text": "The parent class loader for the class loader created by this method; may be null for the bootstrap class loader", "labels": []}
{"id": 16980, "text": "The parent class loader for each of the class loaders created by this method; may be null for the bootstrap class loader", "labels": []}
{"id": 16981, "text": "string to return if the first argument is null", "labels": []}
{"id": 16982, "text": "the object reference to check for nullity", "labels": []}
{"id": 16983, "text": "detail message to be used in the event that a NullPointerException is thrown", "labels": []}
{"id": 16984, "text": "a reference to be checked against null", "labels": []}
{"id": 16985, "text": "a non-null object to return if the first argument is null", "labels": []}
{"id": 16986, "text": "of a non-null object to return if the first argument is null", "labels": []}
{"id": 16987, "text": "supplier of the detail message to be used in the event that a NullPointerException is thrown", "labels": []}
{"id": 16988, "text": "the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks.", "labels": []}
{"id": 16989, "text": "For default value, use null.", "labels": []}
{"id": 16990, "text": "if true, establishes local first-in-first-out scheduling mode for forked tasks that are never joined.", "labels": []}
{"id": 16991, "text": "This mode may be more appropriate than default locally stack-based mode in applications in which worker threads only process event-style asynchronous tasks.", "labels": []}
{"id": 16992, "text": "if the width of children should be synchronized", "labels": []}
{"id": 16993, "text": "local socket address to bind, or null for an unbound socket.", "labels": []}
{"id": 16994, "text": "This value must be greater than 0.", "labels": []}
{"id": 16995, "text": "whether to enable or disable the", "labels": []}
{"id": 16996, "text": "the flavor object which caused the exception.", "labels": []}
{"id": 16997, "text": "the title to be displayed in the window's title bar, if there is such a title bar.", "labels": []}
{"id": 16998, "text": "A null value is treated as an empty string, \"\".", "labels": []}
{"id": 16999, "text": "whether this window should share the input context that corresponds to this input method context", "labels": []}
{"id": 17000, "text": "the underlying reason for this SQLWarning (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown.", "labels": []}
{"id": 17001, "text": "the time-zone ID, not null", "labels": []}
{"id": 17002, "text": "the offset, not null", "labels": []}
{"id": 17003, "text": "A possibly null string containing additional detail about this exception.", "labels": []}
{"id": 17004, "text": "The possibly null detail string explaining more about the problem with resolving a link.", "labels": []}
{"id": 17005, "text": "If null, it means no detail will be recorded.", "labels": []}
{"id": 17006, "text": "If null, it sets the link resolved name field to null.", "labels": []}
{"id": 17007, "text": "If null, it sets the remaining name field to null.", "labels": []}
{"id": 17008, "text": "If null, the link resolved object field is set to null.", "labels": []}
{"id": 17009, "text": "If true, add information about the link resolved object.", "labels": []}
{"id": 17010, "text": "how to expand the tabs when encountered.", "labels": []}
{"id": 17011, "text": "the parent of the view, null if none", "labels": []}
{"id": 17012, "text": "true if the width preference has changed", "labels": []}
{"id": 17013, "text": "true if the height preference has changed", "labels": []}
{"id": 17014, "text": "the specified AffineTransform to be wrapped, or null.", "labels": []}
{"id": 17015, "text": "It is allowed to use only a combination of valid values as a buttons parameter.", "labels": []}
{"id": 17016, "text": "The valid combination also depends on a Toolkit.areExtraMouseButtonsEnabled() value as follows: If support for extended mouse buttons is disabled by Java then it is allowed to use only the following standard button masks: InputEvent.BUTTON1_DOWN_MASK, InputEvent.BUTTON2_DOWN_MASK, InputEvent.BUTTON3_DOWN_MASK.", "labels": []}
{"id": 17017, "text": "If support for extended mouse buttons is enabled by Java then it is allowed to use the standard button masks and masks for existing extended mouse buttons, if the mouse has more then three buttons.", "labels": []}
{"id": 17018, "text": "It is recommended to use the InputEvent.getMaskForButton(button) method to obtain the mask for any mouse button by its number.", "labels": []}
{"id": 17019, "text": "The following standard button masks are also accepted: InputEvent.BUTTON1_MASK InputEvent.BUTTON2_MASK InputEvent.BUTTON3_MASK However, it is recommended to use InputEvent.BUTTON1_DOWN_MASK, InputEvent.BUTTON2_DOWN_MASK, InputEvent.BUTTON3_DOWN_MASK instead.", "labels": []}
{"id": 17020, "text": "Either extended _DOWN_MASK or old _MASK values should be used, but both those models should not be mixed.", "labels": []}
{"id": 17021, "text": "Whether waitForIdle is automatically invoked", "labels": []}
{"id": 17022, "text": "possibly null detail about this exception.", "labels": []}
{"id": 17023, "text": "a String object giving a description of the warning; if the String is null, this constructor behaves like the default (zero parameter) RowSetWarning constructor", "labels": []}
{"id": 17024, "text": "an XOPEN code identifying the warning; if a non standard XOPEN SQLState is supplied, no exception is thrown.", "labels": []}
{"id": 17025, "text": "the exception that occurred during ServerSocket creation", "labels": []}
{"id": 17026, "text": "A pointer to the MBeanServer object that must be passed to the MBeans when invoking their MBeanRegistration interface.", "labels": []}
{"id": 17027, "text": "The new MBeanServer must register this MBean in its MBean repository.", "labels": []}
{"id": 17028, "text": "The non-null IANA-registered name of a SASL mechanism.", "labels": []}
{"id": 17029, "text": "The fully qualified host name of the server to authenticate to, or null if the server is not bound to any specific host name.", "labels": []}
{"id": 17030, "text": "Possibly null detail about this exception.", "labels": []}
{"id": 17031, "text": "the number of columns to use to calculate the preferred width; if columns is set to zero, the preferred width will be whatever naturally results from the component implementation", "labels": []}
{"id": 17032, "text": "the text storage to use; if this is null, a default will be provided by calling the createDefaultModel method", "labels": []}
{"id": 17033, "text": "the initial string to display, or null", "labels": []}
{"id": 17034, "text": "the number of columns to use to calculate the preferred width >= 0; if columns is set to zero, the preferred width will be whatever naturally results from the component implementation", "labels": []}
{"id": 17035, "text": "the Action for the JTextField, or null", "labels": []}
{"id": 17036, "text": "the ImageReaderSpi that is invoking this constructor, or null.", "labels": []}
{"id": 17037, "text": "if true, images and metadata may only be read in ascending order from this input source.", "labels": []}
{"id": 17038, "text": "if true, metadata may be ignored during reads.", "labels": []}
{"id": 17039, "text": "the desired Locale, or null.", "labels": []}
{"id": 17040, "text": "if true, the true number of images will be returned even if a search is required.", "labels": []}
{"id": 17041, "text": "If false, the reader may return -1 without performing the search.", "labels": []}
{"id": 17042, "text": "an ImageReadParam used to control the reading process, or null.", "labels": []}
{"id": 17043, "text": "the ImageReadParam being used, or null.", "labels": []}
{"id": 17044, "text": "an ImageReadParam, or null.", "labels": []}
{"id": 17045, "text": "a BufferedImage that will be the destination image, or null.", "labels": []}
{"id": 17046, "text": "an ImageReadParam to be used to get the destination image or image type, or null.", "labels": []}
{"id": 17047, "text": "a map of key/value pairs to initialize the hints or null if the object should be empty", "labels": []}
{"id": 17048, "text": "the events for which this object should be registered", "labels": []}
{"id": 17049, "text": "the modifiers, if any, that modify how the object is registered", "labels": []}
{"id": 17050, "text": "whether or not partial returns are valid.", "labels": []}
{"id": 17051, "text": "Specifically, the lookup context must have private access privileges.", "labels": []}
{"id": 17052, "text": "When used with invokedynamic, this is stacked automatically by the VM.", "labels": []}
{"id": 17053, "text": "When used with invokedynamic, this is provided by the NameAndType of the InvokeDynamic structure and is stacked automatically by the VM.", "labels": []}
{"id": 17054, "text": "The parameter types represent the types of concatenation arguments; the return type is always assignable from String.", "labels": []}
{"id": 17055, "text": "The parameter types represent the types of dynamic concatenation arguments; the return type is always assignable from String.", "labels": []}
{"id": 17056, "text": "index after last element to be removed", "labels": []}
{"id": 17057, "text": "the URLStreamHandlerFactory to use when creating URLs", "labels": []}
{"id": 17058, "text": "class loader name; or null if not named", "labels": []}
{"id": 17059, "text": "true if the check box menu item is on, otherwise false", "labels": []}
{"id": 17060, "text": "must be null.", "labels": []}
{"id": 17061, "text": "If null, then this object will use standard JMX design pattern to determine the management interface associated with the given implementation.", "labels": []}
{"id": 17062, "text": "If true, the mbeanInterface parameter names an MXBean interface and the resultant MBean is an MXBean.", "labels": []}
{"id": 17063, "text": "If null is passed, the wrapped implementation is ignored and ctors is returned.", "labels": []}
{"id": 17064, "text": "This parameter may be null, in which case there is no new cached value.", "labels": []}
{"id": 17065, "text": "JFormattedTextField.AbstractFormatter used if a more specific is not specified", "labels": []}
{"id": 17066, "text": "JFormattedTextField.AbstractFormatter to use when the JFormattedTextField does not have focus", "labels": []}
{"id": 17067, "text": "JFormattedTextField.AbstractFormatter to use when the component has focus", "labels": []}
{"id": 17068, "text": "JFormattedTextField.AbstractFormatter to use when the value of the JFormattedTextField is null.", "labels": []}
{"id": 17069, "text": "the password, which may be null", "labels": []}
{"id": 17070, "text": "the encryption algorithm parameter specification, which may be null", "labels": []}
{"id": 17071, "text": "a string containing the error detail message", "labels": []}
{"id": 17072, "text": "the operation to perform after this operation", "labels": []}
{"id": 17073, "text": "the object whose field should be modified", "labels": []}
{"id": 17074, "text": "Note that if this method is not invoked explicitly or is passed null, then the factory will create an instance of BeansLinker to serve as the default fallback linker.", "labels": []}
{"id": 17075, "text": "true for invoking sync on relink, false otherwise.", "labels": []}
{"id": 17076, "text": "Must not be less than zero.", "labels": []}
{"id": 17077, "text": "The value of zero means that call sites will never be considered unstable.", "labels": []}
{"id": 17078, "text": "Can be null to have the factory use the default transformer.", "labels": []}
{"id": 17079, "text": "Can be null for no custom strategy.", "labels": []}
{"id": 17080, "text": "a method handle transformer filtering out internal objects, or null.", "labels": []}
{"id": 17081, "text": "a reference to a GraphicsConfiguration object or null", "labels": []}
{"id": 17082, "text": "used to indicate that the child should be notified that it is no longer nested in this BeanContext.", "labels": []}
{"id": 17083, "text": "The offset within the array of the first short to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 17084, "text": "The maximum number of shorts to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 17085, "text": "The source buffer from which shorts are to be read; must not be this buffer", "labels": []}
{"id": 17086, "text": "The offset within the array of the first short to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 17087, "text": "The number of shorts to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 17088, "text": "name of the host with which to connect, or null for the loopback address.", "labels": []}
{"id": 17089, "text": "the client's address the socket is bound to, or null for the anyLocal address.", "labels": []}
{"id": 17090, "text": "true if the socket should start its handshaking in \"client\" mode", "labels": []}
{"id": 17091, "text": "false indicates that an existing session must be resumed", "labels": []}
{"id": 17092, "text": "The possibly null value to check.", "labels": []}
{"id": 17093, "text": "If null, check whether the attribute has an attribute value whose value is null.", "labels": []}
{"id": 17094, "text": "The new possibly null value to add.", "labels": []}
{"id": 17095, "text": "If null, null is added as an attribute value.", "labels": []}
{"id": 17096, "text": "The possibly null value to remove from this attribute.", "labels": []}
{"id": 17097, "text": "If null, remove the attribute value that is null.", "labels": []}
{"id": 17098, "text": "The new replacement; must not be null, must have non-zero length, and must not be longer than the value returned by the maxCharsPerByte method", "labels": []}
{"id": 17099, "text": "The new action; must not be null", "labels": []}
{"id": 17100, "text": "true if, and only if, the invoker can provide no additional input bytes beyond those in the given buffer", "labels": []}
{"id": 17101, "text": "The header should start with \"set-cookie\", or \"set-cookie2\" token; or it should have no leading token at all.", "labels": []}
{"id": 17102, "text": "an integer specifying the maximum age of the cookie in seconds; if zero, the cookie should be discarded immediately; otherwise, the cookie's max age is unspecified.", "labels": []}
{"id": 17103, "text": "If true, the cookie can only be sent over a secure protocol like HTTPS.", "labels": []}
{"id": 17104, "text": "If false, it can be sent over any protocol.", "labels": []}
{"id": 17105, "text": "if true make the cookie HTTP only, i.e.", "labels": []}
{"id": 17106, "text": "only visible as part of an HTTP request.", "labels": []}
{"id": 17107, "text": "the identity value for the reduction (also, the value that is returned when there are no input elements)", "labels": []}
{"id": 17108, "text": "a mapping function to produce keys, must be non-null", "labels": []}
{"id": 17109, "text": "a mapping function to produce values, must be non-null", "labels": []}
{"id": 17110, "text": "a merge function, used to resolve collisions between values associated with the same key, as supplied to Map.merge(Object, Object, BiFunction), must be non-null", "labels": []}
{"id": 17111, "text": "the maximum amount that the control points for a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points.", "labels": []}
{"id": 17112, "text": "Since a Line2D object is always flat, this parameter is ignored.", "labels": []}
{"id": 17113, "text": "the locale to apply; null means apply no locale", "labels": []}
{"id": 17114, "text": "a boolean -- true if the event {should?/did?}", "labels": []}
{"id": 17115, "text": "If the SQL AS clause was not specified, then the label is the name of the column", "labels": []}
{"id": 17116, "text": "the number of the row to which the cursor should move.", "labels": []}
{"id": 17117, "text": "A value of zero indicates that the cursor will be positioned before the first row; a positive number indicates the row number counting from the beginning of the result set; a negative number indicates the row number counting from the end of the result set", "labels": []}
{"id": 17118, "text": "for an object of java.math.BigDecimal , this is the number of digits after the decimal point.", "labels": []}
{"id": 17119, "text": "true if column selection will be allowed, false otherwise", "labels": []}
{"id": 17120, "text": "Identifies behavior when focus is lost", "labels": []}
{"id": 17121, "text": "The exception thrown", "labels": []}
{"id": 17122, "text": "The date when the notification occurs.", "labels": []}
{"id": 17123, "text": "If true and if the notification is periodic, the notification is scheduled with a fixed-rate execution scheme.", "labels": []}
{"id": 17124, "text": "If false and if the notification is periodic, the notification is scheduled with a fixed-delay execution scheme.", "labels": []}
{"id": 17125, "text": "Ignored if the notification is not periodic.", "labels": []}
{"id": 17126, "text": "a Collection of X500Principals (or null)", "labels": []}
{"id": 17127, "text": "a Collection of names (or null)", "labels": []}
{"id": 17128, "text": "the minimum CRL number accepted (or null)", "labels": []}
{"id": 17129, "text": "the maximum CRL number accepted (or null)", "labels": []}
{"id": 17130, "text": "the Date to match against (or null)", "labels": []}
{"id": 17131, "text": "the X509Certificate being checked (or null)", "labels": []}
{"id": 17132, "text": "ignore encoding errors if true", "labels": []}
{"id": 17133, "text": "true if the Subject is to be read-only, and false otherwise.", "labels": []}
{"id": 17134, "text": "This parameter may be null.", "labels": []}
{"id": 17135, "text": "This may be the parent before or after the change, depending on the type of change", "labels": []}
{"id": 17136, "text": "the cause of this exception or null", "labels": []}
{"id": 17137, "text": "the list of acceptable CA issuer subject names or null if it does not matter which issuers are used.", "labels": []}
{"id": 17138, "text": "This parameter can be null, which indicates that implementations of this interface are free to select an alias applicable to any engine.", "labels": []}
{"id": 17139, "text": "the title of the dialog; a null value will be accepted without causing a NullPointerException to be thrown", "labels": []}
{"id": 17140, "text": "The FlavorMap to use, or null for the default FlavorMap", "labels": []}
{"id": 17141, "text": "a measure of the uncertainty that the caller is willing to tolerate: if the call returns true the probability that this BigInteger is prime exceeds (1 - 1/2certainty).", "labels": []}
{"id": 17142, "text": "the bitwise inclusive OR of the following flags: WIDTH, HEIGHT, PROPERTIES, SOMEBITS, FRAMEBITS, ALLBITS, ERROR, ABORT.", "labels": []}
{"id": 17143, "text": "the time to wait before starting this recording, not null", "labels": []}
{"id": 17144, "text": "true if the newly created copy should be stopped immediately, false otherwise", "labels": []}
{"id": 17145, "text": "the location where recording data is written, not null", "labels": []}
{"id": 17146, "text": "the amount of data to retain, 0 if infinite", "labels": []}
{"id": 17147, "text": "the length of time that data is kept, or null if infinite", "labels": []}
{"id": 17148, "text": "the destination path, or null if recording should not be dumped at stop", "labels": []}
{"id": 17149, "text": "if this recording should be dumped when the JVM exits", "labels": []}
{"id": 17150, "text": "true if this recording is written to disk, false if in-memory", "labels": []}
{"id": 17151, "text": "the duration, or null if no duration is set", "labels": []}
{"id": 17152, "text": "the settings for the event, not null", "labels": []}
{"id": 17153, "text": "the new log writer; to disable logging, set to null", "labels": []}
{"id": 17154, "text": "an arrival phase number, or negative value if terminated; this argument is normally the value returned by a previous call to arrive or arriveAndDeregister.", "labels": []}
{"id": 17155, "text": "the current phase number on entry to this method, before this phaser is advanced", "labels": []}
{"id": 17156, "text": "the GraphicsConfiguration that is used to construct the new window with; if gc is null, the system default GraphicsConfiguration is assumed, unless owner is also null, in which case the GraphicsConfiguration from the shared owner frame will be used.", "labels": []}
{"id": 17157, "text": "true if add and setLayout are forwarded, false if they should operate directly on the JWindow.", "labels": []}
{"id": 17158, "text": "May be null, in which case all bits of all component samples will be significant.", "labels": []}
{"id": 17159, "text": "Ignored if transferType is one of DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE, in which case all bits of all component samples will be significant.", "labels": []}
{"id": 17160, "text": "If true, this color model supports alpha.", "labels": []}
{"id": 17161, "text": "If true, alpha is premultiplied.", "labels": []}
{"id": 17162, "text": "If the components array is null, a new array is allocated.", "labels": []}
{"id": 17163, "text": "true if the alpha is premultiplied; false otherwise", "labels": []}
{"id": 17164, "text": "return objects only of these kinds", "labels": []}
{"id": 17165, "text": "if true include \"subpackages\"", "labels": []}
{"id": 17166, "text": "the kind of file, must be one of SOURCE or CLASS", "labels": []}
{"id": 17167, "text": "a file object to be used as hint for placement; might be null", "labels": []}
{"id": 17168, "text": "the BufferedImage to be written to, or null.", "labels": []}
{"id": 17169, "text": "The parent (if any) of this raster", "labels": []}
{"id": 17170, "text": "Array of band indices, or null to use all bands", "labels": []}
{"id": 17171, "text": "If null, an array of appropriate type and size will be allocated", "labels": []}
{"id": 17172, "text": "If null, an array of appropriate type and size will be allocated.", "labels": []}
{"id": 17173, "text": "the array of Objects to be loaded into the data model, non-null", "labels": []}
{"id": 17174, "text": "the Vector to be loaded into the data model, non-null", "labels": []}
{"id": 17175, "text": "true if the list should scroll to display the selected object, if one exists; otherwise false", "labels": []}
{"id": 17176, "text": "The non-null (but possibly empty) response sent by the client.", "labels": []}
{"id": 17177, "text": "A non-null byte array containing the encoded bytes from the client.", "labels": []}
{"id": 17178, "text": "A non-null byte array containing the bytes to encode.", "labels": []}
{"id": 17179, "text": "The public identifier, or null if none is available.", "labels": []}
{"id": 17180, "text": "the Supplier to generate the temporary variable name string or null", "labels": []}
{"id": 17181, "text": "the BiFunction to generate the id string or null", "labels": []}
{"id": 17182, "text": "the instant to create the date from, not null", "labels": []}
{"id": 17183, "text": "the text to parse such as \"2007-12-03\", not null", "labels": []}
{"id": 17184, "text": "the end date, exclusive, which is converted to a LocalDate, not null", "labels": []}
{"id": 17185, "text": "the end date, exclusive, which may be in any chronology, not null", "labels": []}
{"id": 17186, "text": "the end date, exclusive, not null", "labels": []}
{"id": 17187, "text": "the zone ID to use, not null", "labels": []}
{"id": 17188, "text": "the local time, not null", "labels": []}
{"id": 17189, "text": "the other date to compare to, not null", "labels": []}
{"id": 17190, "text": "the text to parse such as \"10:15:30+01:00\", not null", "labels": []}
{"id": 17191, "text": "the end time, exclusive, which is converted to an OffsetTime, not null", "labels": []}
{"id": 17192, "text": "the localdate, not null", "labels": []}
{"id": 17193, "text": "the initial Color set when the color-chooser is shown", "labels": []}
{"id": 17194, "text": "true if the transparency of a color can be selected", "labels": []}
{"id": 17195, "text": "When true, the remainder of the program is inactive until the dialog is closed.", "labels": []}
{"id": 17196, "text": "the ActionListener invoked when \"OK\" is pressed", "labels": []}
{"id": 17197, "text": "the ActionListener invoked when \"Cancel\" is pressed", "labels": []}
{"id": 17198, "text": "possibly null obj to check.", "labels": []}
{"id": 17199, "text": "must not be null", "labels": []}
{"id": 17200, "text": "The radix to use when scanning numbers", "labels": []}
{"id": 17201, "text": "The possibly null object identifier of the response control.", "labels": []}
{"id": 17202, "text": "The possibly null ASN.1 BER encoded value of the response control.", "labels": []}
{"id": 17203, "text": "Input schemas must be XML documents or XML elements and must not be null.", "labels": []}
{"id": 17204, "text": "Implementations must either recognize and process the input or thrown an IllegalArgumentException.", "labels": []}
{"id": 17205, "text": "the detailed message for the exception", "labels": []}
{"id": 17206, "text": "the Japanese era, not null", "labels": []}
{"id": 17207, "text": "if true the class will be initialized.", "labels": []}
{"id": 17208, "text": "class loader from which the class must be loaded", "labels": []}
{"id": 17209, "text": "the String that contains a detailed message (can be null)", "labels": []}
{"id": 17210, "text": "the detail message (can be null)", "labels": []}
{"id": 17211, "text": "the cause (can be null)", "labels": []}
{"id": 17212, "text": "the message to generate when a RasterFormatException is thrown", "labels": []}
{"id": 17213, "text": "The specification only defines the URI DEFAULT_OBJECT_MODEL_URI, http://java.sun.com/jaxp/xpath/dom for the W3C DOM, the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.", "labels": []}
{"id": 17214, "text": "The specification only defines the URI DEFAULT_OBJECT_MODEL_URI,http://java.sun.com/jaxp/xpath/dom for the W3C DOM, the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.", "labels": []}
{"id": 17215, "text": "The JAR file to be searched when the bootstrap class loader unsuccessfully searches for a class.", "labels": []}
{"id": 17216, "text": "The JAR file to be searched when the system class loader unsuccessfully searches for a class.", "labels": []}
{"id": 17217, "text": "The prefix to apply to wrapped native methods when retrying a failed native method resolution.", "labels": []}
{"id": 17218, "text": "If prefix is either null or the empty string, then failed native method resolutions are not retried for this transformer.", "labels": []}
{"id": 17219, "text": "the module to test if it can be modified", "labels": []}
{"id": 17220, "text": "The exception to be wrapped in a SAXException.", "labels": []}
{"id": 17221, "text": "if true and border property is not null, the border is painted.", "labels": []}
{"id": 17222, "text": "True if the source is in the same JVM as the target", "labels": []}
{"id": 17223, "text": "this object specifies the user-defined credentials to be passed in to the server in order to authenticate the caller before creating the RMIConnection.", "labels": []}
{"id": 17224, "text": "if true, sets palette icons", "labels": []}
{"id": 17225, "text": "In the event that the implementation method is an instance method and this signature has any parameters, the first parameter in the invocation signature must correspond to the receiver.", "labels": []}
{"id": 17226, "text": "A direct method handle describing the implementation method which should be called (with suitable adaptation of argument types, return types, and with captured arguments prepended to the invocation arguments) at invocation time.", "labels": []}
{"id": 17227, "text": "The signature and return type that should be enforced dynamically at invocation time.", "labels": []}
{"id": 17228, "text": "the end date, exclusive, which is converted to a ChronoLocalDate in the same chronology, not null", "labels": []}
{"id": 17229, "text": "the detail message, may be null", "labels": []}
{"id": 17230, "text": "the nested exception.", "labels": []}
{"id": 17231, "text": "the maximum limit of bytes that can be read before the mark position becomes invalid.", "labels": []}
{"id": 17232, "text": "the output stream, non-null", "labels": []}
{"id": 17233, "text": "used to select screen, null means primary or default screen", "labels": []}
{"id": 17234, "text": "to be browsable, must be non-null", "labels": []}
{"id": 17235, "text": "the flavor to be printed, or null", "labels": []}
{"id": 17236, "text": "This cannot be null but may be empty.", "labels": []}
{"id": 17237, "text": "The local address to bind the socket, or null to bind the socket to an automatically assigned socket address", "labels": []}
{"id": 17238, "text": "The association whose option should be retrieved, or null if this option should be retrieved at the channel's socket level.", "labels": []}
{"id": 17239, "text": "The association whose option should be set, or null if this option should be set at the channel's socket level.", "labels": []}
{"id": 17240, "text": "A value of null may be a valid value for some socket options.", "labels": []}
{"id": 17241, "text": "The object to attach to the receive operation; can be null", "labels": []}
{"id": 17242, "text": "A handler to handle notifications from the SCTP stack, or null to ignore any notifications.", "labels": []}
{"id": 17243, "text": "the time, in milliseconds, before the call aborts", "labels": []}
{"id": 17244, "text": "the NetworkInterface through which the test will be done, or null for any interface", "labels": []}
{"id": 17245, "text": "the specified host, or null.", "labels": []}
{"id": 17246, "text": "the name of the host, or null.", "labels": []}
{"id": 17247, "text": "true if Expect continue to be sent", "labels": []}
{"id": 17248, "text": "color to be used for text when the node is selected", "labels": []}
{"id": 17249, "text": "color to be used for text when the node isn't selected", "labels": []}
{"id": 17250, "text": "to be used for the background if the node is selected", "labels": []}
{"id": 17251, "text": "The Object whose notifyAll method will be called after Runnable.run has returned or thrown an exception or after the event was disposed", "labels": []}
{"id": 17252, "text": "Specifies whether dispatch should catch Throwable when executing the Runnable's run method, or should instead propagate those Throwables to the EventDispatchThread's dispatch loop", "labels": []}
{"id": 17253, "text": "The RunnableRunnable whose run() method will be called after the InvocationEvent was dispatched or disposed", "labels": []}
{"id": 17254, "text": "Detail about this exception.", "labels": []}
{"id": 17255, "text": "the unqualified name of the method or field (ignored if kind is CONSTRUCTOR)", "labels": []}
{"id": 17256, "text": "a method descriptor string the lookup type, if the request is for a method invocation, or describing the invocation type, if the request is for a field or constructor", "labels": []}
{"id": 17257, "text": "The kind of method handle to be described; must be one of SPECIAL, VIRTUAL, STATIC, INTERFACE_SPECIAL, INTERFACE_VIRTUAL, INTERFACE_STATIC, CONSTRUCTOR", "labels": []}
{"id": 17258, "text": "the unqualified name of the method (ignored if kind is CONSTRUCTOR)", "labels": []}
{"id": 17259, "text": "if true then the returned stream is a parallel stream; if false the returned stream is a sequential stream.", "labels": []}
{"id": 17260, "text": "The characteristics must be equal to supplier.get().characteristics(), otherwise undefined behavior may occur when terminal operation commences.", "labels": []}
{"id": 17261, "text": "an optional list of file attributes to set atomically when creating the file", "labels": []}
{"id": 17262, "text": "the thread pool or null to associate the channel with the default thread pool", "labels": []}
{"id": 17263, "text": "the array of attributes to set atomically when creating the symbolic link", "labels": []}
{"id": 17264, "text": "options specifying how the copy should be done", "labels": []}
{"id": 17265, "text": "options specifying how the move should be done", "labels": []}
{"id": 17266, "text": "true if columns may be selected; otherwise false", "labels": []}
{"id": 17267, "text": "the locale for error reporting.", "labels": []}
{"id": 17268, "text": "The new error event handler.", "labels": []}
{"id": 17269, "text": "If null is passed as this argument, the MenuSelectionManager.defaultManager is used.", "labels": []}
{"id": 17270, "text": "true if this menu is active, false if it is not", "labels": []}
{"id": 17271, "text": "The locator object for the error or warning (may be null).", "labels": []}
{"id": 17272, "text": "Any exception.", "labels": []}
{"id": 17273, "text": "The public identifier of the entity that generated the error or warning.", "labels": []}
{"id": 17274, "text": "The system identifier of the entity that generated the error or warning.", "labels": []}
{"id": 17275, "text": "The line number of the end of the text that caused the error or warning.", "labels": []}
{"id": 17276, "text": "The column number of the end of the text that cause the error or warning.", "labels": []}
{"id": 17277, "text": "Another exception to embed in this one.", "labels": []}
{"id": 17278, "text": "The notation's public identifier, or null if none was given.", "labels": []}
{"id": 17279, "text": "The notation's system identifier, or null if none was given.", "labels": []}
{"id": 17280, "text": "The entity's public identifier, or null if none was given.", "labels": []}
{"id": 17281, "text": "A non-null LexicalHandler for handling lexical parse events.", "labels": []}
{"id": 17282, "text": "true if this button is to be selected, otherwise false", "labels": []}
{"id": 17283, "text": "the set of properties to set when the group is recreated.", "labels": []}
{"id": 17284, "text": "the controlling options for executing the VM in another process (or null).", "labels": []}
{"id": 17285, "text": "the first column is 1, the second is 2, and so on; must be between 1 and the number of columns in the rowset, inclusive", "labels": []}
{"id": 17286, "text": "true if the given column is automatically incremented; false otherwise", "labels": []}
{"id": 17287, "text": "true to indicate that the column name is case sensitive; false otherwise", "labels": []}
{"id": 17288, "text": "true to indicate that a column value can be used in a WHERE clause; false otherwise", "labels": []}
{"id": 17289, "text": "the first column is 1, the second is 2, and so on; must be between 1 and the number of columns, inclusive between 1 and the number of columns, inclusive", "labels": []}
{"id": 17290, "text": "true if the value is a cash value; false otherwise.", "labels": []}
{"id": 17291, "text": "the first column is 1, the second is 2, and so on; must be between 1 and the number of columns, inclusive", "labels": []}
{"id": 17292, "text": "one of the following ResultSetMetaData constants: columnNoNulls, columnNullable, or columnNullableUnknown", "labels": []}
{"id": 17293, "text": "the column label to be used in printouts and displays; if the column label is null, an empty String is set", "labels": []}
{"id": 17294, "text": "the schema name for the table from which a value in the designated column was derived; may be an empty String or null", "labels": []}
{"id": 17295, "text": "the column's table's catalog name; if the catalogName is null, an empty String is set", "labels": []}
{"id": 17296, "text": "A Class defining an interface that the result must implement.", "labels": []}
{"id": 17297, "text": "a boolean indicating if the drop was successful", "labels": []}
{"id": 17298, "text": "It is not an error for it to be a different string.", "labels": []}
{"id": 17299, "text": "After reading this many characters, attempting to reset the stream may fail.", "labels": []}
{"id": 17300, "text": "If true, Containers should re-layout their components as the Container is being resized.", "labels": []}
{"id": 17301, "text": "If false, the layout will be validated after resizing is completed.", "labels": []}
{"id": 17302, "text": "the ImageObserver object to be notified as the image is being prepared.", "labels": []}
{"id": 17303, "text": "May not be null.", "labels": []}
{"id": 17304, "text": "A null title is equivalent to \"\".", "labels": []}
{"id": 17305, "text": "Because of this, PrintJobs which require job and page control should use the version of this function which takes JobAttributes and PageAttributes objects.", "labels": []}
{"id": 17306, "text": "the image to display when the cursor is activated", "labels": []}
{"id": 17307, "text": "the X and Y of the large cursor's hot spot; the hotSpot values must be less than the Dimension returned by getBestCursorSize", "labels": []}
{"id": 17308, "text": "true if cell is selected", "labels": []}
{"id": 17309, "text": "true if cell has focus", "labels": []}
{"id": 17310, "text": "the BEFORE_ROC/ROC value to represent, from 0 (BEFORE_ROC) to 1 (ROC)", "labels": []}
{"id": 17311, "text": "the style of the text required, not null", "labels": []}
{"id": 17312, "text": "true for success, false if not", "labels": []}
{"id": 17313, "text": "the component that will display the string, may be null", "labels": []}
{"id": 17314, "text": "the graphics context, must not be null", "labels": []}
{"id": 17315, "text": "the string to display, may be null", "labels": []}
{"id": 17316, "text": "the component, may be null", "labels": []}
{"id": 17317, "text": "the FontMetrics used to measure the string width, must be obtained from the correct font and graphics.", "labels": []}
{"id": 17318, "text": "the string to clip, may be null", "labels": []}
{"id": 17319, "text": "the FontMetrics used to measure the advance string width, must be obtained from the correct font and graphics.", "labels": []}
{"id": 17320, "text": "the string to get the advance width of, may be null", "labels": []}
{"id": 17321, "text": "the value to describe, which must be non-null", "labels": []}
{"id": 17322, "text": "the possibly-null value to describe", "labels": []}
{"id": 17323, "text": "the predicate to apply to a value, if present", "labels": []}
{"id": 17324, "text": "the mapping function to apply to a value, if present", "labels": []}
{"id": 17325, "text": "the value to be returned, if no value is present.", "labels": []}
{"id": 17326, "text": "The exception handler for this stream; if null the default exception listener will be used.", "labels": []}
{"id": 17327, "text": "the value subtracted from the input values before indexing into the arrays", "labels": []}
{"id": 17328, "text": "the value subtracted from the input values before indexing into the array", "labels": []}
{"id": 17329, "text": "The nonnull event.", "labels": []}
{"id": 17330, "text": "the amount of space available for the bouncing box to move in; for a horizontal progress bar, for example, this should be the inside width of the progress bar (the component width minus borders)", "labels": []}
{"id": 17331, "text": "for a horizontal progress bar, this should be the inside height of the progress bar; this value might be used to constrain or determine the return value", "labels": []}
{"id": 17332, "text": "the component whose minimum size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 17333, "text": "True if this feature should be hidden from human users.", "labels": []}
{"id": 17334, "text": "the first number in the sequence or null", "labels": []}
{"id": 17335, "text": "the last number in the sequence or null", "labels": []}
{"id": 17336, "text": "the current (non null) Number for this sequence", "labels": []}
{"id": 17337, "text": "the port number on which the remote object receives calls (if port is zero, an anonymous port is chosen)", "labels": []}
{"id": 17338, "text": "an ObjectInputFilter applied when deserializing invocation arguments; may be null", "labels": []}
{"id": 17339, "text": "if true, unexports the object even if there are pending or in-progress calls; if false, only unexports the object if there are no pending or in-progress calls", "labels": []}
{"id": 17340, "text": "true if deleted rows should be shown; false otherwise", "labels": []}
{"id": 17341, "text": "the X509Certificate to match (or null)", "labels": []}
{"id": 17342, "text": "the certificate serial number to match (or null)", "labels": []}
{"id": 17343, "text": "a distinguished name as X500Principal (or null)", "labels": []}
{"id": 17344, "text": "a distinguished name in RFC 2253 format (or null)", "labels": []}
{"id": 17345, "text": "a byte array containing the distinguished name in ASN.1 DER encoded form (or null)", "labels": []}
{"id": 17346, "text": "a byte array containing the distinguished name in ASN.1 DER format (or null)", "labels": []}
{"id": 17347, "text": "the subject key identifier (or null)", "labels": []}
{"id": 17348, "text": "the authority key identifier (or null)", "labels": []}
{"id": 17349, "text": "the Date to check (or null)", "labels": []}
{"id": 17350, "text": "The object identifier (OID) of the algorithm to check for (or null).", "labels": []}
{"id": 17351, "text": "the subject public key to check for (or null)", "labels": []}
{"id": 17352, "text": "a byte array containing the subject public key in ASN.1 DER form (or null)", "labels": []}
{"id": 17353, "text": "Or null.", "labels": []}
{"id": 17354, "text": "a Set of key purpose OIDs in string format (or null).", "labels": []}
{"id": 17355, "text": "if true, the flag is enabled; if false, the flag is disabled.", "labels": []}
{"id": 17356, "text": "the name in string form (not null)", "labels": []}
{"id": 17357, "text": "Only the value of the extension is included, not the OID or criticality flag.", "labels": []}
{"id": 17358, "text": "Can be null, in which case no name constraints check will be performed.", "labels": []}
{"id": 17359, "text": "a Set of certificate policy OIDs in string format (or null).", "labels": []}
{"id": 17360, "text": "a Collection with one entry per name (or null)", "labels": []}
{"id": 17361, "text": "the month of the month-day of the first day of the cutover week, not null", "labels": []}
{"id": 17362, "text": "the day of the month-day of the cutover week, positive if the week is that day or later, negative if the week is that day or earlier, counting from the last day of the month, from -28 to 31 excluding 0", "labels": []}
{"id": 17363, "text": "the required day-of-week, null if the month-day should not be changed", "labels": []}
{"id": 17364, "text": "the cutover time in the 'before' offset, not null", "labels": []}
{"id": 17365, "text": "whether the time is midnight at the end of day", "labels": []}
{"id": 17366, "text": "the standard offset in force at the cutover, not null", "labels": []}
{"id": 17367, "text": "the offset before the cutover, not null", "labels": []}
{"id": 17368, "text": "the offset after the cutover, not null", "labels": []}
{"id": 17369, "text": "the other object to compare to, null returns false", "labels": []}
{"id": 17370, "text": "the locale for which the resource bundle should be instantiated", "labels": []}
{"id": 17371, "text": "the flag to indicate bundle reloading; true if reloading an expired resource bundle, false otherwise", "labels": []}
{"id": 17372, "text": "the time when bundle was loaded and put in the cache", "labels": []}
{"id": 17373, "text": "the locale for which a resource bundle should be loaded", "labels": []}
{"id": 17374, "text": "if true, return the daylight saving name.", "labels": []}
{"id": 17375, "text": "Cannot be null.", "labels": []}
{"id": 17376, "text": "Can be null, which is equivalent to an empty Map.", "labels": []}
{"id": 17377, "text": "the MBean server to which the new connector server is attached, or null if it will be attached by being registered as an MBean in the MBean server.", "labels": []}
{"id": 17378, "text": "a primitive array in which to return the pixel data or null.", "labels": []}
{"id": 17379, "text": "the array containing the pixel to be returned or null", "labels": []}
{"id": 17380, "text": "the new Object to which the event should be dispatched", "labels": []}
{"id": 17381, "text": "the BeanContextServiceRevokedListener to notify if the service should later become revoked", "labels": []}
{"id": 17382, "text": "if true, the proxy is for an MXBean, and appropriate mappings will be applied to method parameters and return values.", "labels": []}
{"id": 17383, "text": "the component whose preferred size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 17384, "text": "true if the component was internally created", "labels": []}
{"id": 17385, "text": "The non-null context that fired this event.", "labels": []}
{"id": 17386, "text": "A possibly null binding before the change.", "labels": []}
{"id": 17387, "text": "A possibly null binding after the change.", "labels": []}
{"id": 17388, "text": "A possibly null object containing information about the change.", "labels": []}
{"id": 17389, "text": "the Executor to set, or null for default implementation", "labels": []}
{"id": 17390, "text": "Exception that we may have caught to reissue as an InvalidTargetObjectTypeException.", "labels": []}
{"id": 17391, "text": "String value that will be incorporated in message for this exception.", "labels": []}
{"id": 17392, "text": "The chain must be ordered and contain a Certificate at index 0 corresponding to the private key.", "labels": []}
{"id": 17393, "text": "the SQLException about to be thrown to the application", "labels": []}
{"id": 17394, "text": "If the parameter is of JDBC type NUMERIC or DECIMAL, the version of registerOutParameter that accepts a scale value should be used.", "labels": []}
{"id": 17395, "text": "It must be greater than or equal to zero.", "labels": []}
{"id": 17396, "text": "for java.sql.Types.DECIMAL or java.sql.Types.NUMERIC types, this is the number of digits after the decimal point.", "labels": []}
{"id": 17397, "text": "the fully-qualified name of an SQL user-defined type; ignored if the parameter is not a user-defined type or SQL REF value", "labels": []}
{"id": 17398, "text": "for java.sql.JDBCType.DECIMAL or java.sql.JDBCType.NUMERIC types, this is the number of digits after the decimal point.", "labels": []}
{"id": 17399, "text": "If the parameter is of JDBC type JDBCType.NUMERIC or JDBCType.DECIMAL, the version of registerOutParameter that accepts a scale value should be used.", "labels": []}
{"id": 17400, "text": "All positions that track change at or after the given location will move.", "labels": []}
{"id": 17401, "text": "This may be null if there are no attributes.", "labels": []}
{"id": 17402, "text": "Text to insert, null indicates no text to insert", "labels": []}
{"id": 17403, "text": "AttributeSet indicating attributes of inserted text, null is legal.", "labels": []}
{"id": 17404, "text": "true if this invocation completes the message, false otherwise", "labels": []}
{"id": 17405, "text": "true if this AWTKeyStroke corresponds to a key release; false otherwise", "labels": []}
{"id": 17406, "text": "true if the AWTKeyStroke should represent a key release; false otherwise", "labels": []}
{"id": 17407, "text": "the fully-qualified name of an SQL user-defined type; ignored if the parameter is not a user-defined type or REF", "labels": []}
{"id": 17408, "text": "the number of characters the zone may represent before attempting to break the zone into a smaller size.", "labels": []}
{"id": 17409, "text": "the desired maximum number of zones to be actively loaded, must be greater than 0", "labels": []}
{"id": 17410, "text": "This should be >= getStartOffset() and < getEndOffset().", "labels": []}
{"id": 17411, "text": "This value should also be < p1.", "labels": []}
{"id": 17412, "text": "This should be > getStartOffset() and <= getEndOffset().", "labels": []}
{"id": 17413, "text": "This value should also be > p0.", "labels": []}
{"id": 17414, "text": "This should not be null if this method gets called", "labels": []}
{"id": 17415, "text": "the time-zone to change to, not null", "labels": []}
{"id": 17416, "text": "the temporal object used to refine the result, not null", "labels": []}
{"id": 17417, "text": "the partially complete temporal to query for zone and chronology; querying for other things is undefined and not recommended, not null", "labels": []}
{"id": 17418, "text": "object to be removed from this set, if present", "labels": []}
{"id": 17419, "text": "Flight Recorder instance, not null", "labels": []}
{"id": 17420, "text": "the recording where the state change occurred, not null", "labels": []}
{"id": 17421, "text": "The new replacement; must not be null, must have non-zero length, must not be longer than the value returned by the maxBytesPerChar method, and must be legal", "labels": []}
{"id": 17422, "text": "true if, and only if, the invoker can provide no additional input characters beyond those in the given buffer", "labels": []}
{"id": 17423, "text": "the set of values, not null", "labels": []}
{"id": 17424, "text": "the string value, not null", "labels": []}
{"id": 17425, "text": "the detail message, which should include the name of the file attempting to be opened; may be null", "labels": []}
{"id": 17426, "text": "whether this ContainerOrderFocusTraversalPolicy transfers focus down-cycle implicitly", "labels": []}
{"id": 17427, "text": "The exception to be encapsulated in a TransformerConfigurationException.", "labels": []}
{"id": 17428, "text": "The exception to be encapsulated in a TransformerConfigurationException", "labels": []}
{"id": 17429, "text": "the location in the model where the fragment should start it's representation >= 0.", "labels": []}
{"id": 17430, "text": "This should be a value greater or equal to the element starting offset and less than the element ending offset.", "labels": []}
{"id": 17431, "text": "This should be a value less than or equal to the elements end offset and greater than the elements starting offset.", "labels": []}
{"id": 17432, "text": "The object attached to the receive operation when it was initiated.", "labels": []}
{"id": 17433, "text": "the filter, may be null", "labels": []}
{"id": 17434, "text": "If launched, the Process object for the target VM.", "labels": []}
{"id": 17435, "text": "null if not launched.", "labels": []}
{"id": 17436, "text": "the other comparator to be used when this comparator compares two objects that are equal.", "labels": []}
{"id": 17437, "text": "a Comparator for comparing non-null values", "labels": []}
{"id": 17438, "text": "the operator to apply before this operator is applied", "labels": []}
{"id": 17439, "text": "the operator to apply after this operator is applied", "labels": []}
{"id": 17440, "text": "the exception to throw.", "labels": []}
{"id": 17441, "text": "If this exception is not a RuntimeException or Error, the actual exception thrown will be a RuntimeException with cause ex.", "labels": []}
{"id": 17442, "text": "can be used to indicate if this MenuElement is active (if it is a menu) or is on the part of the menu path that changed (if it is a menu item).", "labels": []}
{"id": 17443, "text": "Must be non-negative.", "labels": []}
{"id": 17444, "text": "If zero, all referring objects are returned.", "labels": []}
{"id": 17445, "text": "The filter that was specified when the listener was added.", "labels": []}
{"id": 17446, "text": "The handback that was specified when the listener was added.", "labels": []}
{"id": 17447, "text": "The index at which the parse error occurred, or -1 if the index is not known", "labels": []}
{"id": 17448, "text": "the sources of authentication keys or null", "labels": []}
{"id": 17449, "text": "the sources of peer authentication trust decisions or null", "labels": []}
{"id": 17450, "text": "the source of randomness for this generator or null", "labels": []}
{"id": 17451, "text": "Specify null to omit the parameter.", "labels": []}
{"id": 17452, "text": "the detail message pertaining to this exception.", "labels": []}
{"id": 17453, "text": "the cause (A null value is permitted, and indicates that the cause is nonexistent or unknown.)", "labels": []}
{"id": 17454, "text": "the Runnable whose run method should be executed asynchronously in the event dispatch thread of the system EventQueue", "labels": []}
{"id": 17455, "text": "the Runnable whose run method should be executed synchronously in the event dispatch thread of the system EventQueue", "labels": []}
{"id": 17456, "text": "if true, enables this menu item; if false, disables it.", "labels": []}
{"id": 17457, "text": "Passing in a value of null will imply that the private credential set should be left empty.", "labels": []}
{"id": 17458, "text": "the DocTreePath of item where the error occurs", "labels": []}
{"id": 17459, "text": "the Element for which the error occurs", "labels": []}
{"id": 17460, "text": "a Proxy object specifying what kind of proxying should be used.", "labels": []}
{"id": 17461, "text": "the host name, or null for the loopback address.", "labels": []}
{"id": 17462, "text": "the name of the remote host, or null for the loopback address.", "labels": []}
{"id": 17463, "text": "the local address the socket is bound to, or null for the anyLocal address.", "labels": []}
{"id": 17464, "text": "whether or not to linger on.", "labels": []}
{"id": 17465, "text": "how long to linger for, if on is true.", "labels": []}
{"id": 17466, "text": "whether to enable or disable the socket option", "labels": []}
{"id": 17467, "text": "the component whose maximum size is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 17468, "text": "a Runnable to invoke when the object becomes phantom reachable", "labels": []}
{"id": 17469, "text": "Equals true if the focus change is temporary; false otherwise", "labels": []}
{"id": 17470, "text": "The other Component involved in the focus change, or null", "labels": []}
{"id": 17471, "text": "If null, no connection request controls are used.", "labels": []}
{"id": 17472, "text": "The node to check to see if it passes the filter or not.", "labels": []}
{"id": 17473, "text": "The group to which the newly constructed channel should be bound, or null for the default group", "labels": []}
{"id": 17474, "text": "True if this is a bound property.", "labels": []}
{"id": 17475, "text": "True if this is a constrained property.", "labels": []}
{"id": 17476, "text": "An array of floats to be used as the first and only bank of this DataBuffer.", "labels": []}
{"id": 17477, "text": "true if the password should be displayed as it is being typed.", "labels": []}
{"id": 17478, "text": "the retrieved password, which may be null.", "labels": []}
{"id": 17479, "text": "the number of times playback should loop back from the loop's end position to the loop's start position, or LOOP_CONTINUOUSLY to indicate that looping should continue until interrupted", "labels": []}
{"id": 17480, "text": "the new last modified time, or null to not change the value", "labels": []}
{"id": 17481, "text": "the last access time, or null to not change the value", "labels": []}
{"id": 17482, "text": "the file's create time, or null to not change the value", "labels": []}
{"id": 17483, "text": "the underlying model to use, or null", "labels": []}
{"id": 17484, "text": "whether the color is obtained from SystemColor or Color.decode", "labels": []}
{"id": 17485, "text": "an Action that knows how to render the audio associated with the system or user activity that is occurring; a value of null, is ignored", "labels": []}
{"id": 17486, "text": "This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait.", "labels": []}
{"id": 17487, "text": "The value is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 17488, "text": "This value is always the one passed to a release method, or the current state value upon entry to a condition wait.", "labels": []}
{"id": 17489, "text": "This value is conveyed to tryAcquire(int) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 17490, "text": "This value is conveyed to tryRelease(int) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 17491, "text": "This value is conveyed to tryAcquireShared(int) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 17492, "text": "This value is conveyed to tryReleaseShared(int) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 17493, "text": "the width to use when justifying the line.", "labels": []}
{"id": 17494, "text": "For best results, it should not be too different from the current advance of the line.", "labels": []}
{"id": 17495, "text": "This must be a valid hit on the TextLayout.", "labels": []}
{"id": 17496, "text": "the number of line containing the error", "labels": []}
{"id": 17497, "text": "the error type", "labels": []}
{"id": 17498, "text": "the 1st error message argument", "labels": []}
{"id": 17499, "text": "the 2nd error message argument", "labels": []}
{"id": 17500, "text": "the 3rd error message argument", "labels": []}
{"id": 17501, "text": "The non-null class name of the object to which this reference refers.", "labels": []}
{"id": 17502, "text": "The non-null address of the object.", "labels": []}
{"id": 17503, "text": "true if this object can return or accept a DOM tree using the standard metadata format.", "labels": []}
{"id": 17504, "text": "the name of the native metadata format, as a String, or null if there is no native format.", "labels": []}
{"id": 17505, "text": "the name of the class of the native metadata format, or null if there is no native format.", "labels": []}
{"id": 17506, "text": "an array of Strings indicating additional formats supported by this object, or null if there are none.", "labels": []}
{"id": 17507, "text": "an array of Strings indicating the class names of any additional formats supported by this object, or null if there are none.", "labels": []}
{"id": 17508, "text": "An appropriate IIOMetadataController, or null.", "labels": []}
{"id": 17509, "text": "The Authenticator that should be used by this HttpURLConnection.", "labels": []}
{"id": 17510, "text": "If chunklen is less than or equal to zero, a default value will be used.", "labels": []}
{"id": 17511, "text": "a boolean indicating whether or not to follow HTTP redirects.", "labels": []}
{"id": 17512, "text": "If null, defaults to jmxmp.", "labels": []}
{"id": 17513, "text": "If host is null and if local host name can be resolved to an IP, then host defaults to local host name as determined by InetAddress.getLocalHost().getHostName().", "labels": []}
{"id": 17514, "text": "If host is null and if local host name cannot be resolved to an IP, then host defaults to numeric IP address of one of the active network interfaces.", "labels": []}
{"id": 17515, "text": "If host is a numeric IPv6 address, it can optionally be enclosed in square brackets [].", "labels": []}
{"id": 17516, "text": "true if the progress bar should render a string", "labels": []}
{"id": 17517, "text": "true if the progress bar should paint its border; otherwise, false", "labels": []}
{"id": 17518, "text": "true if the progress bar should change to indeterminate mode; false if it should revert to normal.", "labels": []}
{"id": 17519, "text": "The Namespace URI, or the empty string if the name has no Namespace URI.", "labels": []}
{"id": 17520, "text": "the specified IOException", "labels": []}
{"id": 17521, "text": "the Blob object from which this SerialBlob object is to be constructed; cannot be null.", "labels": []}
{"id": 17522, "text": "the ordinal position of the first byte in this SerialBlob object to be copied; numbering starts at 1; must not be less than 1 and must be less than or equal to the length of this SerialBlob object", "labels": []}
{"id": 17523, "text": "The exception to be encapsulated in a FactoryConfigurationError.", "labels": []}
{"id": 17524, "text": "The exception to be encapsulated in a FactoryConfigurationError", "labels": []}
{"id": 17525, "text": "Must be positive.", "labels": []}
{"id": 17526, "text": "if true, retrieves all locked monitors.", "labels": []}
{"id": 17527, "text": "if true, retrieves all locked ownable synchronizers.", "labels": []}
{"id": 17528, "text": "if true, dump all locked monitors.", "labels": []}
{"id": 17529, "text": "if true, dump all locked ownable synchronizers.", "labels": []}
{"id": 17530, "text": "the index of the column in the model that supplies the data for this column in the table; the model index remains the same even when columns are reordered in the view", "labels": []}
{"id": 17531, "text": "if true, resizing is allowed; otherwise false", "labels": []}
{"id": 17532, "text": "If positive, block for up to timeout milliseconds, more or less, while waiting for a channel to become ready; if zero, block indefinitely; must not be negative", "labels": []}
{"id": 17533, "text": "a String describing the exception.", "labels": []}
{"id": 17534, "text": "The non-null name of the search item.", "labels": []}
{"id": 17535, "text": "true if name is relative to the target context of the search (which is named by the first parameter of the search() method); false if name is a URL string.", "labels": []}
{"id": 17536, "text": "The exception to be encapsulated in a TransformerFactoryConfigurationError.", "labels": []}
{"id": 17537, "text": "The exception to be encapsulated in a TransformerFactoryConfigurationError", "labels": []}
{"id": 17538, "text": "the Component to which the event should be dispatched", "labels": []}
{"id": 17539, "text": "the Component that will be the basis for a focus traversal operation if the specified event represents a focus traversal key for the Component", "labels": []}
{"id": 17540, "text": "timestamp of current event, or the current, system time if the current event has no timestamp, or the AWT cannot determine which event is currently being handled", "labels": []}
{"id": 17541, "text": "Component which should receive a FOCUS_GAINED event before any pending KeyEvents", "labels": []}
{"id": 17542, "text": "value indicating which of start's neighbors or start should be returned", "labels": []}
{"id": 17543, "text": "A non-null enumeration of the components to add.", "labels": []}
{"id": 17544, "text": "A non-null properties that specify the syntax of this compound name.", "labels": []}
{"id": 17545, "text": "The possibly null object to compare against.", "labels": []}
{"id": 17546, "text": "Must be in the range [0,size()].", "labels": []}
{"id": 17547, "text": "The possibly null compound name to check.", "labels": []}
{"id": 17548, "text": "The non-null components to add.", "labels": []}
{"id": 17549, "text": "The non-null component to add.", "labels": []}
{"id": 17550, "text": "The stream to which any initialization statements should be written.", "labels": []}
{"id": 17551, "text": "an offset associated with the character before the offset", "labels": []}
{"id": 17552, "text": "an offset associated with the character after the offset", "labels": []}
{"id": 17553, "text": "the non-null value to be merged with the existing value associated with the key or, if no existing value or a null value is associated with the key, to be associated with the key", "labels": []}
{"id": 17554, "text": "the remapping function to recompute a value if present", "labels": []}
{"id": 17555, "text": "The stratum to retrieve information from or null for the declaring type's default stratum.", "labels": []}
{"id": 17556, "text": "the index of the previous rollover column or -1 if the mouse was not over a column", "labels": []}
{"id": 17557, "text": "the index of the new rollover column or -1 if the mouse is not over a column", "labels": []}
{"id": 17558, "text": "true if the javadoc for the given input should be computed in addition to the signature", "labels": []}
{"id": 17559, "text": "the expression for which the type should be inferred", "labels": []}
{"id": 17560, "text": "the exception to nest", "labels": []}
{"id": 17561, "text": "null can be used to specify that a mechanism specific default printable syntax should be assumed by each mechanism that examines nameStr.", "labels": []}
{"id": 17562, "text": "null can be used to specify that a mechanism specific default syntax should be assumed by each mechanism that examines the byte array.", "labels": []}
{"id": 17563, "text": "The value of this parameter must be one of: GSSCredential.INITIATE_AND_ACCEPT, GSSCredential.ACCEPT_ONLY, and GSSCredential.INITIATE_ONLY.", "labels": []}
{"id": 17564, "text": "The number of seconds that credentials should remain valid.", "labels": []}
{"id": 17565, "text": "Use (Oid) null to request the default mechanism.", "labels": []}
{"id": 17566, "text": "Use (Oid[]) null for requesting a system specific default set of mechanisms.", "labels": []}
{"id": 17567, "text": "Use null to request the default mechanism.", "labels": []}
{"id": 17568, "text": "Use null to act as the default initiator principal.", "labels": []}
{"id": 17569, "text": "Use null to act as a default acceptor principal.", "labels": []}
{"id": 17570, "text": "the provider instance that should be used whenever support is needed for mech.", "labels": []}
{"id": 17571, "text": "the input stream from which file format information should be extracted", "labels": []}
{"id": 17572, "text": "the URL from which file format information should be extracted", "labels": []}
{"id": 17573, "text": "the File from which file format information should be extracted", "labels": []}
{"id": 17574, "text": "the input stream from which the AudioInputStream should be constructed", "labels": []}
{"id": 17575, "text": "the URL for which the AudioInputStream should be constructed", "labels": []}
{"id": 17576, "text": "the File for which the AudioInputStream should be constructed", "labels": []}
{"id": 17577, "text": "the algorithm parameters (may be null if not required or optional)", "labels": []}
{"id": 17578, "text": "a mechanism-specific structure containing the parent node that the marshalled parameters should be appended to", "labels": []}
{"id": 17579, "text": "the XMLCryptoContext containing additional context (may be null if not applicable)", "labels": []}
{"id": 17580, "text": "Only extended modifiers are allowed to be used as a value for this parameter (see the InputEvent.getModifiersEx() class for the description of extended modifiers).", "labels": []}
{"id": 17581, "text": "Passing negative parameter is not recommended.", "labels": []}
{"id": 17582, "text": "Passing negative value is not recommended", "labels": []}
{"id": 17583, "text": "A boolean that equals true if this event is a trigger for a popup menu", "labels": []}
{"id": 17584, "text": "The following rules are applied to this parameter: If support for the extended mouse buttons is disabled by Java then it is allowed to create MouseEvent objects only with the standard buttons: NOBUTTON, BUTTON1, BUTTON2, and BUTTON3.", "labels": []}
{"id": 17585, "text": "If support for the extended mouse buttons is enabled by Java then it is allowed to create MouseEvent objects with the standard buttons.", "labels": []}
{"id": 17586, "text": "In case the support for extended mouse buttons is enabled by Java, then in addition to the standard buttons, MouseEvent objects can be created using buttons from the range starting from 4 to MouseInfo.getNumberOfButtons() if the mouse has more than three buttons.", "labels": []}
{"id": 17587, "text": "The options to provide to the Agent_OnAttach[_L] function (can be null).", "labels": []}
{"id": 17588, "text": "The options to provide to the agent's agentmain method (can be null).", "labels": []}
{"id": 17589, "text": "the exception causing this thread to abort due to an unrecoverable error, or null if completed normally", "labels": []}
{"id": 17590, "text": "the starting offset into b of where the data should be placed.", "labels": []}
{"id": 17591, "text": "If the returned value is cd, then cd.getCompositeType().equals(ct) should be true.", "labels": []}
{"id": 17592, "text": "If null, then all attribute changes will cause an attributeChangeNotification to be issued.", "labels": []}
{"id": 17593, "text": "the number of ElementSpec.EndTagTypes to generate before inserting", "labels": []}
{"id": 17594, "text": "the number of ElementSpec.StartTagTypes with a direction of ElementSpec.JoinNextDirection that should be generated before inserting, but after the end tags have been generated", "labels": []}
{"id": 17595, "text": "the certificate chain for the corresponding public key (only required if the given key is of type java.security.PrivateKey).", "labels": []}
{"id": 17596, "text": "the certificate chain for the corresponding public key (only useful if the protected key is of type java.security.PrivateKey).", "labels": []}
{"id": 17597, "text": "the input stream from which the keystore is loaded, or null", "labels": []}
{"id": 17598, "text": "the password used to check the integrity of the keystore, the password used to unlock the keystore, or null", "labels": []}
{"id": 17599, "text": "the KeyStore.LoadStoreParameter that specifies how to load the keystore, which may be null", "labels": []}
{"id": 17600, "text": "the ProtectionParameter used to protect the Entry, which may be null", "labels": []}
{"id": 17601, "text": "The possibly null attribute value to add; if null, null is the value added.", "labels": []}
{"id": 17602, "text": "The possibly null attribute value to use.", "labels": []}
{"id": 17603, "text": "If null, 'null' replaces the old value.", "labels": []}
{"id": 17604, "text": "the type whose class value must be computed", "labels": []}
{"id": 17605, "text": "the type whose class value must be computed or retrieved", "labels": []}
{"id": 17606, "text": "the type whose class value must be removed", "labels": []}
{"id": 17607, "text": "a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search", "labels": []}
{"id": 17608, "text": "a schema name pattern; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; null means that the schema name should not be used to narrow the search", "labels": []}
{"id": 17609, "text": "a procedure name pattern; must match the procedure name as it is stored in the database", "labels": []}
{"id": 17610, "text": "a column name pattern; must match the column name as it is stored in the database", "labels": []}
{"id": 17611, "text": "a table name pattern; must match the table name as it is stored in the database", "labels": []}
{"id": 17612, "text": "a list of table types, which must be from the list of table types returned from getTableTypes(),to include; null returns all types", "labels": []}
{"id": 17613, "text": "a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; null means that the schema name should not be used to narrow the search", "labels": []}
{"id": 17614, "text": "a table name; must match the table name as it is stored in the database", "labels": []}
{"id": 17615, "text": "include columns that are nullable.", "labels": []}
{"id": 17616, "text": "a catalog name; must match the catalog name as it is stored in this database; \"\" retrieves those without a catalog; null means that the catalog name should not be used to narrow the search", "labels": []}
{"id": 17617, "text": "a table name; must match the table name as it is stored in this database", "labels": []}
{"id": 17618, "text": "a catalog name; must match the catalog name as it is stored in the database; \"\" retrieves those without a catalog; null means drop catalog name from the selection criteria", "labels": []}
{"id": 17619, "text": "a schema name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; null means drop schema name from the selection criteria", "labels": []}
{"id": 17620, "text": "the name of the table that exports the key; must match the table name as it is stored in the database", "labels": []}
{"id": 17621, "text": "the name of the table that imports the key; must match the table name as it is stored in the database", "labels": []}
{"id": 17622, "text": "a schema name; must match the schema name as it is stored in this database; \"\" retrieves those without a schema; null means that the schema name should not be used to narrow the search", "labels": []}
{"id": 17623, "text": "when true, return only indices for unique values; when false, return indices regardless of whether unique or not", "labels": []}
{"id": 17624, "text": "when true, result is allowed to reflect approximate or out of data values; when false, results are requested to be accurate", "labels": []}
{"id": 17625, "text": "the ResultSet type; one of ResultSet.TYPE_FORWARD_ONLY, ResultSet.TYPE_SCROLL_INSENSITIVE, or ResultSet.TYPE_SCROLL_SENSITIVE", "labels": []}
{"id": 17626, "text": "a schema pattern name; must match the schema name as it is stored in the database; \"\" retrieves those without a schema; null means that the schema name should not be used to narrow the search", "labels": []}
{"id": 17627, "text": "a type name pattern; must match the type name as it is stored in the database; may be a fully qualified name", "labels": []}
{"id": 17628, "text": "a list of user-defined types (JAVA_OBJECT, STRUCT, or DISTINCT) to include; null returns all types", "labels": []}
{"id": 17629, "text": "a catalog name; \"\" retrieves those without a catalog; null means drop catalog name from the selection criteria", "labels": []}
{"id": 17630, "text": "a type name pattern; must match the type name as it is stored in the database", "labels": []}
{"id": 17631, "text": "an attribute name pattern; must match the attribute name as it is declared in the database", "labels": []}
{"id": 17632, "text": "a catalog name; must match the catalog name as it is stored in the database;\"\" retrieves those without a catalog; null means catalog name should not be used to narrow down the search.", "labels": []}
{"id": 17633, "text": "a schema name; must match the schema name as it is stored in the database; null means schema name should not be used to narrow down the search.", "labels": []}
{"id": 17634, "text": "a function name pattern; must match the function name as it is stored in the database", "labels": []}
{"id": 17635, "text": "a procedure name pattern; must match the function name as it is stored in the database", "labels": []}
{"id": 17636, "text": "a parameter name pattern; must match the parameter or column name as it is stored in the database", "labels": []}
{"id": 17637, "text": "the class loader to locate the provider or null to only attempt to locate an installed provider", "labels": []}
{"id": 17638, "text": "If this is specified as null, any namespace prefix within the expression will result in DOMException being thrown with the code NAMESPACE_ERR.", "labels": []}
{"id": 17639, "text": "If the XPathEvaluator was obtained by casting the Document then this must be owned by the same document and must be a Document, Element, Attribute, Text, CDATASection, Comment, ProcessingInstruction, or XPathNamespace node.", "labels": []}
{"id": 17640, "text": "If the context node is a Text or a CDATASection, then the context is interpreted as the whole logical text node as seen by XPath, unless the node is empty in which case it may not serve as the XPath context.", "labels": []}
{"id": 17641, "text": "If a specific type is specified, then the result will be returned as the corresponding type.For XPath 1.0 results, this must be one of the codes of the XPathResult interface.", "labels": []}
{"id": 17642, "text": "If this is specified as nullor the implementation does not reuse the specified result, a new result object will be constructed and returned.For XPath 1.0 results, this object will be of type XPathResult.", "labels": []}
{"id": 17643, "text": "the SizeRequirements object; if null one will be created", "labels": []}
{"id": 17644, "text": "Possibly null detail explaining the exception.", "labels": []}
{"id": 17645, "text": "the message to use for this exception, may be null", "labels": []}
{"id": 17646, "text": "the cause of the exception, may be null", "labels": []}
{"id": 17647, "text": "the event to add, may not be null", "labels": []}
{"id": 17648, "text": "String describing the exception.", "labels": []}
{"id": 17649, "text": "Exception causing the abort.", "labels": []}
{"id": 17650, "text": "the RowSet object that is to be added to this JoinRowSet object; it must implement the Joinable interface and have a match column set", "labels": []}
{"id": 17651, "text": "A boolean indicating whether to generate optimized Huffman tables when writing.", "labels": []}
{"id": 17652, "text": "a error message", "labels": []}
{"id": 17653, "text": "The error object that describes the error.", "labels": []}
{"id": 17654, "text": "This object may be reused by the DOM implementation across multiple calls to the handleError method.", "labels": []}
{"id": 17655, "text": "a Set of initial policy OIDs in String format (or null)", "labels": []}
{"id": 17656, "text": "a List of CertStores (or null)", "labels": []}
{"id": 17657, "text": "true if explicit policy is to be required, false otherwise", "labels": []}
{"id": 17658, "text": "true if policy mapping is to be inhibited, false otherwise", "labels": []}
{"id": 17659, "text": "true if the any policy OID is to be inhibited, false otherwise", "labels": []}
{"id": 17660, "text": "the Date, or null for the current time", "labels": []}
{"id": 17661, "text": "May be null, in which case no additional checkers will be used.", "labels": []}
{"id": 17662, "text": "If null, the checker is ignored (not added to list).", "labels": []}
{"id": 17663, "text": "the signature provider's name (or null)", "labels": []}
{"id": 17664, "text": "a CertSelector specifying the constraints on the target certificate (or null)", "labels": []}
{"id": 17665, "text": "A possibly null object whose state is to be retrieved.", "labels": []}
{"id": 17666, "text": "The possibly null environment to be used in the creation of the object's state.", "labels": []}
{"id": 17667, "text": "The possibly null attributes to be bound with the object.", "labels": []}
{"id": 17668, "text": "The factory must not modify inAttrs.", "labels": []}
{"id": 17669, "text": "desired encoding of the stream after processing", "labels": []}
{"id": 17670, "text": "the ImageProducer that is feeding this instance of the filter - also the ImageProducer that the request should be forwarded to if necessary", "labels": []}
{"id": 17671, "text": "if false, write/read field values in the same manner as writeObject/readObject; if true, write/read in the same manner as writeUnshared/readUnshared", "labels": []}
{"id": 17672, "text": "The cause; can be null", "labels": []}
{"id": 17673, "text": "must be one of SpringLayout.NORTH, SpringLayout.SOUTH, SpringLayout.EAST, SpringLayout.WEST, SpringLayout.VERTICAL_CENTER, SpringLayout.HORIZONTAL_CENTER or SpringLayout.BASELINE", "labels": []}
{"id": 17674, "text": "the text to be displayed, null if none", "labels": []}
{"id": 17675, "text": "a plug-in specific extension object, which may be null.", "labels": []}
{"id": 17676, "text": "the name of the exception", "labels": []}
{"id": 17677, "text": "a description of why the exception might be thrown", "labels": []}
{"id": 17678, "text": "May be null, in which case this method is equivalent to loadClass(className).", "labels": []}
{"id": 17679, "text": "the parsed text, should not be null", "labels": []}
{"id": 17680, "text": "the index in the parsed string that was invalid, should be a valid index", "labels": []}
{"id": 17681, "text": "the cause exception, may be null", "labels": []}
{"id": 17682, "text": "the handler that is called when the application is asked to quit", "labels": []}
{"id": 17683, "text": "to use when no other frames are active", "labels": []}
{"id": 17684, "text": "the event class to register, not null", "labels": []}
{"id": 17685, "text": "the event class to unregistered, not null", "labels": []}
{"id": 17686, "text": "the class that the hook should run for, not null", "labels": []}
{"id": 17687, "text": "the hook, not null", "labels": []}
{"id": 17688, "text": "the listener to add, not null", "labels": []}
{"id": 17689, "text": "listener to remove, not null", "labels": []}
{"id": 17690, "text": "true if, and only if, the I/O operation completed successfully, that is, had some effect that would be visible to the operation's invoker", "labels": []}
{"id": 17691, "text": "The declared public identifier for the external DTD subset, or null if none was declared.", "labels": []}
{"id": 17692, "text": "The declared system identifier for the external DTD subset, or null if none was declared.", "labels": []}
{"id": 17693, "text": "(Note that this is not resolved against the document base URI.)", "labels": []}
{"id": 17694, "text": "If it is a parameter entity, the name will begin with '%', and if it is the external DTD subset, it will be \"[dtd]\".", "labels": []}
{"id": 17695, "text": "the ImageWriterSpi that is constructing this object, or null.", "labels": []}
{"id": 17696, "text": "an ImageTypeSpecifier indicating the type of image to be written, or null.", "labels": []}
{"id": 17697, "text": "the ImageWriteParam that will be used for writing, or null.", "labels": []}
{"id": 17698, "text": "an IIOMetadata object that will be used for writing, or null.", "labels": []}
{"id": 17699, "text": "an IIOMetadata object representing stream metadata, or null to use default values.", "labels": []}
{"id": 17700, "text": "an ImageWriteParam, or null to use a default ImageWriteParam.", "labels": []}
{"id": 17701, "text": "A stream metadata object, or null.", "labels": []}
{"id": 17702, "text": "an IIOMetadata object representing image metadata, or null.", "labels": []}
{"id": 17703, "text": "a List of BufferedImage thumbnails for this image, or null.", "labels": []}
{"id": 17704, "text": "specifies whether dialog blocks input to other windows when shown; calling to setModal(true) is equivalent to setModalityType(Dialog.DEFAULT_MODALITY_TYPE), and calling to setModal(false) is equivalent to setModalityType(Dialog.ModalityType.MODELESS)", "labels": []}
{"id": 17705, "text": "specifies whether dialog blocks input to other windows when shown.", "labels": []}
{"id": 17706, "text": "null value and unsupported modality types are equivalent to MODELESS", "labels": []}
{"id": 17707, "text": "true if the user can resize this dialog; false otherwise.", "labels": []}
{"id": 17708, "text": "true if no dialog decorations are to be enabled; false if dialog decorations are to be enabled", "labels": []}
{"id": 17709, "text": "true if table view should draw grid lines", "labels": []}
{"id": 17710, "text": "true if table view should draw horizontal lines", "labels": []}
{"id": 17711, "text": "true if table view should draw vertical lines", "labels": []}
{"id": 17712, "text": "true if JTable should automatically create columns", "labels": []}
{"id": 17713, "text": "whether or not a RowSorter should be automatically created", "labels": []}
{"id": 17714, "text": "whether or not to update the selection on sorting", "labels": []}
{"id": 17715, "text": "the RowSorter; null turns sorting off", "labels": []}
{"id": 17716, "text": "true if this model will allow row selection", "labels": []}
{"id": 17717, "text": "true if this model will allow column selection", "labels": []}
{"id": 17718, "text": "true if simultaneous row and column selection is allowed", "labels": []}
{"id": 17719, "text": "if true, extend the current selection", "labels": []}
{"id": 17720, "text": "if false, return the true cell bounds - computed by subtracting the intercell spacing from the height and widths of the column and row models", "labels": []}
{"id": 17721, "text": "true if the editor should get the focus when keystrokes cause the editor to be activated", "labels": []}
{"id": 17722, "text": "event to pass into shouldSelectCell; note that as of Java 2 platform v1.2, the call to shouldSelectCell is no longer made", "labels": []}
{"id": 17723, "text": "whether or not this table is always made large enough to fill the height of an enclosing viewport", "labels": []}
{"id": 17724, "text": "the printing mode that the printable should use", "labels": []}
{"id": 17725, "text": "a MessageFormat specifying the text to be used in printing a header, or null for none", "labels": []}
{"id": 17726, "text": "a MessageFormat specifying the text to be used in printing a footer, or null for none", "labels": []}
{"id": 17727, "text": "whether or not to display a print dialog", "labels": []}
{"id": 17728, "text": "a PrintRequestAttributeSet specifying any printing attributes, or null for none", "labels": []}
{"id": 17729, "text": "whether or not to print in an interactive mode", "labels": []}
{"id": 17730, "text": "the destination PrintService, or null to use the default printer", "labels": []}
{"id": 17731, "text": "exception message", "labels": []}
{"id": 17732, "text": "the text of the paragraph after performing the insertion.", "labels": []}
{"id": 17733, "text": "Must not be less than the start of newParagraph, and must be less than the end of newParagraph.", "labels": []}
{"id": 17734, "text": "the text of the paragraph after performing the deletion.", "labels": []}
{"id": 17735, "text": "Must not be less than the start of newParagraph, and must not be greater than the end of newParagraph.", "labels": []}
{"id": 17736, "text": "Range starts before refNode", "labels": []}
{"id": 17737, "text": "Range starts after refNode", "labels": []}
{"id": 17738, "text": "Range ends before refNode", "labels": []}
{"id": 17739, "text": "Range ends after refNode.", "labels": []}
{"id": 17740, "text": "If null, the context is initialized with no request controls.", "labels": []}
{"id": 17741, "text": "The possibly null controls to use.", "labels": []}
{"id": 17742, "text": "If null, no controls are used.", "labels": []}
{"id": 17743, "text": "whether or not the mouse is currently over the divider", "labels": []}
{"id": 17744, "text": "the inappropriate value.", "labels": []}
{"id": 17745, "text": "whether or not line ends should be round", "labels": []}
{"id": 17746, "text": "a stream to which \"expected\" output should be written", "labels": []}
{"id": 17747, "text": "a stream to which any error messages should be written", "labels": []}
{"id": 17748, "text": "the object to be compared for equality with this SimpleType instance; if obj is null or is not an instance of the class SimpleType, equals returns false.", "labels": []}
{"id": 17749, "text": "the new logging/tracing PrintStream object; null to disable logging and tracing", "labels": []}
{"id": 17750, "text": "a list of arbitrary string tag/value pairs as connection arguments; normally at least a \"user\" and \"password\" property should be included", "labels": []}
{"id": 17751, "text": "the DriverAction implementation to be used when DriverManager#deregisterDriver is called", "labels": []}
{"id": 17752, "text": "An object to be invoked when a PropertyChange event is fired.", "labels": []}
{"id": 17753, "text": "Can be null, which is equivalent to an empty map.", "labels": []}
{"id": 17754, "text": "This must be different from the ID of any connection previously opened by this connector server.", "labels": []}
{"id": 17755, "text": "an optional list of attributes to set atomically when creating the file", "labels": []}
{"id": 17756, "text": "the queue with which the reference is to be registered, or null if registration is not required", "labels": []}
{"id": 17757, "text": "The element to insert before, or null for the tail of the list.", "labels": []}
{"id": 17758, "text": "the Subject which may contain principals/credentials used for authentication, or may be populated with additional principals/credentials after successful authentication has completed.", "labels": []}
{"id": 17759, "text": "the CallbackHandler used by this provider to obtain authentication information from the caller, which may be null", "labels": []}
{"id": 17760, "text": "a CallbackHandler for obtaining authentication information, which may be null", "labels": []}
{"id": 17761, "text": "The name given to the composite type this instance represents; cannot be a null or empty string.", "labels": []}
{"id": 17762, "text": "The human readable description of the composite type this instance represents; cannot be a null or empty string.", "labels": []}
{"id": 17763, "text": "The names of the items contained in the composite data values described by this CompositeType instance; cannot be null and should contain at least one element; no element can be a null or empty string.", "labels": []}
{"id": 17764, "text": "Note that the order in which the item names are given is not important to differentiate a CompositeType instance from another; the item names are internally stored sorted in ascending alphanumeric order.", "labels": []}
{"id": 17765, "text": "The descriptions, in the same order as itemNames, of the items contained in the composite data values described by this CompositeType instance; should be of the same size as itemNames; no element can be null or an empty string.", "labels": []}
{"id": 17766, "text": "The open type instances, in the same order as itemNames, describing the items contained in the composite data values described by this CompositeType instance; should be of the same size as itemNames; no element can be null.", "labels": []}
{"id": 17767, "text": "the object to be compared for equality with this CompositeType instance; if obj is null, equals returns false.", "labels": []}
{"id": 17768, "text": "An Object value which needs to be checked, whether it can be part of this FilterRowSet object.", "labels": []}
{"id": 17769, "text": "a int object that must match the SQL index of a column in this RowSet object.", "labels": []}
{"id": 17770, "text": "This must have been passed to Predicate as one of the columns for filtering while initializing a Predicate", "labels": []}
{"id": 17771, "text": "An Object value which needs to be checked, whether it can be part of this FilterRowSet.", "labels": []}
{"id": 17772, "text": "a String object that must match the SQL name of a column in this RowSet, ignoring case.", "labels": []}
{"id": 17773, "text": "if null, this cookie will not be associated with an URI", "labels": []}
{"id": 17774, "text": "whether or not the JPopupMenu is inherited", "labels": []}
{"id": 17775, "text": "- the popup that will be assigned to this component may be null", "labels": []}
{"id": 17776, "text": "indicates whether you want this JComponent to be focusable or not", "labels": []}
{"id": 17777, "text": "boolean indicating if the focus change is temporary", "labels": []}
{"id": 17778, "text": "The new preferred size, or null", "labels": []}
{"id": 17779, "text": "true if this component should be enabled, false otherwise", "labels": []}
{"id": 17780, "text": "true if the key is pressed", "labels": []}
{"id": 17781, "text": "the string to display; if the text is null, the tool tip is turned off for this component", "labels": []}
{"id": 17782, "text": "the MouseEvent that triggered the popup to be shown, or null if the popup is not being shown as the result of a mouse event", "labels": []}
{"id": 17783, "text": "if true, synthetic mouse dragged events are generated when the mouse is dragged outside of a component's bounds and the mouse button continues to be held down; otherwise false", "labels": []}
{"id": 17784, "text": "the new client property value; if null this method will remove the property", "labels": []}
{"id": 17785, "text": "true if this component should be opaque", "labels": []}
{"id": 17786, "text": "if true, set this component to be double buffered", "labels": []}
{"id": 17787, "text": "the address to listen on, if null then bind() must be called to set the address", "labels": []}
{"id": 17788, "text": "If this value is less than or equal to zero, then a system default value is used.", "labels": []}
{"id": 17789, "text": "The indices must be in sorted order, from lowest to highest", "labels": []}
{"id": 17790, "text": "if true, the node is allowed to have child nodes -- otherwise, it is always a leaf node", "labels": []}
{"id": 17791, "text": "true if this node is allowed to have children", "labels": []}
{"id": 17792, "text": "the node to determinate whether it is a child", "labels": []}
{"id": 17793, "text": "the child node to look for next child after it", "labels": []}
{"id": 17794, "text": "the child node to look for previous child before it", "labels": []}
{"id": 17795, "text": "true means this attribute set will ignore the case of its attribute identifiers when retrieving or adding attributes; false means case is respected.", "labels": []}
{"id": 17796, "text": "non-null The id of the attribute to add.", "labels": []}
{"id": 17797, "text": "If null, a null value is added to the attribute.", "labels": []}
{"id": 17798, "text": "If this attribute set ignores the character case of its attribute ids, the case of attrID is ignored.", "labels": []}
{"id": 17799, "text": "the possibly null object to compare against.", "labels": []}
{"id": 17800, "text": "the OutputStream that should be used to write the transformed data to", "labels": []}
{"id": 17801, "text": "The non-null suffix Rdns to add.", "labels": []}
{"id": 17802, "text": "The non-null RDN to add.", "labels": []}
{"id": 17803, "text": "Must be in the range [0,size()).", "labels": []}
{"id": 17804, "text": "The non-null LdapName instance to compare against.", "labels": []}
{"id": 17805, "text": "If flags == USE_ALL_BEANINFO then we use all of the BeanInfo classes we can discover.", "labels": []}
{"id": 17806, "text": "If flags == IGNORE_IMMEDIATE_BEANINFO then we ignore any BeanInfo associated with the specified beanClass.", "labels": []}
{"id": 17807, "text": "If flags == IGNORE_ALL_BEANINFO then we ignore all BeanInfo associated with the specified beanClass or any of its parent classes.", "labels": []}
{"id": 17808, "text": "a boolean to control whether or not to turn an initial moveTo segment into a lineTo segment to connect the new geometry to the existing path", "labels": []}
{"id": 17809, "text": "the target exception", "labels": []}
{"id": 17810, "text": "True if the specified cell was selected.", "labels": []}
{"id": 17811, "text": "True if the specified cell has the focus.", "labels": []}
{"id": 17812, "text": "if true, component c will be validated before being painted", "labels": []}
{"id": 17813, "text": "The class of the source, or null.", "labels": []}
{"id": 17814, "text": "If the class is null, a vendor specific Source implementation will be returned.", "labels": []}
{"id": 17815, "text": "The class of the result, or null.", "labels": []}
{"id": 17816, "text": "If resultClass is null, a vendor specific Result implementation will be returned.", "labels": []}
{"id": 17817, "text": "Additional spliterator characteristics of this spliterator's source or elements beyond SIZED and SUBSIZED which are always reported", "labels": []}
{"id": 17818, "text": "Characteristics of this spliterator's source or elements (SIZED and SUBSIZED, if supplied, are ignored and are not reported.)", "labels": []}
{"id": 17819, "text": "If null then the existing parameters (if any) remain unchanged.", "labels": []}
{"id": 17820, "text": "whether client authentication should be requested", "labels": []}
{"id": 17821, "text": "whether client authentication should be required", "labels": []}
{"id": 17822, "text": "whether or not to verify the jar file if it is signed.", "labels": []}
{"id": 17823, "text": "The public identifier of the external entity being referenced, or null if none was supplied.", "labels": []}
{"id": 17824, "text": "whether component visibility is considered when sizing and positioning components", "labels": []}
{"id": 17825, "text": "whether visibility of this component should be considered for sizing and positioning", "labels": []}
{"id": 17826, "text": "whether a gap between components is automatically created", "labels": []}
{"id": 17827, "text": "whether a gap between the container and components that touch the border of the container should automatically be created", "labels": []}
{"id": 17828, "text": "true if the group is resizable; if the group is not resizable the preferred size is used for the minimum and maximum size of the group", "labels": []}
{"id": 17829, "text": "one of the following values : UPDATE_WHEN_ON_EDT, NEVER_UPDATE, ALWAYS_UPDATE", "labels": []}
{"id": 17830, "text": "\"standard\" input; use System.in if null", "labels": []}
{"id": 17831, "text": "\"standard\" output; use System.out if null", "labels": []}
{"id": 17832, "text": "\"standard\" error; use System.err if null", "labels": []}
{"id": 17833, "text": "the locale for which text input is supported, or null", "labels": []}
{"id": 17834, "text": "the position (zero-based index) in the argument list at which spreading should start.", "labels": []}
{"id": 17835, "text": "true if the return method handle should have variable arity behavior", "labels": []}
{"id": 17836, "text": "number of parameters (excluding the final array parameter if any)", "labels": []}
{"id": 17837, "text": "whether there will be a trailing array parameter, of type Object[]", "labels": []}
{"id": 17838, "text": "a WritableRaster to hold the returned portion of the image, or null.", "labels": []}
{"id": 17839, "text": "the required output format, or null to mean any format.", "labels": []}
{"id": 17840, "text": "This parameter may not be null.", "labels": []}
{"id": 17841, "text": "If null or no domain and key properties are specified, all the MBeans registered will be retrieved.", "labels": []}
{"id": 17842, "text": "If null no query expression will be applied for selecting MBeans.", "labels": []}
{"id": 17843, "text": "If null or no domain and key properties are specified, the name of all registered MBeans will be retrieved.", "labels": []}
{"id": 17844, "text": "The name of the MBean on which the listener should be added.", "labels": []}
{"id": 17845, "text": "If filter is null, no filtering will be performed before handling notifications.", "labels": []}
{"id": 17846, "text": "The context to be sent to the listener when a notification is emitted.", "labels": []}
{"id": 17847, "text": "The name of the MBean on which the listener should be removed.", "labels": []}
{"id": 17848, "text": "the locale for which the resource bundle should be loaded", "labels": []}
{"id": 17849, "text": "the URL to load the class from, or null", "labels": []}
{"id": 17850, "text": "the list of URLs (separated by spaces) to load the class from, or null", "labels": []}
{"id": 17851, "text": "additional contextual class loader to use, or null", "labels": []}
{"id": 17852, "text": "the list of URLs (space-separated) from which the returned class loader will load classes from, or null", "labels": []}
{"id": 17853, "text": "a description of the property list, or null if no comment is desired.", "labels": []}
{"id": 17854, "text": "the temporal object to check, not null", "labels": []}
{"id": 17855, "text": "the base temporal object, not null", "labels": []}
{"id": 17856, "text": "the other temporal object, exclusive, not null", "labels": []}
{"id": 17857, "text": "if true, sets palette border and title", "labels": []}
{"id": 17858, "text": "The name of the property (may not be null)", "labels": []}
{"id": 17859, "text": "Must have be compatible with the invocation handle as per MethodHandles.guardWithTest(MethodHandle, MethodHandle, MethodHandle).", "labels": []}
{"id": 17860, "text": "It can be null.", "labels": []}
{"id": 17861, "text": "If it and the switch point and the exception are all null, this represents an unconditional invocation.", "labels": []}
{"id": 17862, "text": "the optional exception type that is when thrown by the invocation also invalidates it.", "labels": []}
{"id": 17863, "text": "If it and the exception are both null, and no switch points were specified, this represents an unconditional invocation.", "labels": []}
{"id": 17864, "text": "the fallback method handle for when a switch point is invalidated, a guard returns false, or invalidating exception is thrown.", "labels": []}
{"id": 17865, "text": "the fallback method in case the exception handler triggers.", "labels": []}
{"id": 17866, "text": "whether the relation is handled by the Relation Service.", "labels": []}
{"id": 17867, "text": "the composite data value whose index in this TabularData instance is to be calculated; must be of the same composite type as this instance's row type; must not be null.", "labels": []}
{"id": 17868, "text": "the index of the value to get in this TabularData instance; must be valid with this TabularData instance's row type definition; must not be null.", "labels": []}
{"id": 17869, "text": "the map whose values are to be added as new rows to this TabularData instance; if t is null or empty, this method returns without doing anything.", "labels": []}
{"id": 17870, "text": "the array of composite data values to be added as new rows to this TabularData instance; if values is null or empty, this method returns without doing anything.", "labels": []}
{"id": 17871, "text": "a non-null reference to a JComponent", "labels": []}
{"id": 17872, "text": "a non-null reference to the region of the component c", "labels": []}
{"id": 17873, "text": "True if the derived color should be a UIResource, false if it should not be", "labels": []}
{"id": 17874, "text": "specifies whether dialog blocks user input to other top-level windows when shown.", "labels": []}
{"id": 17875, "text": "If true, the modality type property is set to DEFAULT_MODALITY_TYPE, otherwise the dialog is modeless.", "labels": []}
{"id": 17876, "text": "If true, the modality type property is set to DEFAULT_MODALITY_TYPE otherwise the dialog is modeless", "labels": []}
{"id": 17877, "text": "the GraphicsConfiguration of the target screen device; if null, the default system GraphicsConfiguration is assumed", "labels": []}
{"id": 17878, "text": "the operation which should be performed when the user closes the dialog", "labels": []}
{"id": 17879, "text": "true if add and setLayout are forwarded, false if they should operate directly on the JDialog.", "labels": []}
{"id": 17880, "text": "A hint as to whether or not current look and feel should provide window decorations", "labels": []}
{"id": 17881, "text": "the method handle to invoke after arguments are retyped", "labels": []}
{"id": 17882, "text": "the method handle to invoke after arguments are reordered", "labels": []}
{"id": 17883, "text": "the method handle to invoke after the argument is inserted", "labels": []}
{"id": 17884, "text": "the method handle to invoke after the arguments are dropped", "labels": []}
{"id": 17885, "text": "place in newTypes where the non-skipped target parameters must occur", "labels": []}
{"id": 17886, "text": "the method handle to invoke after arguments are filtered", "labels": []}
{"id": 17887, "text": "the method handle to invoke after filtering the subsequence of arguments", "labels": []}
{"id": 17888, "text": "the method handle to invoke before filtering the return value", "labels": []}
{"id": 17889, "text": "the method handle to invoke after arguments are combined", "labels": []}
{"id": 17890, "text": "the position at which to start folding and at which to insert the folding result; if this is 0, the effect is the same as for foldArguments(MethodHandle, MethodHandle).", "labels": []}
{"id": 17891, "text": "method handle used for test, must return boolean", "labels": []}
{"id": 17892, "text": "method handle to call if test passes", "labels": []}
{"id": 17893, "text": "method handle to call if test fails", "labels": []}
{"id": 17894, "text": "the type of exception which the handler will catch", "labels": []}
{"id": 17895, "text": "method handle to call if a matching exception is thrown", "labels": []}
{"id": 17896, "text": "May be null, implying a default initial value.", "labels": []}
{"id": 17897, "text": "condition for the loop, which may not be null.", "labels": []}
{"id": 17898, "text": "Its result type must be boolean.", "labels": []}
{"id": 17899, "text": "body of the loop, which may not be null.", "labels": []}
{"id": 17900, "text": "a non-null handle to return the number of iterations this loop should run.", "labels": []}
{"id": 17901, "text": "The handle's result type must be int.", "labels": []}
{"id": 17902, "text": "It must accept its own return type (if non-void) plus an int parameter (for the counter), and may accept any number of additional types.", "labels": []}
{"id": 17903, "text": "a non-null handle to return the start value of the loop counter, which must be int.", "labels": []}
{"id": 17904, "text": "a non-null handle to return the end value of the loop counter (the loop will run to end-1).", "labels": []}
{"id": 17905, "text": "The result type must be int.", "labels": []}
{"id": 17906, "text": "If non-null, the handle must return Iterator or a subtype.", "labels": []}
{"id": 17907, "text": "It must accept its own return type (if non-void) plus a T parameter (for the iterated values), and may accept any number of additional types.", "labels": []}
{"id": 17908, "text": "Action to perform when the Status changes.", "labels": []}
{"id": 17909, "text": "Action to perform when the state terminates.", "labels": []}
{"id": 17910, "text": "true means do not initialize the initial context; false is equivalent to calling new InitialContext()", "labels": []}
{"id": 17911, "text": "The non-null name for which to get the context.", "labels": []}
{"id": 17912, "text": "the permission that caused the exception.", "labels": []}
{"id": 17913, "text": "the specification class in which the parameters should be returned.", "labels": []}
{"id": 17914, "text": "if true, lightweight popups are desired", "labels": []}
{"id": 17915, "text": "an integer specifying the maximum number of items to display in the list before using a scrollbar", "labels": []}
{"id": 17916, "text": "the list object to select; use null to clear the selection", "labels": []}
{"id": 17917, "text": "the ItemListener that is to be notified", "labels": []}
{"id": 17918, "text": "the ActionListener that is to be notified", "labels": []}
{"id": 17919, "text": "the Action for the JComboBox, or null.", "labels": []}
{"id": 17920, "text": "the exception handler for the parser, or null to use the default exception handler", "labels": []}
{"id": 17921, "text": "the class loader used for instantiating objects, or null to use the default class loader", "labels": []}
{"id": 17922, "text": "the port on which the object is exported (an anonymous port is used if port=0)", "labels": []}
{"id": 17923, "text": "the parent component of the dialog, can be null; see showDialog for details", "labels": []}
{"id": 17924, "text": "the parent component of the dialog; can be null", "labels": []}
{"id": 17925, "text": "false if control buttons should not be shown; otherwise, true", "labels": []}
{"id": 17926, "text": "a boolean which determines whether the AcceptAll file filter is an available choice in the choosable filter list", "labels": []}
{"id": 17927, "text": "the type of files to be displayed: JFileChooser.FILES_ONLY JFileChooser.DIRECTORIES_ONLY JFileChooser.FILES_AND_DIRECTORIES", "labels": []}
{"id": 17928, "text": "the boolean value that determines whether file hiding is turned on", "labels": []}
{"id": 17929, "text": "If the default ScriptContext of the ScriptEngine defines additional scopes, any of them can be passed to get the corresponding Bindings.", "labels": []}
{"id": 17930, "text": "The combo box value or null for no selection.", "labels": []}
{"id": 17931, "text": "The text message of the exception.", "labels": []}
{"id": 17932, "text": "true if the pixels should always be converted to the default RGB ColorModel", "labels": []}
{"id": 17933, "text": "the number of milliseconds to wait for the image pixels to arrive before timing out", "labels": []}
{"id": 17934, "text": "the number of existing child views to remove; this should be a value >= 0 and <= (getViewCount() - offset)", "labels": []}
{"id": 17935, "text": "the child views to add; this value can be null to indicate no children are being added (useful to remove)", "labels": []}
{"id": 17936, "text": "true if the view is underlined, otherwise false", "labels": []}
{"id": 17937, "text": "true if the view has a strike/line through it, otherwise false", "labels": []}
{"id": 17938, "text": "true if the view represents a superscript, otherwise false", "labels": []}
{"id": 17939, "text": "true if the view represents a subscript, otherwise false", "labels": []}
{"id": 17940, "text": "background color, or null", "labels": []}
{"id": 17941, "text": "true if the KeyStroke should represent a key release; false otherwise.", "labels": []}
{"id": 17942, "text": "the FormatStyle for the date, null for time-only pattern", "labels": []}
{"id": 17943, "text": "the FormatStyle for the time, null for date-only pattern", "labels": []}
{"id": 17944, "text": "the Chronology, non-null", "labels": []}
{"id": 17945, "text": "the locale, non-null", "labels": []}
{"id": 17946, "text": "the field to default the value of, not null", "labels": []}
{"id": 17947, "text": "the field to append, not null", "labels": []}
{"id": 17948, "text": "the positive/negative output style, not null", "labels": []}
{"id": 17949, "text": "the base date used to calculate the base value for the range of valid values in the parsed chronology, not null", "labels": []}
{"id": 17950, "text": "whether to output the localized decimal point symbol", "labels": []}
{"id": 17951, "text": "the text style to use, not null", "labels": []}
{"id": 17952, "text": "the pattern to use, not null", "labels": []}
{"id": 17953, "text": "the text to use when the offset is zero, not null", "labels": []}
{"id": 17954, "text": "the format style to use, not null", "labels": []}
{"id": 17955, "text": "the set of preferred zone ids, not null", "labels": []}
{"id": 17956, "text": "the date style to use, null means no date required", "labels": []}
{"id": 17957, "text": "the time style to use, null means no time required", "labels": []}
{"id": 17958, "text": "the literal to append, not null", "labels": []}
{"id": 17959, "text": "the formatter to add, not null", "labels": []}
{"id": 17960, "text": "the pattern to add, not null", "labels": []}
{"id": 17961, "text": "the locale to use for formatting, not null", "labels": []}
{"id": 17962, "text": "if the newly created clone is stopped before returning.", "labels": []}
{"id": 17963, "text": "a map that contains the options that controls the amount of data and how it is read, or null to get all data for the recording with the default block size", "labels": []}
{"id": 17964, "text": "name value map of the settings to set, not null", "labels": []}
{"id": 17965, "text": "name/value map of the settings to set, not null", "labels": []}
{"id": 17966, "text": "the system-dependent file name where data is written, not null", "labels": []}
{"id": 17967, "text": "name of the field to get, not null", "labels": []}
{"id": 17968, "text": "of the field to get, not null", "labels": []}
{"id": 17969, "text": "an instance object of the declaring class of this reflected object if it is an instance method or field", "labels": []}
{"id": 17970, "text": "true if this frame is resizable; false otherwise.", "labels": []}
{"id": 17971, "text": "true if no frame decorations are to be enabled; false if frame decorations are to be enabled", "labels": []}
{"id": 17972, "text": "the Clob object from which this SerialClob object is to be constructed; cannot be null", "labels": []}
{"id": 17973, "text": "the position in this SerialClob object at which to start the search; the first position is 1; must not be less than 1 nor greater than the length of this SerialClob object", "labels": []}
{"id": 17974, "text": "the position in this SerialClob object at which to begin the search; the first position is 1; must not be less than 1 nor greater than the length of this SerialClob object", "labels": []}
{"id": 17975, "text": "Normally at least a \"user\" and \"password\" property should be included.", "labels": []}
{"id": 17976, "text": "The specified array is copied by this call; changes in the specified array after the method invocation returns will have no affect on this Throwable's stack trace.", "labels": []}
{"id": 17977, "text": "the exception to be added to the list of suppressed exceptions", "labels": []}
{"id": 17978, "text": "the index after the last array element that can be used in the char array", "labels": []}
{"id": 17979, "text": "the time-zone, not null", "labels": []}
{"id": 17980, "text": "the local date-time, not null", "labels": []}
{"id": 17981, "text": "the zone offset, null if no preference", "labels": []}
{"id": 17982, "text": "the text to parse such as \"2007-12-03T10:15:30+01:00[Europe/Paris]\", not null", "labels": []}
{"id": 17983, "text": "the adjuster to use, not null", "labels": []}
{"id": 17984, "text": "the end date, exclusive, which is converted to a ZonedDateTime, not null", "labels": []}
{"id": 17985, "text": "If null, the natural ordering of the elements will be used.", "labels": []}
{"id": 17986, "text": "Socket address to bind to, or null for an unbound socket.", "labels": []}
{"id": 17987, "text": "specifies the local interface to receive multicast datagram packets, or null to defer to the interface set by setInterface(InetAddress) or setNetworkInterface(NetworkInterface)", "labels": []}
{"id": 17988, "text": "specifies the local interface or null to defer to the interface set by setInterface(InetAddress) or setNetworkInterface(NetworkInterface)", "labels": []}
{"id": 17989, "text": "the maximum distance that the control points for a subdivided curve can be with respect to a line connecting the end points of this curve before this curve is replaced by a straight line connecting the end points.", "labels": []}
{"id": 17990, "text": "the SecureRandomParameters the newly created SecureRandom object must support.", "labels": []}
{"id": 17991, "text": "the new HijrahChonology, non-null", "labels": []}
{"id": 17992, "text": "object to be notified as more of the image is converted.", "labels": []}
{"id": 17993, "text": "object to be notified as more of the image is scaled and converted.", "labels": []}
{"id": 17994, "text": "push promise handler, may be null", "labels": []}
{"id": 17995, "text": "The base URI against which the first argument will be made absolute if the absolute URI is required.", "labels": []}
{"id": 17996, "text": "if true charset is ignoring", "labels": []}
{"id": 17997, "text": "a Locale for which the return value should be localized.", "labels": []}
{"id": 17998, "text": "the method handle selected by the switch point after it is invalidated", "labels": []}
{"id": 17999, "text": "If true, this component is enabled; otherwise this component is disabled", "labels": []}
{"id": 18000, "text": "the ImageObserver object to be notified as the image is being prepared", "labels": []}
{"id": 18001, "text": "true if the paint messages from the OS should be ignored; otherwise false", "labels": []}
{"id": 18002, "text": "whether focus traversal keys are enabled for this Component", "labels": []}
{"id": 18003, "text": "true if the focus change is temporary, such as when the window loses the focus; for more information on temporary focus changes see the Focus Specification", "labels": []}
{"id": 18004, "text": "the component to be used as the observer if this icon has no image observer", "labels": []}
{"id": 18005, "text": "a String object identifying the table from which this CachedRowSet object was derived; cannot be null but may be an empty string", "labels": []}
{"id": 18006, "text": "an array of int indicating the columns that form a primary key for this CachedRowSet object; every element in the array must be greater than 0 and less than or equal to the number of columns in this rowset", "labels": []}
{"id": 18007, "text": "when populating, the number of rows interval on which the CachedRowSet populated should fire; the default value is zero; cannot be less than fetchSize or zero", "labels": []}
{"id": 18008, "text": "the new standard error output stream.", "labels": []}
{"id": 18009, "text": "the security manager or null", "labels": []}
{"id": 18010, "text": "check whether this permission is granted to the specified domain.", "labels": []}
{"id": 18011, "text": "A null value indicates that the elements' natural ordering should be used.", "labels": []}
{"id": 18012, "text": "a comparator who's ordering is to be reversed by the returned comparator or null", "labels": []}
{"id": 18013, "text": "the unknown annotation value, may be null", "labels": []}
{"id": 18014, "text": "the end temporal, exclusive, converted to be of the same type as this object, not null", "labels": []}
{"id": 18015, "text": "the type of message to be displayed: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE", "labels": []}
{"id": 18016, "text": "determines the Frame in which the dialog is displayed; if null, or if the parentComponent has no Frame, a default Frame is used", "labels": []}
{"id": 18017, "text": "an integer designating the kind of message this is, primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE", "labels": []}
{"id": 18018, "text": "an array of objects indicating the possible choices the user can make; if the objects are components, they are rendered properly; non-String objects are rendered using their toString methods; if this parameter is null, the options are determined by the Look and Feel", "labels": []}
{"id": 18019, "text": "the object that represents the default selection for the dialog; only meaningful if options is used; can be null", "labels": []}
{"id": 18020, "text": "an integer designating the kind of message this is; primarily used to determine the icon from the pluggable Look and Feel: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE", "labels": []}
{"id": 18021, "text": "an integer specifying the kind of message to display: ERROR_MESSAGE, INFORMATION_MESSAGE, WARNING_MESSAGE, QUESTION_MESSAGE, or PLAIN_MESSAGE", "labels": []}
{"id": 18022, "text": "if true, an input component whose parent is parentComponent is provided to allow the user to input a value.", "labels": []}
{"id": 18023, "text": "The namespace URI of the document element to create or null.", "labels": []}
{"id": 18024, "text": "The qualified name of the document element to be created or null.", "labels": []}
{"id": 18025, "text": "The type of document to be created or null.", "labels": []}
{"id": 18026, "text": "When doctype is not null, its Node.ownerDocument attribute is set to the document being created.", "labels": []}
{"id": 18027, "text": "the transfer action requested; this should be a value of either COPY or MOVE; the operation performed is the intersection of the transfer capabilities given by getSourceActions and the requested action; the intersection may result in an action of NONE if the requested action isn't supported", "labels": []}
{"id": 18028, "text": "the object containing the details of the transfer, not null.", "labels": []}
{"id": 18029, "text": "The data that was transferred or possibly null if the action is NONE.", "labels": []}
{"id": 18030, "text": "The warning information encapsulated in a SAX parse exception.", "labels": []}
{"id": 18031, "text": "The error information encapsulated in a SAX parse exception.", "labels": []}
{"id": 18032, "text": "The cause of this error, or null if the cause is not known", "labels": []}
{"id": 18033, "text": "If null, an appropriate ColorModel is used.", "labels": []}
{"id": 18034, "text": "On input, the position at which to start parsing; on output, the position at which parsing terminated, or the start position if the parse failed.", "labels": []}
{"id": 18035, "text": "when true, parsing is lenient", "labels": []}
{"id": 18036, "text": "if true, marks this thread group as a daemon thread group; otherwise, marks this thread group as normal.", "labels": []}
{"id": 18037, "text": "if true, recursively enumerate all subgroups of this thread group", "labels": []}
{"id": 18038, "text": "if true, recursively enumerate all subgroups", "labels": []}
{"id": 18039, "text": "the uncaught exception.", "labels": []}
{"id": 18040, "text": "the action string (or null if the set of permitted actions is empty)", "labels": []}
{"id": 18041, "text": "Whether to read fields of unrecognized tags", "labels": []}
{"id": 18042, "text": "The error handler.", "labels": []}
{"id": 18043, "text": "Must be a String that conforms to the URI syntax.", "labels": []}
{"id": 18044, "text": "a locale; might be null", "labels": []}
{"id": 18045, "text": "indicates whether alpha values are contained in the cmap array", "labels": []}
{"id": 18046, "text": "The data type must be either DataBuffer.TYPE_BYTE or DataBuffer.TYPE_USHORT.", "labels": []}
{"id": 18047, "text": "If a bit is set in the BigInteger, the pixel at that index is valid.", "labels": []}
{"id": 18048, "text": "If a bit is not set, the pixel at that index is considered invalid.", "labels": []}
{"id": 18049, "text": "If null, all pixels are valid.", "labels": []}
{"id": 18050, "text": "Only bits from 0 to the map size are considered.", "labels": []}
{"id": 18051, "text": "the specified SampleModel, or null", "labels": []}
{"id": 18052, "text": "if true, the returned BufferedImage is TYPE_INT_ARGB; otherwise it is TYPE_INT_RGB", "labels": []}
{"id": 18053, "text": "the current value, which may be null", "labels": []}
{"id": 18054, "text": "If true, this rule selects the first dayOfWeek on or after dayOfMonth.", "labels": []}
{"id": 18055, "text": "If false, this rule selects the last dayOfWeek on or before dayOfMonth.", "labels": []}
{"id": 18056, "text": "If true, this rule selects the first endDayOfWeek on or after endDay.", "labels": []}
{"id": 18057, "text": "If false, this rule selects the last endDayOfWeek on or before endDay of the month.", "labels": []}
{"id": 18058, "text": "the era to represent, only 1 supported", "labels": []}
{"id": 18059, "text": "true if the path is expanded", "labels": []}
{"id": 18060, "text": "true if the path has been expanded", "labels": []}
{"id": 18061, "text": "true if the path is leaf", "labels": []}
{"id": 18062, "text": "true if the row is leaf", "labels": []}
{"id": 18063, "text": "if true consistency is checked", "labels": []}
{"id": 18064, "text": "the fully qualified name of the unavailable type", "labels": []}
{"id": 18065, "text": "the exception that was thrown when the system attempted to load the named type, or null if unavailable or inapplicable", "labels": []}
{"id": 18066, "text": "The possibly null name to set resolved name to.", "labels": []}
{"id": 18067, "text": "If null, it sets the resolved name field to null.", "labels": []}
{"id": 18068, "text": "The possibly null name to set remaining name to.", "labels": []}
{"id": 18069, "text": "The possibly null object to set resolved object to.", "labels": []}
{"id": 18070, "text": "If null, the resolved object field is set to null.", "labels": []}
{"id": 18071, "text": "The possibly null name containing ordered components to add.", "labels": []}
{"id": 18072, "text": "If name is null, this method does not do anything.", "labels": []}
{"id": 18073, "text": "The possibly null exception that caused the naming operation to fail.", "labels": []}
{"id": 18074, "text": "If null, it means this naming exception has no root cause.", "labels": []}
{"id": 18075, "text": "A null value indicates that the cause is nonexistent or unknown.", "labels": []}
{"id": 18076, "text": "If true, include details about the resolved object in addition to the other information.", "labels": []}
{"id": 18077, "text": "the composite data value to be added as a new row to this TabularData instance; must be of the same composite type as this instance's row type; must not be null.", "labels": []}
{"id": 18078, "text": "If non-null, specifies that exceptions which are instances of refType will be reported.", "labels": []}
{"id": 18079, "text": "If null, all instances will be reported", "labels": []}
{"id": 18080, "text": "If true, caught exceptions will be reported.", "labels": []}
{"id": 18081, "text": "If true, uncaught exceptions will be reported.", "labels": []}
{"id": 18082, "text": "the text to parse such as \"2007-12-03T10:15:30\", not null", "labels": []}
{"id": 18083, "text": "the end date, exclusive, which is converted to a LocalDateTime, not null", "labels": []}
{"id": 18084, "text": "identifies the portion of the component being asked to paint, may be null", "labels": []}
{"id": 18085, "text": "Amount to offset the text when painting", "labels": []}
{"id": 18086, "text": "the number of threads to keep in the pool, even if they are idle, unless allowCoreThreadTimeOut is set", "labels": []}
{"id": 18087, "text": "when the number of threads is greater than the core, this is the maximum time that excess idle threads will wait for new tasks before terminating.", "labels": []}
{"id": 18088, "text": "the queue to use for holding tasks before they are executed.", "labels": []}
{"id": 18089, "text": "This queue will hold only the Runnable tasks submitted by the execute method.", "labels": []}
{"id": 18090, "text": "true if should time out, else false", "labels": []}
{"id": 18091, "text": "A time value of zero will cause excess threads to terminate immediately after executing tasks.", "labels": []}
{"id": 18092, "text": "the exception that caused termination, or null if execution completed normally", "labels": []}
{"id": 18093, "text": "indicates if the value of the specified time field is to be rolled up or rolled down.", "labels": []}
{"id": 18094, "text": "Use true if rolling up, false otherwise.", "labels": []}
{"id": 18095, "text": "true if the lenient mode is to be turned on; false if it is to be turned off.", "labels": []}
{"id": 18096, "text": "Value to return if the property has not been specified, or is not a Number", "labels": []}
{"id": 18097, "text": "true if the table view should allow reordering; otherwise false", "labels": []}
{"id": 18098, "text": "true if table view should allow resizing", "labels": []}
{"id": 18099, "text": "if this point lies within a column, the index of that column will be returned; otherwise it is out of bounds and -1 is returned", "labels": []}
{"id": 18100, "text": "if true, the menu is a tear-off menu.", "labels": []}
{"id": 18101, "text": "true if wrap will be asked to provide privacy, false otherwise.", "labels": []}
{"id": 18102, "text": "upon return from the method, this object will contain the applied QOP, the privacy state of the message, and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap.", "labels": []}
{"id": 18103, "text": "Alternatively pass in null for msgProp to request the default QOP.", "labels": []}
{"id": 18104, "text": "upon return from the method, this object will contain the applied QOP and supplementary information stating if the token was a duplicate, old, out of sequence or arriving after a gap.", "labels": []}
{"id": 18105, "text": "a boolean value indicating whether mutual authentication should be used or not.", "labels": []}
{"id": 18106, "text": "a boolean value indicating whether replay detection should be enabled over the established context or not.", "labels": []}
{"id": 18107, "text": "a boolean value indicating whether sequence checking should be enabled over the established context or not.", "labels": []}
{"id": 18108, "text": "a boolean value indicating whether the credentials should be delegated or not.", "labels": []}
{"id": 18109, "text": "a boolean value indicating if the initiator should be authenticated to the acceptor as an anonymous principal.", "labels": []}
{"id": 18110, "text": "a boolean value indicating whether confidentiality should be enabled or not.", "labels": []}
{"id": 18111, "text": "a boolean value indicating whether integrity should be enabled or not.", "labels": []}
{"id": 18112, "text": "an associative, non-interfering, stateless function for combining two values, which must be compatible with the accumulator function", "labels": []}
{"id": 18113, "text": "parameters for the Configuration, which may be null.", "labels": []}
{"id": 18114, "text": "the password that should be used to compute the key", "labels": []}
{"id": 18115, "text": "Not currently used so it can be null.", "labels": []}
{"id": 18116, "text": "the event the editor should use to consider whether to begin editing or not", "labels": []}
{"id": 18117, "text": "the transition date-time at the transition, which never actually occurs, expressed local to the before offset, not null", "labels": []}
{"id": 18118, "text": "the offset before the transition, not null", "labels": []}
{"id": 18119, "text": "the offset at and after the transition, not null", "labels": []}
{"id": 18120, "text": "the offset to check, null returns false", "labels": []}
{"id": 18121, "text": "if true dump only live objects i.e.", "labels": []}
{"id": 18122, "text": "the length of the valid message data in the array, including the status byte; it should be non-negative and less than or equal to data.length", "labels": []}
{"id": 18123, "text": "the LayoutStyle, or null", "labels": []}
{"id": 18124, "text": "the parent of component2; this may differ from the actual parent and it may be null", "labels": []}
{"id": 18125, "text": "The unit code can only be a float unit type (i.e.", "labels": []}
{"id": 18126, "text": "The string code can only be a string unit type (i.e.", "labels": []}
{"id": 18127, "text": "The nonnull naming event.", "labels": []}
{"id": 18128, "text": "the message to generate when a PrinterException is thrown", "labels": []}
{"id": 18129, "text": "whether this SortingFocusTraversalPolicy transfers focus down-cycle implicitly", "labels": []}
{"id": 18130, "text": "true if a parameter value was truncated", "labels": []}
{"id": 18131, "text": "true if a read was truncated", "labels": []}
{"id": 18132, "text": "the size after truncation", "labels": []}
{"id": 18133, "text": "the underlying reason for this DataTruncation (which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown.", "labels": []}
{"id": 18134, "text": "the undeclared checked exception that was thrown", "labels": []}
{"id": 18135, "text": "if a directory is currently selected.", "labels": []}
{"id": 18136, "text": "the uri of the event, may be null", "labels": []}
{"id": 18137, "text": "the localName of the event, may be null", "labels": []}
{"id": 18138, "text": "The prefix to lookup, may not be null", "labels": []}
{"id": 18139, "text": "the local name of the attribute, cannot be null", "labels": []}
{"id": 18140, "text": "whether node is selected", "labels": []}
{"id": 18141, "text": "whether node is expanded", "labels": []}
{"id": 18142, "text": "whether node is a lead node", "labels": []}
{"id": 18143, "text": "whether node has focus", "labels": []}
{"id": 18144, "text": "if true, start loading any images that are not yet being loaded", "labels": []}
{"id": 18145, "text": "An opaque object which helps the listener to associate information regarding the MBean emitter (can be null).", "labels": []}
{"id": 18146, "text": "true if the upcoming changes to the value property are part of a series", "labels": []}
{"id": 18147, "text": "a boolean, true if a series of changes are in progress", "labels": []}
{"id": 18148, "text": "The I/O exception thrown when the connect failed.", "labels": []}
{"id": 18149, "text": "the array into which the elements of the Vector are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": []}
{"id": 18150, "text": "element to be removed from this Vector, if present", "labels": []}
{"id": 18151, "text": "the non-null object key", "labels": []}
{"id": 18152, "text": "if non-null, contains the returned kernel data", "labels": []}
{"id": 18153, "text": "the event class, not null", "labels": []}
{"id": 18154, "text": "the text after the insertion", "labels": []}
{"id": 18155, "text": "the text after the deletion", "labels": []}
{"id": 18156, "text": "the array into which the elements of this set are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": []}
{"id": 18157, "text": "The base URI against which the href attribute will be made absolute if the absolute URI is required", "labels": []}
{"id": 18158, "text": "the public identifier of the external entity being referenced, or null if none was supplied", "labels": []}
{"id": 18159, "text": "XML requires a system identifier on all external entities, so this value is always specified.", "labels": []}
{"id": 18160, "text": "the public identifier of the external entity being referenced, or null if no public identifier was supplied or if the resource is not an entity.", "labels": []}
{"id": 18161, "text": "a boolean, true if this event is a trigger for a popup-menu", "labels": []}
{"id": 18162, "text": "the type of scrolling which should take place in response to this event; valid values are WHEEL_UNIT_SCROLL and WHEEL_BLOCK_SCROLL", "labels": []}
{"id": 18163, "text": "a long value that gives the time when the event occurred", "labels": []}
{"id": 18164, "text": "a boolean value, true if this event is a trigger for a popup-menu", "labels": []}
{"id": 18165, "text": "one of the Strings returned by getCompressionTypes, or null to remove any previous setting.", "labels": []}
{"id": 18166, "text": "flag indicating whether to return the delimiters as tokens.", "labels": []}
{"id": 18167, "text": "The nonnull name of the object resolved relative to this context.", "labels": []}
{"id": 18168, "text": "The nonnull string filter (see RFC2254).", "labels": []}
{"id": 18169, "text": "The possibly null search controls.", "labels": []}
{"id": 18170, "text": "If null, the default search controls are used.", "labels": []}
{"id": 18171, "text": "The nonnull listener.", "labels": []}
{"id": 18172, "text": "The nonnull string name of the object resolved relative to this context.", "labels": []}
{"id": 18173, "text": "If null, the default search controls is used.", "labels": []}
{"id": 18174, "text": "The possibly null array of arguments for the filter.", "labels": []}
{"id": 18175, "text": "the unknown type, may be null", "labels": []}
{"id": 18176, "text": "the time-zone to use to convert the instant to date-time, not null", "labels": []}
{"id": 18177, "text": "the base clock to base the ticking clock on, not null", "labels": []}
{"id": 18178, "text": "the duration of each visible tick, not negative, not null", "labels": []}
{"id": 18179, "text": "the instant to use as the clock, not null", "labels": []}
{"id": 18180, "text": "the base clock to add the duration to, not null", "labels": []}
{"id": 18181, "text": "the duration to add, not null", "labels": []}
{"id": 18182, "text": "The non-null UnsolicitedNotificationEvent", "labels": []}
{"id": 18183, "text": "If csq is null, then the four characters \"null\" are appended to this Appendable.", "labels": []}
{"id": 18184, "text": "This can be null to indicate there is no visual location.", "labels": []}
{"id": 18185, "text": "If this is zero the caret will not blink.", "labels": []}
{"id": 18186, "text": "whether or not suppressed exceptions are enabled", "labels": []}
{"id": 18187, "text": "whether or not the stack trace is writable", "labels": []}
{"id": 18188, "text": "the array into which the elements of the queue are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.", "labels": []}
{"id": 18189, "text": "a String describing the reason for the exception.", "labels": []}
{"id": 18190, "text": "the offset within the composed text, if there is composed text; null otherwise", "labels": []}
{"id": 18191, "text": "May be null", "labels": []}
{"id": 18192, "text": "the formatter style to obtain, not null", "labels": []}
{"id": 18193, "text": "the date formatter style to obtain, not null", "labels": []}
{"id": 18194, "text": "the time formatter style to obtain, not null", "labels": []}
{"id": 18195, "text": "the new locale, not null", "labels": []}
{"id": 18196, "text": "the new chronology, null if no override", "labels": []}
{"id": 18197, "text": "the new override zone, null if no override", "labels": []}
{"id": 18198, "text": "the new resolver style, not null", "labels": []}
{"id": 18199, "text": "the new set of resolver fields, null if no fields", "labels": []}
{"id": 18200, "text": "the temporal object to format, not null", "labels": []}
{"id": 18201, "text": "the appendable to format to, not null", "labels": []}
{"id": 18202, "text": "the position to parse from, updated with length parsed and the index of any error, not null", "labels": []}
{"id": 18203, "text": "the query defining the type to parse to, not null", "labels": []}
{"id": 18204, "text": "the queries defining the types to attempt to parse to, must implement TemporalAccessor, not null", "labels": []}
{"id": 18205, "text": "an access control context representing the restriction to be applied to the caller's domain's privileges before performing the specified action.", "labels": []}
{"id": 18206, "text": "If the context is null, then no additional restriction is applied.", "labels": []}
{"id": 18207, "text": "a description of the error", "labels": []}
{"id": 18208, "text": "an exception code used by a particular database vendor", "labels": []}
{"id": 18209, "text": "an array of int, with each element indicating the update count, Statement.SUCCESS_NO_INFO or Statement.EXECUTE_FAILED for each SQL command in the batch for JDBC drivers that continue processing after a command failure; an update count or Statement.SUCCESS_NO_INFO for each SQL command in the batch prior to the failure for JDBC drivers that stop processing after a command failure", "labels": []}
{"id": 18210, "text": "an array of long, with each element indicating the update count, Statement.SUCCESS_NO_INFO or Statement.EXECUTE_FAILED for each SQL command in the batch for JDBC drivers that continue processing after a command failure; an update count or Statement.SUCCESS_NO_INFO for each SQL command in the batch prior to the failure for JDBC drivers that stop processing after a command failure", "labels": []}
{"id": 18211, "text": "true if the low endpoint is to be included in the returned view", "labels": []}
{"id": 18212, "text": "true if the high endpoint is to be included in the returned view", "labels": []}
{"id": 18213, "text": "the list of URLs (space-separated) to load classes from, or null", "labels": []}
{"id": 18214, "text": "the Unicode Extension key, not null.", "labels": []}
{"id": 18215, "text": "the desired locale, not null.", "labels": []}
{"id": 18216, "text": "the Unicode Extension type, not null.", "labels": []}
{"id": 18217, "text": "the Unicode Extension key for this type, not null.", "labels": []}
{"id": 18218, "text": "The arguments, null is a valid value.", "labels": []}
{"id": 18219, "text": "The map may be empty but never null.", "labels": []}
{"id": 18220, "text": "The source document must be an XML fragment, i.e.", "labels": []}
{"id": 18221, "text": "This node must be a Document node, a DocumentFragment node, or a node of a type that is allowed as a child of an Element node, e.g.", "labels": []}
{"id": 18222, "text": "This parameter describes which action should be taken between the new set of nodes being inserted and the existing children of the context node.", "labels": []}
{"id": 18223, "text": "the query to invoke, not null", "labels": []}
{"id": 18224, "text": "a boolean which determines whether or not the tab is selected", "labels": []}
{"id": 18225, "text": "the rectangle where the result should be placed", "labels": []}
{"id": 18226, "text": "Specifying null is equivalent to specifying Locale.getDefault().", "labels": []}
{"id": 18227, "text": "Must be an XML document or XML element and must not be null.", "labels": []}
{"id": 18228, "text": "Implementations must either recognize and process the input or throw an IllegalArgumentException.", "labels": []}
{"id": 18229, "text": "This parameter can be null if the caller is not interested in it.", "labels": []}
{"id": 18230, "text": "Note that when a DOMResult is used, a validator might just pass the same DOM node from DOMSource to DOMResult (in which case source.getNode()==result.getNode()), it might copy the entire DOM tree, or it might alter the node given by the source.", "labels": []}
{"id": 18231, "text": "If true then resolve the class", "labels": []}
{"id": 18232, "text": "The module name; or null to find the class in the unnamed module for this class loader", "labels": []}
{"id": 18233, "text": "The expected binary name of the class, or null if not known", "labels": []}
{"id": 18234, "text": "The bytes in positions off through off+len-1 should have the format of a valid class file as defined by The Java\u2122 Virtual Machine Specification.", "labels": []}
{"id": 18235, "text": "of the class, or null if not known", "labels": []}
{"id": 18236, "text": "The bytes from positions b.position() through b.position() + b.limit() -1 should have the format of a valid class file as defined by The Java\u2122 Virtual Machine Specification.", "labels": []}
{"id": 18237, "text": "The ProtectionDomain of the class, or null.", "labels": []}
{"id": 18238, "text": "The module name; or null to find a resource in the unnamed module for this class loader", "labels": []}
{"id": 18239, "text": "If not null, then this package is sealed with respect to the given code source URL object.", "labels": []}
{"id": 18240, "text": "Otherwise, the package is not sealed.", "labels": []}
{"id": 18241, "text": "true if classes loaded by this class loader will henceforth have assertions enabled by default, false if they will have assertions disabled by default.", "labels": []}
{"id": 18242, "text": "A null value indicates the unnamed package that is \"current\" (see section 7.4.2 of The Java\u2122 Language Specification.)", "labels": []}
{"id": 18243, "text": "true if classes loaded by this classloader and belonging to the named package or any of its subpackages will have assertions enabled by default, false if they will have assertions disabled by default.", "labels": []}
{"id": 18244, "text": "true if the named class is to have assertions enabled when (and if) it is initialized, false if the class is to have assertions disabled.", "labels": []}
{"id": 18245, "text": "The reason for the exception.", "labels": []}
{"id": 18246, "text": "meta-message type (must be less than 128)", "labels": []}
{"id": 18247, "text": "whether to enable the current input method for composition", "labels": []}
{"id": 18248, "text": "If it is not the same object as location, point will remain unmodified by this call.", "labels": []}
{"id": 18249, "text": "If location is not the same object as point, location will remain unmodified by this call.", "labels": []}
{"id": 18250, "text": "if true, the portion preceding the advance should be used, if false the portion after should be used.", "labels": []}
{"id": 18251, "text": "This has no effect if the path does not break or bend sharply at the advance.", "labels": []}
{"id": 18252, "text": "one of ByteOrder.BIG_ENDIAN or java.nio.ByteOrder.LITTLE_ENDIAN, indicating whether network byte order or its reverse will be used for future reads.", "labels": []}
{"id": 18253, "text": "whether or not the returned Sequencer is connected to the default Synthesizer", "labels": []}
{"id": 18254, "text": "the input stream from which the Sequence should be constructed", "labels": []}
{"id": 18255, "text": "the URL from which the Sequence should be constructed", "labels": []}
{"id": 18256, "text": "the File from which the Sequence should be constructed", "labels": []}
{"id": 18257, "text": "the unknown element, may be null", "labels": []}
{"id": 18258, "text": "the array of ciphersuites (or null)", "labels": []}
{"id": 18259, "text": "the array of protocols (or null)", "labels": []}
{"id": 18260, "text": "the algorithm constraints (or null)", "labels": []}
{"id": 18261, "text": "The standard string name of the endpoint identification algorithm (or null).", "labels": []}
{"id": 18262, "text": "the list of desired SNIServerNames (or null)", "labels": []}
{"id": 18263, "text": "the collection of SNIMatchers (or null)", "labels": []}
{"id": 18264, "text": "whether local cipher suites order in #getCipherSuites should be honored during SSL/TLS/DTLS handshaking.", "labels": []}
{"id": 18265, "text": "true indicates that DTLS handshake retransmissions should be enabled; false indicates that DTLS handshake retransmissions should be disabled", "labels": []}
{"id": 18266, "text": "If the array is empty (zero-length), protocol indications will not be used.", "labels": []}
{"id": 18267, "text": "If non-null, a primitive array in which to return the pixel data.", "labels": []}
{"id": 18268, "text": "If non-null, returns the primitive array in this object", "labels": []}
{"id": 18269, "text": "the factory to use when creating new threads", "labels": []}
{"id": 18270, "text": "the number of threads to keep in the pool, even if they are idle", "labels": []}
{"id": 18271, "text": "the factory to use when the executor creates a new thread", "labels": []}
{"id": 18272, "text": "the privileged exception action to run", "labels": []}
{"id": 18273, "text": "A null gc implies that the validate method should skip the compatibility test.", "labels": []}
{"id": 18274, "text": "This may never have the value \"xml\" or \"xmlns\".", "labels": []}
{"id": 18275, "text": "A value of 0 means that this Image should never be accelerated.", "labels": []}
{"id": 18276, "text": "Implementations of the Paint interface are allowed to throw NullPointerException for a null deviceBounds.", "labels": []}
{"id": 18277, "text": "Implementations of the Paint interface are allowed to throw NullPointerException for a null userBounds.", "labels": []}
{"id": 18278, "text": "Implementations of the Paint interface are allowed to throw NullPointerException for a null xform.", "labels": []}
{"id": 18279, "text": "Implementations of the Paint interface are allowed to throw NullPointerException for a null hints.", "labels": []}
{"id": 18280, "text": "an object that has implemented the javax.sql.RowSetListener interface and wants to be notified of any events that occur on this RowSet object; May be null.", "labels": []}
{"id": 18281, "text": "a String object containing an SQL query that will be set as this RowSet object's command property; may be null but may not be an empty string", "labels": []}
{"id": 18282, "text": "a String object that contains the JDBC URL that will be used to establish the connection to a database for this RowSet object; may be null but must not be an empty string", "labels": []}
{"id": 18283, "text": "a String object with the name that can be supplied to a naming service based on JNDI technology to retrieve the DataSource object that can be used to get a connection; may be null but must not be an empty string", "labels": []}
{"id": 18284, "text": "It may be null.", "labels": []}
{"id": 18285, "text": "true to indicate that this RowSet object is read-only; false to indicate that it is updatable", "labels": []}
{"id": 18286, "text": "one of the following constants, listed in ascending order: Connection.TRANSACTION_NONE, Connection.TRANSACTION_READ_UNCOMMITTED, Connection.TRANSACTION_READ_COMMITTED, Connection.TRANSACTION_REPEATABLE_READ, or Connection.TRANSACTION_SERIALIZABLE", "labels": []}
{"id": 18287, "text": "the new query time-out limit in seconds; zero means that there is no limit; must not be less than zero", "labels": []}
{"id": 18288, "text": "the number of rows to fetch; 0 to let the driver decide what the best fetch size is; must not be less than 0 or more than the maximum number of rows allowed for this RowSet object (the number returned by a call to the method getMaxRows())", "labels": []}
{"id": 18289, "text": "The first parameter is 1, the second is 2, and so on; must be 1 or greater", "labels": []}
{"id": 18290, "text": "If a non-standard sqlType is supplied, this method will not throw a SQLException.", "labels": []}
{"id": 18291, "text": "the fully qualified name of an SQL user-defined type, which is ignored if the parameter is not a user-defined type or REF value", "labels": []}
{"id": 18292, "text": "This is the number of bytes the driver will send to the DBMS; lengths of 0 or less are are undefined but will cause an invalid length exception to be thrown in the underlying JDBC driver.", "labels": []}
{"id": 18293, "text": "the number of bytes in the stream; lengths of 0 or less are are undefined but will cause an invalid length exception to be thrown in the underlying JDBC driver.", "labels": []}
{"id": 18294, "text": "the number of characters in the stream; lengths of 0 or less are undefined but will cause an invalid length exception to be thrown in the underlying JDBC driver.", "labels": []}
{"id": 18295, "text": "the Object containing the input parameter value; must be an Object type", "labels": []}
{"id": 18296, "text": "If a non-standard targetSqlType is supplied, this method will not throw a SQLException.", "labels": []}
{"id": 18297, "text": "for the types java.sql.Types.DECIMAL and java.sql.Types.NUMERIC, this is the number of digits after the decimal point.", "labels": []}
{"id": 18298, "text": "a Ref object representing an SQL REF value; cannot be null", "labels": []}
{"id": 18299, "text": "a Clob object representing an SQL CLOB value; cannot be null", "labels": []}
{"id": 18300, "text": "an Array object representing an SQL ARRAY value; cannot be null.", "labels": []}
{"id": 18301, "text": "The Array object passed to this method must return a non-null Object for all getArray() method calls.", "labels": []}
{"id": 18302, "text": "A null value will cause a SQLException to be thrown.", "labels": []}
{"id": 18303, "text": "a java.util.Calendar object to use when when constructing the date", "labels": []}
{"id": 18304, "text": "a list of files, if null use the default search path for this location", "labels": []}
{"id": 18305, "text": "a list of paths, if null use the default search path for this location", "labels": []}
{"id": 18306, "text": "the maximum amount that the control points for a given curve can vary from colinear before a subdivided curve is replaced by a straight line connecting the end points", "labels": []}
{"id": 18307, "text": "The attachment for the resulting key; may be null", "labels": []}
{"id": 18308, "text": "If true then this channel will be placed in blocking mode; if false then it will be placed non-blocking mode", "labels": []}
{"id": 18309, "text": "true if unknown tags should be saved in the model, otherwise tags are dropped", "labels": []}
{"id": 18310, "text": "the element the content is inserted before", "labels": []}
{"id": 18311, "text": "the string to be parsed and inserted before elem", "labels": []}
{"id": 18312, "text": "the element the content is inserted after", "labels": []}
{"id": 18313, "text": "the string to be parsed and inserted after elem", "labels": []}
{"id": 18314, "text": "This name is internally converted to the canonical lower case format before performing the match.", "labels": []}
{"id": 18315, "text": "a boolean indicating whether or not to allow caching", "labels": []}
{"id": 18316, "text": "the index at which an error occurred", "labels": []}
{"id": 18317, "text": "the new viewport to be used; if viewport is null, the old viewport is still removed and the new viewport is set to null", "labels": []}
{"id": 18318, "text": "the new row header to be used; if null the old row header is still removed and the new rowHeader is set to null", "labels": []}
{"id": 18319, "text": "the end date, exclusive, which is converted to an Instant, not null", "labels": []}
{"id": 18320, "text": "the offset to combine with, not null", "labels": []}
{"id": 18321, "text": "the zone to combine with, not null", "labels": []}
{"id": 18322, "text": "the other instant to compare to, not null", "labels": []}
{"id": 18323, "text": "the other instant, null returns false", "labels": []}
{"id": 18324, "text": "Its value must be \"1.3.6.1.4.1.1466.20037\" or null.", "labels": []}
{"id": 18325, "text": "The possibly null ASN.1 BER encoded value of the extended response.", "labels": []}
{"id": 18326, "text": "the cause, may be null.", "labels": []}
{"id": 18327, "text": "the japaneseEra name; non-null", "labels": []}
{"id": 18328, "text": "a Rectangle specifying the source region of interest, or null.", "labels": []}
{"id": 18329, "text": "the horizontal offset of the first subsample within the region, or within the image if no region is set.", "labels": []}
{"id": 18330, "text": "An appropriate IIOParamController, or null.", "labels": []}
{"id": 18331, "text": "the attributes to listen on, or null to mean all attributes that can change, as determined by the job", "labels": []}
{"id": 18332, "text": "It must be a flavor supported by this PrintJob.", "labels": []}
{"id": 18333, "text": "If this parameter is null then the default attributes are used.", "labels": []}
{"id": 18334, "text": "For example, for formatting a number 123456789 in Locale.US locale, if the given fieldPosition is NumberFormat.INTEGER_FIELD, the begin index and end index of fieldPosition will be set to 0 and 11, respectively for the output string 123,456,789.", "labels": []}
{"id": 18335, "text": "true if the least double is desired; false otherwise", "labels": []}
{"id": 18336, "text": "boolean if true, then data will be written to the end of the file rather than the beginning.", "labels": []}
{"id": 18337, "text": "If true, the writer will write the data to the end of the file rather than the beginning.", "labels": []}
{"id": 18338, "text": "an implementation defined error type", "labels": []}
{"id": 18339, "text": "information related to the error, if available", "labels": []}
{"id": 18340, "text": "the location of the error, if available", "labels": []}
{"id": 18341, "text": "dataArray must have at least offset + size elements.", "labels": []}
{"id": 18342, "text": "This is null when the node is being deleted.", "labels": []}
{"id": 18343, "text": "Specifies the node newly created if any, or null.", "labels": []}
{"id": 18344, "text": "the logical style to assign to the paragraph, or null for no style", "labels": []}
{"id": 18345, "text": "if true, then replace the existing attributes first", "labels": []}
{"id": 18346, "text": "the non-null attributes", "labels": []}
{"id": 18347, "text": "if true, replace the existing attributes first", "labels": []}
{"id": 18348, "text": "The contents of encrypedData are copied to protect against subsequent modification when constructing this object.", "labels": []}
{"id": 18349, "text": "If a is null then any previously set authenticator is removed.", "labels": []}
{"id": 18350, "text": "The InetAddress of the site requesting authorization, or null if not known.", "labels": []}
{"id": 18351, "text": "The InetAddress of the site requesting authentication, or null if not known.", "labels": []}
{"id": 18352, "text": "the authenticator, or null.", "labels": []}
{"id": 18353, "text": "the name of this SQLPermission object, which must be either setLog, callAbort, setSyncFactory, deregisterDriver, or setNetworkTimeout", "labels": []}
{"id": 18354, "text": "the element representing the tag; the element can be used to determine the nesting for situations where the attributes will differ if nested inside of other elements", "labels": []}
{"id": 18355, "text": "This value represents the location of the stream and may be null.", "labels": []}
{"id": 18356, "text": "The StringJoiner whose contents should be merged into this one", "labels": []}
{"id": 18357, "text": "A non-null enumeration containing the components for the new composite name.", "labels": []}
{"id": 18358, "text": "The possibly null name to check.", "labels": []}
{"id": 18359, "text": "The offset within the buffer array of the first buffer from which bytes are to be retrieved; it must be non-negative and no larger than srcs.length", "labels": []}
{"id": 18360, "text": "The maximum number of buffers to be accessed; it must be non-negative and no larger than srcs.length - offset", "labels": []}
{"id": 18361, "text": "The offset within the buffer array of the first buffer from which bytes are to be transferred; it must be non-negative and no larger than dsts.length.", "labels": []}
{"id": 18362, "text": "The maximum number of buffers to be accessed; it must be non-negative and no larger than dsts.length - offset.", "labels": []}
{"id": 18363, "text": "true if the engine should start its handshaking in \"client\" mode", "labels": []}
{"id": 18364, "text": "Can be null, which has no effects on current cookie policy.", "labels": []}
{"id": 18365, "text": "if null, the returned value is true.", "labels": []}
{"id": 18366, "text": "the new cursor name, which must be unique within a connection", "labels": []}
{"id": 18367, "text": "one of the following Statement constants indicating what should happen to current ResultSet objects obtained using the method getResultSet: Statement.CLOSE_CURRENT_RESULT, Statement.KEEP_CURRENT_RESULT, or Statement.CLOSE_ALL_RESULTS", "labels": []}
{"id": 18368, "text": "a flag indicating whether auto-generated keys should be made available for retrieval; one of the following constants: Statement.RETURN_GENERATED_KEYS Statement.NO_GENERATED_KEYS", "labels": []}
{"id": 18369, "text": "an array of column indexes indicating the columns that should be returned from the inserted row", "labels": []}
{"id": 18370, "text": "an array of the names of the columns that should be returned from the inserted row", "labels": []}
{"id": 18371, "text": "a constant indicating whether auto-generated keys should be made available for retrieval using the method getGeneratedKeys; one of the following constants: Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS", "labels": []}
{"id": 18372, "text": "an array of the indexes of the columns in the inserted row that should be made available for retrieval by a call to the method getGeneratedKeys", "labels": []}
{"id": 18373, "text": "an array of the names of the columns in the inserted row that should be made available for retrieval by a call to the method getGeneratedKeys", "labels": []}
{"id": 18374, "text": "requests that the statement be pooled if true and that the statement not be pooled if false", "labels": []}
{"id": 18375, "text": "indicates if a simple SQL identifier should be returned as a quoted identifier", "labels": []}
{"id": 18376, "text": "It is null if the object bound is null.", "labels": []}
{"id": 18377, "text": "true if name is a name relative to the target context (which is named by the first parameter of the list() method); false if name is a URL string.", "labels": []}
{"id": 18378, "text": "If true, the name of binding is relative to the target context; if false, the name of binding is a URL string.", "labels": []}
{"id": 18379, "text": "The position within the file at which the transfer is to begin; must be non-negative", "labels": []}
{"id": 18380, "text": "The maximum number of bytes to be transferred; must be non-negative", "labels": []}
{"id": 18381, "text": "One of the constants READ_ONLY, READ_WRITE, or PRIVATE defined in the FileChannel.MapMode class, according to whether the file is to be mapped read-only, read/write, or privately (copy-on-write), respectively", "labels": []}
{"id": 18382, "text": "The position within the file at which the mapped region is to start; must be non-negative", "labels": []}
{"id": 18383, "text": "The size of the region to be mapped; must be non-negative and no greater than Integer.MAX_VALUE", "labels": []}
{"id": 18384, "text": "The offset within the array of the first byte to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 18385, "text": "The maximum number of bytes to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 18386, "text": "The source buffer from which bytes are to be read; must not be this buffer", "labels": []}
{"id": 18387, "text": "The offset within the array of the first byte to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 18388, "text": "The number of bytes to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 18389, "text": "The index to query for alignment offset, must be non-negative, no upper bounds check is performed", "labels": []}
{"id": 18390, "text": "The unit size in bytes, must be a power of 2", "labels": []}
{"id": 18391, "text": "The local address to bind the socket, or null to bind to an automatically assigned socket address", "labels": []}
{"id": 18392, "text": "the temporal object to add the amount to, not null", "labels": []}
{"id": 18393, "text": "the temporal object to subtract the amount from, not null", "labels": []}
{"id": 18394, "text": "If direct connection is desired, Proxy.NO_PROXY should be specified.", "labels": []}
{"id": 18395, "text": "the LoadStoreParameter that specifies how to load the keystore, which may be null", "labels": []}
{"id": 18396, "text": "the keystore password, which may be null", "labels": []}
{"id": 18397, "text": "the Component this DragGestureRecognizer should \"observe\" the event stream to, in order to detect a drag initiating gesture.", "labels": []}
{"id": 18398, "text": "If this value is null, the DragGestureRecognizer is not associated with any Component.", "labels": []}
{"id": 18399, "text": "the DragGestureRecognizer to notify when a drag gesture is detected", "labels": []}
{"id": 18400, "text": "ALL must be a flavor supported by the PrintJob & PrintService.", "labels": []}
{"id": 18401, "text": "If positive, block for up to timeout milliseconds while waiting for a reference to be added to this queue.", "labels": []}
{"id": 18402, "text": "If zero, block indefinitely.", "labels": []}
{"id": 18403, "text": "the offset ID, not null", "labels": []}
{"id": 18404, "text": "an info object that describes the desired mixer, or null for the default mixer", "labels": []}
{"id": 18405, "text": "null indicates that all attributes should be retrieved; an empty array indicates that none should be retrieved.", "labels": []}
{"id": 18406, "text": "the object to bind; possibly null", "labels": []}
{"id": 18407, "text": "If empty or null, all objects in the target context are returned.", "labels": []}
{"id": 18408, "text": "null indicates that all attributes are to be returned; an empty array indicates that none are to be returned.", "labels": []}
{"id": 18409, "text": "the filter expression to use for the search; may not be null", "labels": []}
{"id": 18410, "text": "If null, the default search controls are used (equivalent to (new SearchControls())).", "labels": []}
{"id": 18411, "text": "If null, equivalent to an empty array.", "labels": []}
{"id": 18412, "text": "This must be an instance of class PrinterStateReason", "labels": []}
{"id": 18413, "text": "This must be an instance of class Severity", "labels": []}
{"id": 18414, "text": "the message to be generated when a PrinterAbortException is thrown", "labels": []}
{"id": 18415, "text": "If null, no builder is installed.", "labels": []}
{"id": 18416, "text": "The possibly null object for which to create an object.", "labels": []}
{"id": 18417, "text": "Specifying a name is optional; if it is omitted, name should be null.", "labels": []}
{"id": 18418, "text": "If null, name is relative to the default initial context.", "labels": []}
{"id": 18419, "text": "The possibly null environment to be used in the creation of the object factory and the object.", "labels": []}
{"id": 18420, "text": "The non-null scheme-id of the URLs supported by the context.", "labels": []}
{"id": 18421, "text": "The possibly null environment properties to be used in the creation of the object factory and the context.", "labels": []}
{"id": 18422, "text": "The possibly null environment properties used when creating the context.", "labels": []}
{"id": 18423, "text": "If null, no builder is set.", "labels": []}
{"id": 18424, "text": "The non-null exception that triggered this continuation.", "labels": []}
{"id": 18425, "text": "The non-null object for which to get state to bind.", "labels": []}
{"id": 18426, "text": "The possibly null environment to be used in the creation of the state factory and the object's state.", "labels": []}
{"id": 18427, "text": "cannot be a null or empty string.", "labels": []}
{"id": 18428, "text": "cannot be null.", "labels": []}
{"id": 18429, "text": "must be a valid value for the openType specified for this parameter; default value not supported for ArrayType and TabularType; can be null, in which case it means that no default value is set.", "labels": []}
{"id": 18430, "text": "must be valid for the openType specified for this parameter; can be null, in which case it means that no minimal value is set.", "labels": []}
{"id": 18431, "text": "must be valid for the openType specified for this parameter; can be null, in which case it means that no maximal value is set.", "labels": []}
{"id": 18432, "text": "the keytab File object, must not be null", "labels": []}
{"id": 18433, "text": "the bound service principal, must not be null", "labels": []}
{"id": 18434, "text": "the Kerberos principal, must not be null.", "labels": []}
{"id": 18435, "text": "If year is DatatypeConstants.FIELD_UNDEFINED, then eon is set to null.", "labels": []}
{"id": 18436, "text": "null is a legal value.", "labels": []}
{"id": 18437, "text": "Use default GregorianCalendar locale if value is null.", "labels": []}
{"id": 18438, "text": "provide default field values to use when corresponding field for this instance is FIELD_UNDEFINED or null.", "labels": []}
{"id": 18439, "text": "If defaultsis null or a field within the specified defaults is undefined, just use java.util.GregorianCalendar defaults.", "labels": []}
{"id": 18440, "text": "default zoneoffset if this zoneoffset is DatatypeConstants.FIELD_UNDEFINED.", "labels": []}
{"id": 18441, "text": "the new, non-null BoundedRangeModel to use", "labels": []}
{"id": 18442, "text": "new Dictionary of labels, or null to remove all labels", "labels": []}
{"id": 18443, "text": "whether or not tick marks should be painted", "labels": []}
{"id": 18444, "text": "whether or not to paint the slider track", "labels": []}
{"id": 18445, "text": "whether or not to paint labels", "labels": []}
{"id": 18446, "text": "A string representing the attribute defaulting mode (\"#IMPLIED\", \"#REQUIRED\", or \"#FIXED\") or null if none of these applies.", "labels": []}
{"id": 18447, "text": "A string representing the attribute's default value, or null if there is none.", "labels": []}
{"id": 18448, "text": "If it is a parameter entity, the name will begin with '%'.", "labels": []}
{"id": 18449, "text": "the non-null key", "labels": []}
{"id": 18450, "text": "a Writer for additional output from the tool; use System.err if null", "labels": []}
{"id": 18451, "text": "a file manager; if null use the tool's standard filemanager", "labels": []}
{"id": 18452, "text": "a diagnostic listener; if null use the tool's default method for reporting diagnostics", "labels": []}
{"id": 18453, "text": "a class providing the necessary methods required of a doclet; a value of null means to use the standard doclet.", "labels": []}
{"id": 18454, "text": "documentation tool options and doclet options, null means no options", "labels": []}
{"id": 18455, "text": "extra parameters, can be null.", "labels": []}
{"id": 18456, "text": "The specific error message.", "labels": []}
{"id": 18457, "text": "A boolean that equals true if the event is one of a series of multiple adjusting events, otherwise false", "labels": []}
{"id": 18458, "text": "Component mouse coordinates are relative to, may be null", "labels": []}
{"id": 18459, "text": "true if Popup should be heavy weight, otherwise popup type will be selected by popup factory.", "labels": []}
{"id": 18460, "text": "The non-null challenge sent from the server.", "labels": []}
{"id": 18461, "text": "A non-null byte array containing the encoded bytes from the server.", "labels": []}
{"id": 18462, "text": "The non-null property name.", "labels": []}
{"id": 18463, "text": "parameters for the Policy, which may be null.", "labels": []}
{"id": 18464, "text": "the I/O exception that prevented the file from being visited", "labels": []}
{"id": 18465, "text": "null if the iteration of the directory completes without an error; otherwise the I/O exception that caused the iteration of the directory to complete prematurely", "labels": []}
{"id": 18466, "text": "true if the parser produced by this code will validate documents as they are parsed; false otherwise.", "labels": []}
{"id": 18467, "text": "the underlying reason for this SQLException(which is saved for later retrieval by the getCause() method); may be null indicating the cause is non-existent or unknown.", "labels": []}
{"id": 18468, "text": "the provider from which the KeyStore is to be instantiated (or null)", "labels": []}
{"id": 18469, "text": "the Instrument object to be used in place of the old instrument, it should be loaded into the synthesizer", "labels": []}
{"id": 18470, "text": "the JTable that is asking the editor to edit; can be null", "labels": []}
{"id": 18471, "text": "For example, if value is the string \"true\", it could be rendered as a string or it could be rendered as a check box that is checked.", "labels": []}
{"id": 18472, "text": "null is a valid value", "labels": []}
{"id": 18473, "text": "true if the cell is to be rendered with highlighting", "labels": []}
{"id": 18474, "text": "May be null or \"-\", which represents a class name that is implied by any class name but does not imply any other class name.", "labels": []}
{"id": 18475, "text": "May be null or \"-\", which represents a member that is implied by any member but does not imply any other member.", "labels": []}
{"id": 18476, "text": "May be null, which represents an object name that is implied by any object name but does not imply any other object name.", "labels": []}
{"id": 18477, "text": "(unused; should be null)", "labels": []}
{"id": 18478, "text": "true if color samples are premultiplied by the alpha sample; false otherwise", "labels": []}
{"id": 18479, "text": "changes to the element this view is responsible for (may be null if there were no changes)", "labels": []}
{"id": 18480, "text": "If a mouse has three enabled buttons(see MouseInfo.getNumberOfButtons()) then the values from the left column passed into the method will return corresponding values from the right column: button returned mask BUTTON1 BUTTON1_DOWN_MASK BUTTON2 BUTTON2_DOWN_MASK BUTTON3 BUTTON3_DOWN_MASK If a mouse has more than three enabled buttons then more values are admissible (4, 5, etc.).", "labels": []}
{"id": 18481, "text": "It returns masks for a limited number of buttons only.", "labels": []}
{"id": 18482, "text": "the detail message of this exception.", "labels": []}
{"id": 18483, "text": "the name of the method (which must not be \"<init>\")", "labels": []}
{"id": 18484, "text": "true if the policy should be respected", "labels": []}
{"id": 18485, "text": "the new parent, or null if the view is being removed from a parent", "labels": []}
{"id": 18486, "text": "This should be a value >= 0 and <= getViewCount", "labels": []}
{"id": 18487, "text": "the number of existing child views to remove This should be a value >= 0 and <= (getViewCount() - offset).", "labels": []}
{"id": 18488, "text": "This value can be null to indicate no children are being added (useful to remove).", "labels": []}
{"id": 18489, "text": "changes to the element this view is responsible for (may be null if there were no changes).", "labels": []}
{"id": 18490, "text": "the choice to be used as the default choice when the list of choices are displayed.", "labels": []}
{"id": 18491, "text": "boolean specifying whether or not multiple selections can be made from the list of choices.", "labels": []}
{"id": 18492, "text": "the action to run before completing the returned CompletableFuture", "labels": []}
{"id": 18493, "text": "the value to return if not completed", "labels": []}
{"id": 18494, "text": "how long to wait before completing exceptionally with a TimeoutException, in units of unit", "labels": []}
{"id": 18495, "text": "how long to wait before completing normally with the given value, in units of unit", "labels": []}
{"id": 18496, "text": "whether or not to indicate the drop location", "labels": []}
{"id": 18497, "text": "the URIReference that was being dereferenced when the error was encountered", "labels": []}
{"id": 18498, "text": "the Method object for the annotation element, may be null", "labels": []}
{"id": 18499, "text": "The exact format of the string is unspecified, may be null.", "labels": []}
{"id": 18500, "text": "the first day of the week, not null", "labels": []}
{"id": 18501, "text": "the other rules to compare to, null returns false", "labels": []}
{"id": 18502, "text": "alpha must be a floating point number in the inclusive range [0.0, 1.0].", "labels": []}
{"id": 18503, "text": "the class whose method should be invoked", "labels": []}
{"id": 18504, "text": "the action to perform before completing the returned CompletionStage", "labels": []}
{"id": 18505, "text": "the function to use to compute the value of the returned CompletionStage if this CompletionStage completed exceptionally", "labels": []}
{"id": 18506, "text": "the function to use to compute the returned CompletionStage if this CompletionStage completed exceptionally", "labels": []}
{"id": 18507, "text": "whether to enable the input method for composition", "labels": []}
{"id": 18508, "text": "client window's bounds on the screen; or null if the client window is iconified or invisible", "labels": []}
{"id": 18509, "text": "whether the focus change is temporary", "labels": []}
{"id": 18510, "text": "the containing type, or null if none", "labels": []}
{"id": 18511, "text": "The non-null id of the attribute to remove.", "labels": []}
{"id": 18512, "text": "If the attribute set ignores the character case of its attribute ids, the case of attrID is ignored.", "labels": []}
{"id": 18513, "text": "Describes the reason for the exception.", "labels": []}
{"id": 18514, "text": "the list of acceptable CA issuer subject names, or null if it does not matter which issuers are used.", "labels": []}
{"id": 18515, "text": "This parameter can be null, which indicates that implementations are free to select an alias applicable to any socket.", "labels": []}
{"id": 18516, "text": "For a connected SctpChannel the address is the preferred peer address of the association to send the message to, or null to use the peer primary address.", "labels": []}
{"id": 18517, "text": "For an SctpMultiChannel the address is used to determine the association, or if no association exists with a peer of that address then one is setup.", "labels": []}
{"id": 18518, "text": "The preferred peer address of the association to send the message to, or null to use the peer primary address", "labels": []}
{"id": 18519, "text": "true if, and only if, the message is complete", "labels": []}
{"id": 18520, "text": "The time period in milliseconds, or 0 to indicate that no timeout should occur", "labels": []}
{"id": 18521, "text": "A null value is permitted, and indicates that the cause is nonexistent or unknown.", "labels": []}
{"id": 18522, "text": "This is the empty string when a default mapping scope ends.", "labels": []}
{"id": 18523, "text": "the Namespace URI, or the empty string if the element has no Namespace URI or if Namespace processing is not being performed", "labels": []}
{"id": 18524, "text": "the local name (without prefix), or the empty string if Namespace processing is not being performed", "labels": []}
{"id": 18525, "text": "the qualified name (with prefix), or the empty string if qualified names are not available", "labels": []}
{"id": 18526, "text": "If there are no attributes, it shall be an empty Attributes object.", "labels": []}
{"id": 18527, "text": "The value of this object after startElement returns is undefined", "labels": []}
{"id": 18528, "text": "the qualified XML name (with prefix), or the empty string if qualified names are not available", "labels": []}
{"id": 18529, "text": "the processing instruction data, or null if none was supplied.", "labels": []}
{"id": 18530, "text": "If it is a parameter entity, the name will begin with '%', and if it is the external DTD subset, it will be the string \"[dtd]\"", "labels": []}
{"id": 18531, "text": "This will never be null.", "labels": []}
{"id": 18532, "text": "entities), applications must use the value \"http://www.w3.org/TR/REC-xml\".", "labels": []}
{"id": 18533, "text": "For XML Schema [XML Schema Part 1] , applications must use the value \"http://www.w3.org/2001/XMLSchema\".", "labels": []}
{"id": 18534, "text": "Other types of resources are outside the scope of this specification and therefore should recommend an absolute URI in order to use this method.", "labels": []}
{"id": 18535, "text": "the target namespace of the XML Schema [XML Schema Part 1] when resolving XML Schema resources.", "labels": []}
{"id": 18536, "text": "The public identifier of the external entity being referenced, or null if no public identifier was supplied or if the resource is not an entity.", "labels": []}
{"id": 18537, "text": "The system identifier, a URI reference [IETF RFC 2396], of the external resource being referenced, or null if no system identifier was supplied.", "labels": []}
{"id": 18538, "text": "The absolute base URI of the resource being parsed, or null if there is no base URI.", "labels": []}
{"id": 18539, "text": "if true the image will be loaded when first asked for, otherwise it will be asynchronously.", "labels": []}
{"id": 18540, "text": "the reference URI (may be null)", "labels": []}
{"id": 18541, "text": "May be null or empty.", "labels": []}
{"id": 18542, "text": "the reference type, as a URI (may be null)", "labels": []}
{"id": 18543, "text": "the reference ID (may be null)", "labels": []}
{"id": 18544, "text": "The list must contain at least one entry.", "labels": []}
{"id": 18545, "text": "a list of Transforms that are to be applied when generating the signature.", "labels": []}
{"id": 18546, "text": "a mechanism-specific XML structure from which to unmarshal the parameters from (may be null if not required or optional)", "labels": []}
{"id": 18547, "text": "a boolean indicating whether a cache file should be used, in cases where it is optional.", "labels": []}
{"id": 18548, "text": "if non-null, procedure to invoke upon exception thrown in method onNext", "labels": []}
{"id": 18549, "text": "the (non-null) item to publish", "labels": []}
{"id": 18550, "text": "if non-null, the handler invoked upon a drop to a subscriber, with arguments of the subscriber and item; if it returns true, an offer is re-attempted (once)", "labels": []}
{"id": 18551, "text": "how long to wait for resources for any subscriber before giving up, in units of unit", "labels": []}
{"id": 18552, "text": "the onError argument sent to subscribers", "labels": []}
{"id": 18553, "text": "The illegal Unicode code point", "labels": []}
{"id": 18554, "text": "null value can be supplied to indicate that the application does not want to set this value.", "labels": []}
{"id": 18555, "text": "The DragGestureListener to notify when a gesture is detected", "labels": []}
{"id": 18556, "text": "the expected name of the class, or null if not known, using '.'", "labels": []}
{"id": 18557, "text": "the associated CodeSource, or null if none", "labels": []}
{"id": 18558, "text": "The possibly null attributes containing some of obj's attributes.", "labels": []}
{"id": 18559, "text": "If the object factory requires more attributes, it needs to get it, either using obj, or name and nameCtx.", "labels": []}
{"id": 18560, "text": "The factory must not modify attrs.", "labels": []}
{"id": 18561, "text": "if true, then multiple selections are allowed; otherwise, only one item can be selected at a time.", "labels": []}
{"id": 18562, "text": "the item to be added; if this parameter is null then the item is treated as an empty string, \"\"", "labels": []}
{"id": 18563, "text": "if true then multiple selections are allowed; otherwise, only one item from the list can be selected at once", "labels": []}
{"id": 18564, "text": "If null it is ignored.", "labels": []}
{"id": 18565, "text": "If null this constraint is not used.", "labels": []}
{"id": 18566, "text": "if true, the border is painted.", "labels": []}
{"id": 18567, "text": "Component to repaint, null results in nothing happening.", "labels": []}
{"id": 18568, "text": "Window to repaint, null results in nothing happening.", "labels": []}
{"id": 18569, "text": "the index at which the error occurred, or -1 if the index is not known", "labels": []}
{"id": 18570, "text": "the namespace URI of the attribute (specify null if not applicable)", "labels": []}
{"id": 18571, "text": "This will be null if this is a subregion.", "labels": []}
{"id": 18572, "text": "Whether or not this is a subregion.", "labels": []}
{"id": 18573, "text": "If null is specified, all available attributes will be used.", "labels": []}
{"id": 18574, "text": "the specified RenderingHints, or null", "labels": []}
{"id": 18575, "text": "the destination for the filtering operation or null", "labels": []}
{"id": 18576, "text": "the destination point or null", "labels": []}
{"id": 18577, "text": "The string must be an XML name.", "labels": []}
{"id": 18578, "text": "Any new event type must not begin with any upper, lower, or mixed case version of the string \"DOM\".", "labels": []}
{"id": 18579, "text": "It is also strongly recommended that third parties adding their own events use their own prefix to avoid confusion and lessen the probability of conflicts with other new events.", "labels": []}
{"id": 18580, "text": "The address to bind the socket, or null to bind the socket to an automatically assigned socket address", "labels": []}
{"id": 18581, "text": "the first list, may be empty but not null", "labels": []}
{"id": 18582, "text": "the second list, may be empty but not null", "labels": []}
{"id": 18583, "text": "whether this invocation completes the message", "labels": []}
{"id": 18584, "text": "the WebSocket on which the error has occurred", "labels": []}
{"id": 18585, "text": "the error", "labels": []}
{"id": 18586, "text": "A non-null object whose state is to be retrieved.", "labels": []}
{"id": 18587, "text": "interface extending java.lang.annotation.Annotation, not null", "labels": []}
{"id": 18588, "text": "name of the method in the annotation interface to find, not null", "labels": []}
{"id": 18589, "text": "the Class object corresponding to the annotation type, not null", "labels": []}
{"id": 18590, "text": "true if the associated thread should run as a daemon.", "labels": []}
{"id": 18591, "text": "delay in milliseconds before task is to be executed.", "labels": []}
{"id": 18592, "text": "whether or not to verify the JarInputStream if it is signed.", "labels": []}
{"id": 18593, "text": "the destination's ColorModel, which can be null.", "labels": []}
{"id": 18594, "text": "If less than or equal to zero, then no tasks are processed.", "labels": []}
{"id": 18595, "text": "DialogType.COMMON, DialogType.NATIVE, or DialogType.NONE.", "labels": []}
{"id": 18596, "text": "Ranges must be in ascending order and must not overlap.", "labels": []}
{"id": 18597, "text": "Note that (new int[][] { new int[] { 1, 1 }, new int[] { 1, 2 } }), is an invalid set of page ranges because the two ranges overlap.", "labels": []}
{"id": 18598, "text": "If -1 is specified for the channel value, the track will receive data from all channels.", "labels": []}
{"id": 18599, "text": "true implies the track should be muted, false implies the track should be unmuted.", "labels": []}
{"id": 18600, "text": "true implies the track should be solo'd, false implies the track should not be solo'd.", "labels": []}
{"id": 18601, "text": "the MIDI controller numbers for which change notification should be cancelled, or null to cancel for all controllers", "labels": []}
{"id": 18602, "text": "the parameters to pass to the TerminalFactorySpi implementation, or null if no parameters are needed", "labels": []}
{"id": 18603, "text": "whether or not the JComboBox has focus", "labels": []}
{"id": 18604, "text": "If it is null, the thread calling sendNotification will invoke the handleNotification method itself.", "labels": []}
{"id": 18605, "text": "Can be null, which is equivalent to an empty array.", "labels": []}
{"id": 18606, "text": "the WebRowSet object to be parsed, whose xmlReader field must contain a reference to this XmlReader object", "labels": []}
{"id": 18607, "text": "the interface of which all members of this attribute set must be an instance.", "labels": []}
{"id": 18608, "text": "If non-null, returns the samples in this array.", "labels": []}
{"id": 18609, "text": "the prefix to bind to the uri, may not be null", "labels": []}
{"id": 18610, "text": "the uri to bind to the prefix, may be null", "labels": []}
{"id": 18611, "text": "the uri to bind to the default namespace, may be null", "labels": []}
{"id": 18612, "text": "the namespace context to use for this writer, may not be null", "labels": []}
{"id": 18613, "text": "true if this button will be capable of being the default button on the RootPane; otherwise false", "labels": []}
{"id": 18614, "text": "The first element must be greater than 0.", "labels": []}
{"id": 18615, "text": "The second element must be must be greater than 0.", "labels": []}
{"id": 18616, "text": "The third element must be either 3 or 4.", "labels": []}
{"id": 18617, "text": "if true, ignore case when comparing characters.", "labels": []}
{"id": 18618, "text": "If it is greater than or equal to the length of this string, it has the same effect as if it were equal to one less than the length of this string: this entire string may be searched.", "labels": []}
{"id": 18619, "text": "If it is negative, it has the same effect as if it were -1: -1 is returned.", "labels": []}
{"id": 18620, "text": "the thread to unpark, or null, in which case this operation has no effect", "labels": []}
{"id": 18621, "text": "The attribute's Namespace URI, or the empty string if none is available.", "labels": []}
{"id": 18622, "text": "The Namespace URI, or the empty string if none is available or Namespace processing is not being performed.", "labels": []}
{"id": 18623, "text": "The local name, or the empty string if Namespace processing is not being performed.", "labels": []}
{"id": 18624, "text": "The qualified (prefixed) name, or the empty string if qualified names are not available.", "labels": []}
{"id": 18625, "text": "an initial listener; can be null", "labels": []}
{"id": 18626, "text": "specify false to make the timer stop after sending its first action event", "labels": []}
{"id": 18627, "text": "the operation which should be performed when the user closes the frame", "labels": []}
{"id": 18628, "text": "true if add and setLayout are forwarded, false if they should operate directly on the JFrame.", "labels": []}
{"id": 18629, "text": "the component from which this UI delegate is being removed; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 18630, "text": "an interface this address must be associated with.", "labels": []}
{"id": 18631, "text": "a package element to associate with the given file object representing a legacy package.html, null otherwise", "labels": []}
{"id": 18632, "text": "how to wait before giving up, in units of unit", "labels": []}
{"id": 18633, "text": "the defining loader of the class to be transformed, may be null if the bootstrap loader", "labels": []}
{"id": 18634, "text": "if this is triggered by a redefine or retransform, the class being redefined or retransformed; if this is a class load, null", "labels": []}
{"id": 18635, "text": "the input byte buffer in class file format - must not be modified", "labels": []}
{"id": 18636, "text": "an array of objects containing the values of the arguments passed in the method invocation on the proxy instance, or null if the method takes no arguments", "labels": []}
{"id": 18637, "text": "The possibly null attributes associated with refInfo.", "labels": []}
{"id": 18638, "text": "The possibly null Attributes that is to be bound with the object.", "labels": []}
{"id": 18639, "text": "If null, this exception has no detail message.", "labels": []}
{"id": 18640, "text": "A possibly null environment property set.", "labels": []}
{"id": 18641, "text": "null means no environment is being recorded for this exception.", "labels": []}
{"id": 18642, "text": "The possibly null name to set the \"remaining new name\" to.", "labels": []}
{"id": 18643, "text": "If null, then no name is specified.", "labels": []}
{"id": 18644, "text": "If null, then the default initial context is implied.", "labels": []}
{"id": 18645, "text": "a List of BufferedImages, or null.", "labels": []}
{"id": 18646, "text": "an IIOMetadata object, or null.", "labels": []}
{"id": 18647, "text": "a List of BufferedImage thumbnails, or null.", "labels": []}
{"id": 18648, "text": "the algorithm parameters, or null if no additional parameters", "labels": []}
{"id": 18649, "text": "the start date, inclusive, specifying the chronology of the calculation, not null", "labels": []}
{"id": 18650, "text": "the end date, exclusive, in any chronology, not null", "labels": []}
{"id": 18651, "text": "the period to add, not null", "labels": []}
{"id": 18652, "text": "the period to subtract, not null", "labels": []}
{"id": 18653, "text": "The non-null context in which the exception was thrown.", "labels": []}
{"id": 18654, "text": "The non-null NamingException that was thrown.", "labels": []}
{"id": 18655, "text": "The non-null naming listener on which to invoke the method.", "labels": []}
{"id": 18656, "text": "An object that implements the URIResolver interface, or null.", "labels": []}
{"id": 18657, "text": "A non-null String that specifies an output property name, which may be namespace qualified.", "labels": []}
{"id": 18658, "text": "The non-null string value of the output property.", "labels": []}
{"id": 18659, "text": "the non-null item to be inserted", "labels": []}
{"id": 18660, "text": "the position at which the item should be inserted", "labels": []}
{"id": 18661, "text": "This must not be null.", "labels": []}
{"id": 18662, "text": "This may be null.", "labels": []}
{"id": 18663, "text": "a Throwable associated with log message; can be null.", "labels": []}
{"id": 18664, "text": "a resource bundle to localize msg; can be null.", "labels": []}
{"id": 18665, "text": "the string message (or a key in the message catalog, if bundle is not null); can be null.", "labels": []}
{"id": 18666, "text": "a Throwable associated with the log message; can be null.", "labels": []}
{"id": 18667, "text": "a resource bundle to localize format; can be null.", "labels": []}
{"id": 18668, "text": "the string message format in MessageFormat format, (or a key in the message catalog if bundle is not null); can be null.", "labels": []}
{"id": 18669, "text": "an optional list of parameters to the message (may be none).", "labels": []}
{"id": 18670, "text": "The possibly null list of unexecuted modifications.", "labels": []}
{"id": 18671, "text": "A negative number indicates the number of milliseconds before January 1, 1970, 00:00:00 GMT.", "labels": []}
{"id": 18672, "text": "a function to be applied after the subscriber has completed", "labels": []}
{"id": 18673, "text": "an optional line separator: can be null, in which case lines will be delimited in the manner of BufferedReader.readLine().", "labels": []}
{"id": 18674, "text": "the value of U to return as the body, may be null", "labels": []}
{"id": 18675, "text": "any options to use when opening/creating the file", "labels": []}
{"id": 18676, "text": "open options used when opening the file", "labels": []}
{"id": 18677, "text": "An input source reference that must be non-null and that will be passed to the parse method of the reader.", "labels": []}
{"id": 18678, "text": "if true, the data in the raster has been premultiplied with alpha.", "labels": []}
{"id": 18679, "text": "if not null, the rgb pixels are written here", "labels": []}
{"id": 18680, "text": "true if the alpha has been premultiplied; false otherwise.", "labels": []}
{"id": 18681, "text": "a WritableRaster to hold the returned part of the image, or null", "labels": []}
{"id": 18682, "text": "The value to which the attribute element should be set.", "labels": []}
{"id": 18683, "text": "the dimension of arrays described by this ArrayType instance; must be greater than or equal to 1.", "labels": []}
{"id": 18684, "text": "the open type of element values contained in the arrays described by this ArrayType instance; must be an instance of either SimpleType, CompositeType, TabularType or another ArrayType with a SimpleType, CompositeType or TabularType as its elementType.", "labels": []}
{"id": 18685, "text": "true when this array describes primitive arrays.", "labels": []}
{"id": 18686, "text": "the object to be compared for equality with this ArrayType instance; if obj is null or is not an instance of the class ArrayType this method returns false.", "labels": []}
{"id": 18687, "text": "the character set to use when converting bytes to characters", "labels": []}
{"id": 18688, "text": "the synchronized lines for which synchronization should be released, or null for all this mixer's synchronized lines", "labels": []}
{"id": 18689, "text": "true if the synchronization must be precisely maintained (i.e., the synchronization must be sample-accurate) at all times during operation of the lines, or false if precise synchronization is required only during start and stop operations", "labels": []}
{"id": 18690, "text": "The index of the first character to be used; must be non-negative and no larger than csq.length().", "labels": []}
{"id": 18691, "text": "The index of the character following the last character to be used; must be no smaller than start and no larger than csq.length().", "labels": []}
{"id": 18692, "text": "The offset within the array of the first char to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 18693, "text": "The maximum number of chars to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 18694, "text": "The source buffer from which chars are to be read; must not be this buffer", "labels": []}
{"id": 18695, "text": "The offset within the array of the first char to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 18696, "text": "The number of chars to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 18697, "text": "The offset within the string of the first char to be read; must be non-negative and no larger than string.length()", "labels": []}
{"id": 18698, "text": "The offset within the string of the last char to be read, plus one; must be non-negative and no larger than string.length()", "labels": []}
{"id": 18699, "text": "The index, relative to the current position, of the first character in the subsequence; must be non-negative and no larger than remaining()", "labels": []}
{"id": 18700, "text": "The index, relative to the current position, of the character following the last character in the subsequence; must be no smaller than start and no larger than remaining()", "labels": []}
{"id": 18701, "text": "if true, the activator contacts the group to obtain the remote object's reference; if false, returning the cached value is allowed.", "labels": []}
{"id": 18702, "text": "whether to reset the card after disconnecting.", "labels": []}
{"id": 18703, "text": "Note that this object should not be modified by the PropertyEditor, rather the PropertyEditor should create a new object to hold any modified value.", "labels": []}
{"id": 18704, "text": "A non-null control.", "labels": []}
{"id": 18705, "text": "The non-null control object containing the OID and BER data.", "labels": []}
{"id": 18706, "text": "The possibly null context in which the control is being created.", "labels": []}
{"id": 18707, "text": "If null, no such information is available.", "labels": []}
{"id": 18708, "text": "The possibly null environment of the context.", "labels": []}
{"id": 18709, "text": "location to find a Tab after", "labels": []}
{"id": 18710, "text": "the TabSet instance which this instance should be compared to.", "labels": []}
{"id": 18711, "text": "An object representing value of the attribute before the change.", "labels": []}
{"id": 18712, "text": "An object representing value of the attribute after the change.", "labels": []}
{"id": 18713, "text": "a nested exception", "labels": []}
{"id": 18714, "text": "the location of the error", "labels": []}
{"id": 18715, "text": "the exception that was raised while loading the class", "labels": []}
{"id": 18716, "text": "the output stream to which RMI calls should be logged", "labels": []}
{"id": 18717, "text": "the number of threads that must invoke await() before the barrier is tripped", "labels": []}
{"id": 18718, "text": "the command to execute when the barrier is tripped, or null if there is no action", "labels": []}
{"id": 18719, "text": "the Component that is the basis for a focus traversal operation if the specified event represents a focus traversal key for the Component", "labels": []}
{"id": 18720, "text": "The object to be attached; may be null", "labels": []}
{"id": 18721, "text": "If the descriptor does not contain all the following fields, the missing ones are added with their default values: displayName, name, role, descriptorType.", "labels": []}
{"id": 18722, "text": "the server host name with which to connect, or null for the loopback address.", "labels": []}
{"id": 18723, "text": "the request to open a list of files, and the search term used to find them, if any.", "labels": []}
{"id": 18724, "text": "If of zero length, the returns result will be a default instance of SizeRequirements.", "labels": []}
{"id": 18725, "text": "This argument is optional and may be null.", "labels": []}
{"id": 18726, "text": "tile with offsets increasing from 0 if true and with offsets decreasing from the end of the allocated space if false.", "labels": []}
{"id": 18727, "text": "when true, the alignment value 0.0f means left/top; when false, it means right/bottom.", "labels": []}
{"id": 18728, "text": "If non-null, specifies legal characters.", "labels": []}
{"id": 18729, "text": "If non-null, specifies illegal characters.", "labels": []}
{"id": 18730, "text": "String used when formatting if the value does not completely fill the mask", "labels": []}
{"id": 18731, "text": "Character used when formatting if the value does not completely fill the mask", "labels": []}
{"id": 18732, "text": "Used to indicate if literal characters in mask should be returned in stringToValue", "labels": []}
{"id": 18733, "text": "Must be non-null.", "labels": []}
{"id": 18734, "text": "The name of the level to set on the specified logger, or null if setting the level to inherit from its nearest ancestor.", "labels": []}
{"id": 18735, "text": "If values.size() is less that the length of the array, the first values.size() elements are set.", "labels": []}
{"id": 18736, "text": "currently unused and must be set to null", "labels": []}
{"id": 18737, "text": "a string identifying the file or null if not known.", "labels": []}
{"id": 18738, "text": "a string identifying the other file or null if there isn't another file or if not known", "labels": []}
{"id": 18739, "text": "a reason message with additional information or null", "labels": []}
{"id": 18740, "text": "the text, in MessageFormat, to be used as the header, or null for no header", "labels": []}
{"id": 18741, "text": "the text, in MessageFormat, to be used as the footer, or null for no footer", "labels": []}
{"id": 18742, "text": "true to display a print dialog, false otherwise", "labels": []}
{"id": 18743, "text": "initial PrintService, or null for the default", "labels": []}
{"id": 18744, "text": "the job attributes to be applied to the print job, or null for none", "labels": []}
{"id": 18745, "text": "whether to print in an interactive mode", "labels": []}
{"id": 18746, "text": "the new check box group, or null to remove this check box from any check box group", "labels": []}
{"id": 18747, "text": "Elements of this array can be null.", "labels": []}
{"id": 18748, "text": "Also, the delegationSubjects parameter itself can be null, which is equivalent to an array of null values with the same size as the names and filters arrays.", "labels": []}
{"id": 18749, "text": "If negative, it is interpreted as meaning the sequence number that the next notification will have.", "labels": []}
{"id": 18750, "text": "The TargetedNotification array in the returned NotificationResult can have more elements than this if the same notification appears more than once.", "labels": []}
{"id": 18751, "text": "The behavior is unspecified if this parameter is negative.", "labels": []}
{"id": 18752, "text": "This can be 0 to indicate that the method should not wait if there are no notifications, but should return at once.", "labels": []}
{"id": 18753, "text": "the text to parse such as \"2007\", not null", "labels": []}
{"id": 18754, "text": "the month-day to validate, null returns false", "labels": []}
{"id": 18755, "text": "the end date, exclusive, which is converted to a Year, not null", "labels": []}
{"id": 18756, "text": "the month-day to use, not null", "labels": []}
{"id": 18757, "text": "the other year to compare to, not null", "labels": []}
{"id": 18758, "text": "the String representing the URL that must be parsed.", "labels": []}
{"id": 18759, "text": "This is just past the ':' (if there is one) that specifies the determination of the protocol name.", "labels": []}
{"id": 18760, "text": "This is the end of the string or the position of the \"#\" character, if present.", "labels": []}
{"id": 18761, "text": "All information after the sharp sign indicates an anchor.", "labels": []}
{"id": 18762, "text": "the object to be compared for equality with this TabularType instance; if obj is null, equals returns false.", "labels": []}
{"id": 18763, "text": "the JTable that is asking the renderer to draw; can be null", "labels": []}
{"id": 18764, "text": "true if the cell is to be rendered with the selection highlighted; otherwise false", "labels": []}
{"id": 18765, "text": "if true, render cell appropriately.", "labels": []}
{"id": 18766, "text": "For example, put a special border on the cell, if the cell can be edited, render in the color used to indicate editing", "labels": []}
{"id": 18767, "text": "When drawing the header, the value of row is -1", "labels": []}
{"id": 18768, "text": "the zone ID as defined by ZoneId, not null", "labels": []}
{"id": 18769, "text": "the provider to register, not null", "labels": []}
{"id": 18770, "text": "whether the rules are being queried for caching, true if the returned rules will be cached by ZoneId, false if they will be returned to the user without being cached in ZoneId", "labels": []}
{"id": 18771, "text": "the The GSS error code for the problem causing this exception to be thrown.", "labels": []}
{"id": 18772, "text": "the GSS error code for the problem causing this exception to be thrown.", "labels": []}
{"id": 18773, "text": "the mechanism level error code for the problem causing this exception to be thrown.", "labels": []}
{"id": 18774, "text": "the textual explanation of the mechanism error code.", "labels": []}
{"id": 18775, "text": "the mechanism specific error code", "labels": []}
{"id": 18776, "text": "textual explanation of the mechanism error code", "labels": []}
{"id": 18777, "text": "the logical style to assign to the paragraph, null if none", "labels": []}
{"id": 18778, "text": "true if the previous attributes should be replaced before setting the new attributes", "labels": []}
{"id": 18779, "text": "the detail message; may be null", "labels": []}
{"id": 18780, "text": "position of child component (must be <= 0)", "labels": []}
{"id": 18781, "text": "true if authorization is allowed; false otherwise", "labels": []}
{"id": 18782, "text": "The notation public identifier, or null if not available.", "labels": []}
{"id": 18783, "text": "The entity public identifier, or null if not available.", "labels": []}
{"id": 18784, "text": "The Namespace URI, or the empty string if the element has no Namespace URI or if Namespace processing is not being performed.", "labels": []}
{"id": 18785, "text": "The local name (without prefix), or the empty string if Namespace processing is not being performed.", "labels": []}
{"id": 18786, "text": "The qualified name (with prefix), or the empty string if qualified names are not available.", "labels": []}
{"id": 18787, "text": "The processing instruction data, or null if none is supplied.", "labels": []}
{"id": 18788, "text": "The error information encoded as an exception.", "labels": []}
{"id": 18789, "text": "The warning information encapsulated in a transformer exception.", "labels": []}
{"id": 18790, "text": "The error information encapsulated in a transformer exception.", "labels": []}
{"id": 18791, "text": "The error information encapsulated in a TransformerException.", "labels": []}
{"id": 18792, "text": "the detail message (or null if none)", "labels": []}
{"id": 18793, "text": "the cause (or null if none)", "labels": []}
{"id": 18794, "text": "the certification path that was in the process of being validated when the error was encountered", "labels": []}
{"id": 18795, "text": "the index of the certificate in the certification path that caused the error (or -1 if not applicable).", "labels": []}
{"id": 18796, "text": "Note that the list of certificates in a CertPath is zero based.", "labels": []}
{"id": 18797, "text": "true if a lightweight panel is desired, false otherwise", "labels": []}
{"id": 18798, "text": "the component to be displayed when this tab is clicked.", "labels": []}
{"id": 18799, "text": "the component to be displayed when this tab is clicked", "labels": []}
{"id": 18800, "text": "the tab index where the title should be set", "labels": []}
{"id": 18801, "text": "the tab index where the icon should be set", "labels": []}
{"id": 18802, "text": "the tab index where the disabled icon should be set", "labels": []}
{"id": 18803, "text": "the icon to be displayed in the tab when disabled", "labels": []}
{"id": 18804, "text": "the tab index where the tooltip text should be set", "labels": []}
{"id": 18805, "text": "the tab index where the background should be set", "labels": []}
{"id": 18806, "text": "the tab index where the foreground should be set", "labels": []}
{"id": 18807, "text": "the tab index which should be enabled/disabled", "labels": []}
{"id": 18808, "text": "whether or not the tab should be enabled", "labels": []}
{"id": 18809, "text": "the tab index where the component should be set", "labels": []}
{"id": 18810, "text": "If true, sets the access permission to allow write operations; if false to disallow write operations", "labels": []}
{"id": 18811, "text": "If true, the write permission applies only to the owner's write permission; otherwise, it applies to everybody.", "labels": []}
{"id": 18812, "text": "If the underlying file system can not distinguish the owner's write permission from that of others, then the permission will apply to everybody, regardless of this value.", "labels": []}
{"id": 18813, "text": "If true, sets the access permission to allow read operations; if false to disallow read operations", "labels": []}
{"id": 18814, "text": "If true, the read permission applies only to the owner's read permission; otherwise, it applies to everybody.", "labels": []}
{"id": 18815, "text": "If the underlying file system can not distinguish the owner's read permission from that of others, then the permission will apply to everybody, regardless of this value.", "labels": []}
{"id": 18816, "text": "If true, sets the access permission to allow execute operations; if false to disallow execute operations", "labels": []}
{"id": 18817, "text": "If true, the execute permission applies only to the owner's execute permission; otherwise, it applies to everybody.", "labels": []}
{"id": 18818, "text": "If the underlying file system can not distinguish the owner's execute permission from that of others, then the permission will apply to everybody, regardless of this value.", "labels": []}
{"id": 18819, "text": "The prefix string to be used in generating the file's name; must be at least three characters long", "labels": []}
{"id": 18820, "text": "The suffix string to be used in generating the file's name; may be null, in which case the suffix \".tmp\" will be used", "labels": []}
{"id": 18821, "text": "The directory in which the file is to be created, or null if the default temporary-file directory is to be used", "labels": []}
{"id": 18822, "text": "true to specify that the split pane should provide a collapse/expand widget", "labels": []}
{"id": 18823, "text": "true if the components should continuously be redrawn as the divider changes position", "labels": []}
{"id": 18824, "text": "true enables read-only mode; false disables it", "labels": []}
{"id": 18825, "text": "(Note that Connection.TRANSACTION_NONE cannot be used because it specifies that transactions are not supported.)", "labels": []}
{"id": 18826, "text": "a flag indicating whether auto-generated keys should be returned; one of Statement.RETURN_GENERATED_KEYS or Statement.NO_GENERATED_KEYS", "labels": []}
{"id": 18827, "text": "an array of column indexes indicating the columns that should be returned from the inserted row or rows", "labels": []}
{"id": 18828, "text": "an array of column names indicating the columns that should be returned from the inserted row or rows", "labels": []}
{"id": 18829, "text": "If the timeout period expires before the operation completes, this method returns false.", "labels": []}
{"id": 18830, "text": "If the value is null, the current value of the specified property is cleared.", "labels": []}
{"id": 18831, "text": "If the JDBC driver does not support milliseconds, the JDBC driver will round the value up to the nearest second.", "labels": []}
{"id": 18832, "text": "If the timeout period expires before the operation completes, a SQLException will be thrown.", "labels": []}
{"id": 18833, "text": "The sharding key may be null", "labels": []}
{"id": 18834, "text": "The super sharding key may be null.", "labels": []}
{"id": 18835, "text": "time in seconds before which the validation process is expected to be completed, otherwise the validation process is aborted.", "labels": []}
{"id": 18836, "text": "time in seconds before which the validation process is expected to be completed,else the validation process is aborted.", "labels": []}
{"id": 18837, "text": "the non-null key of the attribute binding", "labels": []}
{"id": 18838, "text": "the standard offset, not null", "labels": []}
{"id": 18839, "text": "the wall offset, not null", "labels": []}
{"id": 18840, "text": "true if the event request is to be enabled; false otherwise.", "labels": []}
{"id": 18841, "text": "the number of ocurrences before generating an event.", "labels": []}
{"id": 18842, "text": "true indicates that all word tokens should be lowercased.", "labels": []}
{"id": 18843, "text": "the new exception that will be added to the end of the SQLException chain", "labels": []}
{"id": 18844, "text": "the string used to identify the MIME type for this flavor; if the mimeType does not specify a \"class=\" parameter, or if the class is not successfully loaded, then an IllegalArgumentException is thrown", "labels": []}
{"id": 18845, "text": "the human-readable string used to identify this flavor; if this parameter is null then the value of the MIME Content Type is used", "labels": []}
{"id": 18846, "text": "the string used to identify the MIME type for this flavor; if the class specified by \"class=\" parameter is not successfully loaded, then a ClassNotFoundException is thrown", "labels": []}
{"id": 18847, "text": "the exception to convert", "labels": []}
{"id": 18848, "text": "an array of objects containing the values of the arguments passed in the method invocation on the proxy instance, or null if interface method takes no arguments.", "labels": []}
{"id": 18849, "text": "The offset within the array of the first int to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 18850, "text": "The maximum number of ints to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 18851, "text": "The source buffer from which ints are to be read; must not be this buffer", "labels": []}
{"id": 18852, "text": "The offset within the array of the first int to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 18853, "text": "The number of ints to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 18854, "text": "Possibly null additional detail about this exception", "labels": []}
{"id": 18855, "text": "A nonnull name to be resolved relative to this context.", "labels": []}
{"id": 18856, "text": "the initial Cursor for this drag operation or null for the default cursor handling; see class level documentation for more details on the cursor handling mechanism during drag and drop", "labels": []}
{"id": 18857, "text": "the Image to drag (or null)", "labels": []}
{"id": 18858, "text": "the initial Cursor for this drag operation, or null for the default cursor handling; see class level documentation for more details on the cursor handling during drag and drop", "labels": []}
{"id": 18859, "text": "Note that while null is not prohibited, it is not acceptable as a parameter.", "labels": []}
{"id": 18860, "text": "The function f may return null to indicate that the property k will not be added to the resulting configuration.", "labels": []}
{"id": 18861, "text": "If mapper is null then (k) -> ((o, n) -> n) is assumed.", "labels": []}
{"id": 18862, "text": "A null value for o or n indicates that no value was present for k in the corresponding configuration.", "labels": []}
{"id": 18863, "text": "A configuration listener that will be invoked after the configuration changed.", "labels": []}
{"id": 18864, "text": "an event object describing the source of the event, the statement that is invalid and the exception the driver is about to throw.", "labels": []}
{"id": 18865, "text": "This value is conveyed to tryAcquire(long) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 18866, "text": "This value is conveyed to tryRelease(long) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 18867, "text": "This value is conveyed to tryAcquireShared(long) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 18868, "text": "This value is conveyed to tryReleaseShared(long) but is otherwise uninterpreted and can represent anything you like.", "labels": []}
{"id": 18869, "text": "the list object to select or null to clear the selection", "labels": []}
{"id": 18870, "text": "if true, objects will be returned; if false, objects will not be returned.", "labels": []}
{"id": 18871, "text": "the message type (INFORMATION, WARNING or ERROR).", "labels": []}
{"id": 18872, "text": "a flag indicating whether this text component is user editable.", "labels": []}
{"id": 18873, "text": "the name of the environment property to add; may not be null", "labels": []}
{"id": 18874, "text": "the value of the property to add; may not be null", "labels": []}
{"id": 18875, "text": "the service of interest (should be non-null)", "labels": []}
{"id": 18876, "text": "a ParsePosition object with index and error index information as described above", "labels": []}
{"id": 18877, "text": "true if compact numbers should be parsed as integers only; false otherwise", "labels": []}
{"id": 18878, "text": "true if alpha information is present; false otherwise", "labels": []}
{"id": 18879, "text": "true if color samples are assumed to be premultiplied by the alpha samples; false otherwise", "labels": []}
{"id": 18880, "text": "The stratum to retrieve information from or null for the ReferenceType.defaultStratum()", "labels": []}
{"id": 18881, "text": "Return locations only within this source file or null to return locations.", "labels": []}
{"id": 18882, "text": "the stratum to use for comparing line number and source name, or null to use the default stratum", "labels": []}
{"id": 18883, "text": "the source name containing the line number, or null to match all source names", "labels": []}
{"id": 18884, "text": "true if the column is automatically numbered; false if it is not", "labels": []}
{"id": 18885, "text": "true if the column is case sensitive; false if it is not", "labels": []}
{"id": 18886, "text": "true if the column can be used in a WHERE clause; false if it cannot", "labels": []}
{"id": 18887, "text": "true if the column is a cash value; false if it is not", "labels": []}
{"id": 18888, "text": "one of the following constants: ResultSetMetaData.columnNoNulls, ResultSetMetaData.columnNullable, or ResultSetMetaData.columnNullableUnknown", "labels": []}
{"id": 18889, "text": "true if the column is a signed number; false if it is not", "labels": []}
{"id": 18890, "text": "a string value; may be null", "labels": []}
{"id": 18891, "text": "the logical name of the data source for this RowSet object; may be null", "labels": []}
{"id": 18892, "text": "the SQL query that will be used to get the data for this RowSet object; may be null", "labels": []}
{"id": 18893, "text": "true if read-only; false if updatable", "labels": []}
{"id": 18894, "text": "one of the ResultSet constants specifying a type: ResultSet.TYPE_FORWARD_ONLY, ResultSet.TYPE_SCROLL_INSENSITIVE, or ResultSet.TYPE_SCROLL_SENSITIVE", "labels": []}
{"id": 18895, "text": "one of the ResultSet constants specifying a concurrency level: ResultSet.CONCUR_READ_ONLY or ResultSet.CONCUR_UPDATABLE", "labels": []}
{"id": 18896, "text": "the fully qualified name of an SQL UDT or the type name of the SQL structured type being referenced by a REF type; ignored if the parameter is not a UDT or REF type", "labels": []}
{"id": 18897, "text": "a component that has implemented the RowSetListener interface and wants to be notified when events occur on this RowSet object", "labels": []}
{"id": 18898, "text": "The stratum to retrieve information from or null for the defaultStratum().", "labels": []}
{"id": 18899, "text": "the stratum to use for comparing line number and source name, or null to use the defaultStratum().", "labels": []}
{"id": 18900, "text": "If zero, all instances are returned.", "labels": []}
{"id": 18901, "text": "the new standard error destination", "labels": []}
{"id": 18902, "text": "if > 0, specifies a fixed response body length and that exact number of bytes must be written to the stream acquired from getResponseBody(), or else if equal to 0, then chunked encoding is used, and an arbitrary number of bytes may be written.", "labels": []}
{"id": 18903, "text": "if <= -1, then no response body length is specified and no response body may be written.", "labels": []}
{"id": 18904, "text": "the filtered input stream to set as this object's inputstream, or null if no change.", "labels": []}
{"id": 18905, "text": "the filtered output stream to set as this object's outputstream, or null if no change.", "labels": []}
{"id": 18906, "text": "the start date, inclusive, not null", "labels": []}
{"id": 18907, "text": "The parent (if any) of this raster.", "labels": []}
{"id": 18908, "text": "Array of band indices, or null to use all bands.", "labels": []}
{"id": 18909, "text": "The class loader to be used to load provider-configuration files and provider classes, or null if the system class loader (or, failing that, the bootstrap class loader) is to be used", "labels": []}
{"id": 18910, "text": "The offset within the array of the first long to be written; must be non-negative and no larger than dst.length", "labels": []}
{"id": 18911, "text": "The maximum number of longs to be written to the given array; must be non-negative and no larger than dst.length - offset", "labels": []}
{"id": 18912, "text": "The source buffer from which longs are to be read; must not be this buffer", "labels": []}
{"id": 18913, "text": "The offset within the array of the first long to be read; must be non-negative and no larger than array.length", "labels": []}
{"id": 18914, "text": "The number of longs to be read from the given array; must be non-negative and no larger than array.length - offset", "labels": []}
{"id": 18915, "text": "This value will be null if the view has not yet been displayed.", "labels": []}
{"id": 18916, "text": "the event the editor should use to start editing", "labels": []}
{"id": 18917, "text": "a namespace prefix (or null to remove any existing mapping).", "labels": []}
{"id": 18918, "text": "type or package or module elements causally associated with the creation of this file, may be elided or null", "labels": []}
{"id": 18919, "text": "module and/or package relative to which the file should be named, or the empty string if none", "labels": []}
{"id": 18920, "text": "module and/or package relative to which the file should be searched for, or the empty string if none", "labels": []}
{"id": 18921, "text": "an optional AffineTransform to be applied to the coordinates as they are returned in the iteration, or null if untransformed coordinates are desired.", "labels": []}
{"id": 18922, "text": "the component where the x,y location is being queried; this argument is often ignored, but might be used if the UI object is stateless and shared by multiple components", "labels": []}
{"id": 18923, "text": "a Mixer.Info object representing the desired mixer, or null for the system default mixer", "labels": []}
{"id": 18924, "text": "an AudioFormat object specifying the supported audio format of the returned line, or null for any audio format", "labels": []}
{"id": 18925, "text": "the desired encoding after conversion", "labels": []}
{"id": 18926, "text": "the audio format before conversion", "labels": []}
{"id": 18927, "text": "the desired audio format after conversion", "labels": []}
{"id": 18928, "text": "the stream to which the file data should be written", "labels": []}
{"id": 18929, "text": "the instant to find the offset for, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18930, "text": "the local date-time to query, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18931, "text": "the local date-time to query for valid offsets, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18932, "text": "the local date-time to query for offset transition, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18933, "text": "the instant to find the offset information for, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18934, "text": "the date-time to check, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18935, "text": "the instant to get the next transition after, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18936, "text": "the instant to get the previous transition after, not null, but null may be ignored if the rules have a single offset for all instants", "labels": []}
{"id": 18937, "text": "the other rules, null returns false", "labels": []}
{"id": 18938, "text": "If the value of this parameter is less than the actual digest length, the method will throw a DigestException.", "labels": []}
{"id": 18939, "text": "This parameter is ignored if its value is greater than or equal to the actual digest length.", "labels": []}
{"id": 18940, "text": "the text to be displayed; if text is null, the empty string \"\" will be displayed", "labels": []}
{"id": 18941, "text": "the number of rows; if rows is less than 0, rows is set to 0", "labels": []}
{"id": 18942, "text": "the number of columns; if columns is less than 0, columns is set to 0", "labels": []}
{"id": 18943, "text": "the non-null text to insert", "labels": []}
{"id": 18944, "text": "the non-null text to append", "labels": []}
{"id": 18945, "text": "the non-null text to use as the replacement", "labels": []}
{"id": 18946, "text": "true if the attribute has a getter exposed for management.", "labels": []}
{"id": 18947, "text": "true if the attribute has a setter exposed for management.", "labels": []}
{"id": 18948, "text": "true if the attribute's getter is of the form isXXX.", "labels": []}
{"id": 18949, "text": "must be a valid value for the openType specified for this attribute; default value not supported for ArrayType and TabularType; can be null, in which case it means that no default value is set.", "labels": []}
{"id": 18950, "text": "must be valid for the openType specified for this attribute; can be null, in which case it means that no minimal value is set.", "labels": []}
{"id": 18951, "text": "must be valid for the openType specified for this attribute; can be null, in which case it means that no maximal value is set.", "labels": []}
{"id": 18952, "text": "a filter that can be used to inspect each header-name-and-value pair in the given map to determine if it should, or should not, be added to the to the HTTP headers", "labels": []}
{"id": 18953, "text": "destination of tool errors, and user code errors", "labels": []}
{"id": 18954, "text": "destination of tool start-up and fatal errors", "labels": []}
{"id": 18955, "text": "destination of user code error output.", "labels": []}
{"id": 18956, "text": "For example, user snippet System.err.println(\"Oops\") when executed Oops goes to userErr.", "labels": []}
{"id": 18957, "text": "the allocation given to the view, which may need to be adjusted.", "labels": []}
{"id": 18958, "text": "the type for which to check if the member is accessible", "labels": []}
{"id": 18959, "text": "The errorType for which we want to get the original type.", "labels": []}
{"id": 18960, "text": "This can be null, in which case it is assumed that there is no external embedding information.", "labels": []}
{"id": 18961, "text": "true if children should be taken into account", "labels": []}
{"id": 18962, "text": "indicates whether this Container is the root of a focus traversal cycle", "labels": []}
{"id": 18963, "text": "indicates whether this container will be used to provide focus traversal policy", "labels": []}
{"id": 18964, "text": "This parameter may be null if the current execution Thread has no associated ProtectionDomains.", "labels": []}
{"id": 18965, "text": "the ProtectionDomains inherited from the parent Thread, or the ProtectionDomains from the privileged context, if a call to AccessController.doPrivileged(..., context) had occurred This parameter may be null if there were no ProtectionDomains inherited from the parent Thread, or from the privileged context.", "labels": []}
{"id": 18966, "text": "true if the button's text property should not reflect that of the Action; the default is false", "labels": []}
{"id": 18967, "text": "true if the button is selected, otherwise false", "labels": []}
{"id": 18968, "text": "the space between icon and text if these properties are set.", "labels": []}
{"id": 18969, "text": "the Action for the AbstractButton, or null", "labels": []}
{"id": 18970, "text": "if true and border property is not null, the border is painted", "labels": []}
{"id": 18971, "text": "if true, the focus state should be painted", "labels": []}
{"id": 18972, "text": "if true, the content should be filled; if false the content area is not filled", "labels": []}
{"id": 18973, "text": "if true, rollover effects should be painted", "labels": []}
{"id": 18974, "text": "flags used to repaint the button when the image is updated and which determine how much is to be painted", "labels": []}
{"id": 18975, "text": "an optional list of file attributes to set atomically when creating the directory", "labels": []}
{"id": 18976, "text": "the prefix string to be used in generating the file's name; may be null", "labels": []}
{"id": 18977, "text": "the suffix string to be used in generating the file's name; may be null, in which case \".tmp\" is used", "labels": []}
{"id": 18978, "text": "the prefix string to be used in generating the directory's name; may be null", "labels": []}
{"id": 18979, "text": "the function used to decide whether a file should be included in the returned stream", "labels": []}
{"id": 18980, "text": "the object whose run method is invoked when this thread is started.", "labels": []}
{"id": 18981, "text": "If null, this classes run method does nothing.", "labels": []}
{"id": 18982, "text": "If null and there is a security manager, the group is determined by SecurityManager.getThreadGroup().", "labels": []}
{"id": 18983, "text": "If there is not a security manager or SecurityManager.getThreadGroup() returns null, the group is set to the current thread's thread group.", "labels": []}
{"id": 18984, "text": "If null, this thread's run method is invoked.", "labels": []}
{"id": 18985, "text": "if true, inherit initial values for inheritable thread-locals from the constructing thread, otherwise no initial values are inherited", "labels": []}
{"id": 18986, "text": "if true, marks this thread as a daemon thread", "labels": []}
{"id": 18987, "text": "the context ClassLoader for this Thread, or null indicating the system class loader (or, failing that, the bootstrap class loader)", "labels": []}
{"id": 18988, "text": "the object to use as the default uncaught exception handler.", "labels": []}
{"id": 18989, "text": "If null then there is no default handler.", "labels": []}
{"id": 18990, "text": "the object to use as this thread's uncaught exception handler.", "labels": []}
{"id": 18991, "text": "If null then this thread has no explicit handler.", "labels": []}
{"id": 18992, "text": "the URL for which the Sequence should be constructed", "labels": []}
